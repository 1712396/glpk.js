var Module = {
  'print': function (text) {
    if (typeof importScripts === 'function') // is worker
      postMessage(text); 
    else
      console.log(text);
  },
  'printError': function (text) { 
    if (typeof importScripts === 'function') // is worker
      postMessage(text); 
    else
      console.log(text);
  }
};
// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;

function jsCall() {
  var args = Array.prototype.slice.call(arguments);
  return Runtime.functionPointers[args[0]].apply(null, args.slice(1));
}








//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++; // ignore const
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        if (func[i] === 'C') { // constructor
          parts.push(parts[parts.length-1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    var first = true;
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] === 'N') {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      } else {
        // not namespaced
        if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 35016;



var _stdout;
var _stdout=_stdout=allocate(1, "i32*", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate(1, "i32*", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate(1, "i32*", ALLOC_STATIC);





/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } });

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































var ___dso_handle;
var ___dso_handle=___dso_handle=allocate(1, "i32*", ALLOC_STATIC);




















































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,72,119,0,0,34,1,0,0,170,0,0,0,106,0,0,0,192,0,0,0,52,0,0,0,50,0,0,0,42,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,88,119,0,0,34,1,0,0,28,1,0,0,106,0,0,0,192,0,0,0,52,0,0,0,66,0,0,0,44,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;














































































































































































































































































































































































































































































var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocate([0,192,224,240,0,0,0,0,0,0,250,255,251,255,255,255,255,255,246,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,255,248,255,249,255,253,255,255,246,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,2,255,247,255,255,255,255,239,255,246,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,3,255,255,255,255,255,255,239,255,246,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,4,4,255,255,255,255,254,255,255,255,246,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,5,5,250,255,251,255,255,255,239,255,246,255,238,255,237,236,255,255,255,255,255,244,255,242,255,255,243,255,255,255,255,255,6,6,250,255,251,249,255,255,239,255,246,255,238,255,237,236,255,255,255,255,255,244,255,242,255,255,243,255,255,255,255,255,7,255,7,7,7,7,7,7,252,235,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,255,255,255,255,255,255,255,255,7,7,7,255,255,255,255,255,255,7,255,255,255,7,255,7,7,255,7,9,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,10,10,10,10,10,10,10,10,255,255,255,255,255,255,10,10,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,11,11,11,11,11,11,11,11,255,255,255,255,255,255,11,11,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,12,12,12,12,12,12,12,12,255,255,255,255,255,255,12,12,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,234,234,234,234,234,234,234,234,255,255,255,255,255,255,234,234,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,14,15,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,255,248,255,249,255,253,255,255,246,255,255,240,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,255,248,255,249,255,253,255,255,246,255,255,240,15,15,255,255,255,255,241,255,255,255,255,255,255,255,255,241,255,255,1,1,255,248,255,249,255,253,255,255,246,255,255,255,16,16,255,255,255,255,17,255,255,255,255,255,255,255,255,17,255,255,255,255,255,255,255,255,255,255,255,255,255,18,18,255,19,19,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,19,19,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,255,248,255,249,255,253,255,255,255,255,255,255,19,19,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,21,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,22,255,255,255,255,255,255,255,255,255,255,255,255,255,255,246,255,255,255,255,255,255,255,255,255,1,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,24,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,25,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,26,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,246,255,255,255,255,255,255,255,255,255,1,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,28,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,29,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,246,255,255,255,255,255,255,255,255,255,255,255,1,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,31,31,31,31,31,31,31,31,31,31,245,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,1,1,255,248,255,249,255,253,255,255,255,255,255,255,16,16,255,255,255,255,17,255,255,255,255,255,255,255,255,17,255,255,255,255,255,255,255,255,255,255,255,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,9,255,255,255,255,168,52,0,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,32,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,238,0,0,0,5,0,0,0,238,0,0,0,7,0,0,0,226,0,0,0,1,0,0,0,238,0,0,0,3,0,0,0,238,0,0,0,4,0,0,0,238,0,0,0,2,0,0,0,238,0,0,0,6,0,0,0,96,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,0,1,2,3,0,1,0,0,92,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,25,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,255,255,255,255,255,255,255,255,255,1,1,255,255,1,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,30,8,30,30,30,30,30,30,30,31,11,7,12,13,10,14,15,15,15,15,15,15,15,15,15,6,30,30,30,30,30,30,28,28,28,28,29,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,4,9,5,30,30,30,16,17,18,19,20,21,30,30,30,30,30,22,30,23,30,30,30,24,25,26,27,30,30,30,30,30,2,30,3,30,30,74,117,108,0,0,0,0,0,37,108,108,100,0,0,0,0,103,108,112,95,103,101,116,95,99,111,108,95,117,98,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,74,117,110,0,0,0,0,0,117,114,99,32,38,38,32,42,112,111,115,0,0,0,0,0,65,112,114,0,0,0,0,0,37,102,0,0,0,0,0,0,77,97,114,0,0,0,0,0,78,85,76,76,32,33,61,32,115,116,114,0,0,0,0,0,70,101,98,0,0,0,0,0,93,0,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,74,97,110,0,0,0,0,0,91,0,0,0,0,0,0,0,48,32,60,61,32,108,101,110,50,32,38,38,32,108,101,110,50,32,60,61,32,110,0,0,103,108,112,95,114,101,97,108,108,111,99,0,0,0,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,109,97,120,95,103,114,111,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,100,101,108,116,97,32,33,61,32,48,0,0,0,0,0,0,109,105,110,95,105,32,33,61,32,109,105,110,95,105,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,106,95,112,116,114,32,60,32,106,95,101,110,100,0,0,0,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,83,84,82,73,78,71,0,0,0,0,0,0,0,91,93,0,0,0,0,0,0,73,73,0,0,0,0,0,0,99,115,97,45,62,112,104,97,115,101,32,61,61,32,49,32,124,124,32,99,115,97,45,62,112,104,97,115,101,32,61,61,32,50,0,0,0,0,0,0,49,32,60,61,32,106,32,38,38,32,106,32,60,61,32,108,112,45,62,110,0,0,0,0,112,97,114,109,32,61,61,32,112,97,114,109,0,0,0,0,117,32,33,61,32,43,68,66,76,95,77,65,88,0,0,0,113,45,62,117,98,32,33,61,32,43,68,66,76,95,77,65,88,0,0,0,0,0,0,0,99,111,108,45,62,106,32,61,61,32,106,0,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,103,108,112,95,97,100,100,95,114,111,119,115,58,32,110,114,115,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,114,111,119,115,10,0,49,32,60,61,32,106,32,38,38,32,106,32,60,61,32,109,0,0,0,0,0,0,0,0,92,117,37,48,52,120,0,0,108,112,102,95,98,116,114,97,110,58,32,116,104,101,32,102,97,99,116,111,114,105,122,97,116,105,111,110,32,105,115,32,110,111,116,32,118,97,108,105,100,10,0,0,0,0,0,0,79,99,116,111,98,101,114,0,40,42,112,111,115,32,61,61,32,99,104,41,32,38,38,32,34,73,110,118,97,108,105,100,32,85,84,70,56,34,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,116,111,108,95,112,105,118,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,116,121,112,101,0,0,0,0,65,117,103,117,115,116,0,0,99,108,101,110,0,0,0,0,103,108,112,95,103,101,116,95,99,111,108,95,108,98,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,74,117,108,121,0,0,0,0,110,101,120,116,32,62,32,112,111,115,0,0,0,0,0,0,74,117,110,101,0,0,0,0,34,0,0,0,0,0,0,0,77,97,121,0,0,0,0,0,34,34,0,0,0,0,0,0,65,112,114,105,108,0,0,0,125,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,44,0,0,0,0,0,0,0,99,110,116,91,105,93,32,62,32,48,0,0,0,0,0,0,103,108,112,95,114,101,97,108,108,111,99,58,32,110,32,61,32,37,100,44,32,115,105,122,101,32,61,32,37,100,59,32,98,108,111,99,107,32,116,111,111,32,108,97,114,103,101,10,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,101,112,115,95,116,111,108,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,115,118,97,95,114,101,115,105,122,101,95,97,114,101,97,58,32,100,101,108,116,97,32,61,32,37,100,10,0,0,0,0,105,95,112,116,114,32,60,32,105,95,101,110,100,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,112,32,61,61,32,112,112,95,105,110,118,91,115,93,32,38,38,32,113,32,61,61,32,113,113,95,105,110,100,91,115,93,0,0,0,0,0,0,0,0,106,99,45,62,112,97,114,115,101,95,98,117,102,102,101,114,95,99,111,117,110,116,32,62,61,32,49,0,0,0,0,0,48,32,38,38,32,34,80,111,115,115,105,98,108,101,32,105,110,116,101,114,110,97,108,32,101,114,114,111,114,46,34,0,73,0,0,0,0,0,0,0,73,73,0,0,0,0,0,0,50,78,0,0,0,0,0,0,110,112,112,45,62,115,111,108,32,61,61,32,71,76,80,95,83,79,76,0,0,0,0,0,108,32,33,61,32,45,68,66,76,95,77,65,88,0,0,0,113,45,62,108,98,32,60,32,113,45,62,117,98,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,48,50,46,99,0,0,114,114,114,32,33,61,32,114,114,114,0,0,0,0,0,0,74,97,110,117,97,114,121,0,103,108,112,95,115,101,116,95,111,98,106,95,100,105,114,58,32,100,105,114,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,100,105,114,101,99,116,105,111,110,32,102,108,97,103,10,0,0,0,0,0,0,58,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,108,112,45,62,116,114,101,101,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,0,48,32,60,61,32,109,32,38,38,32,109,32,60,61,32,109,48,32,43,32,110,0,0,0,58,32,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,116,111,108,95,100,106,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,103,108,112,95,100,101,108,101,116,101,95,112,114,111,98,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,123,0,0,0,0,0,0,0,103,108,112,95,101,114,97,115,101,95,112,114,111,98,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,98,110,100,115,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,123,125,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,40,78,85,76,76,32,33,61,32,111,98,106,41,32,38,38,32,40,78,85,76,76,32,33,61,32,102,109,116,41,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,102,109,116,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,102,108,97,103,91,106,93,0,103,108,112,95,114,101,97,108,108,111,99,58,32,115,105,122,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,115,117,104,108,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,0,110,111,119,32,115,118,97,45,62,110,95,109,97,120,32,61,32,37,100,44,32,115,118,97,45,62,110,32,61,32,37,100,10,0,0,0,0,0,0,0,98,105,103,32,62,32,48,46,48,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,118,112,113,32,61,61,32,48,46,48,0,0,0,0,0,0,106,99,45,62,112,97,114,115,101,95,98,117,102,102,101,114,95,99,111,117,110,116,32,61,61,32,48,0,0,0,0,0,87,97,114,110,105,110,103,58,32,110,117,109,101,114,105,99,97,108,32,105,110,115,116,97,98,105,108,105,116,121,32,40,100,117,97,108,32,115,105,109,112,108,101,120,44,32,112,104,97,115,101,32,37,115,41,10,0,0,0,0,0,0,0,0,73,0,0,0,0,0,0,0,69,81,0,0,0,0,0,0,114,101,116,32,61,61,32,48,32,124,124,32,114,101,116,32,61,61,32,71,76,80,95,69,78,79,80,70,83,32,124,124,32,114,101,116,32,61,61,32,71,76,80,95,69,78,79,68,70,83,0,0,0,0,0,0,48,32,60,61,32,114,101,116,32,38,38,32,114,101,116,32,60,61,32,50,0,0,0,0,113,45,62,108,98,32,33,61,32,45,68,66,76,95,77,65,88,0,0,0,0,0,0,0,114,111,119,45,62,105,32,61,61,32,105,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,108,112,102,95,102,116,114,97,110,58,32,116,104,101,32,102,97,99,116,111,114,105,122,97,116,105,111,110,32,105,115,32,110,111,116,32,118,97,108,105,100,10,0,0,0,0,0,0,103,108,112,95,115,101,116,95,111,98,106,95,100,105,114,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,116,111,108,95,98,110,100,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,99,111,101,102,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,95,108,105,115,116,95,114,101,115,101,114,118,101,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,99,115,111,110,95,107,118,112,95,108,105,115,116,95,114,101,115,101,114,118,101,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,107,107,32,62,32,48,0,0,103,108,112,95,114,101,97,108,108,111,99,58,32,110,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,112,105,118,95,108,105,109,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,110,95,109,97,120,32,62,32,48,0,0,0,0,0,0,0,118,114,95,108,101,110,91,105,93,32,61,61,32,49,0,0,105,95,112,116,114,32,60,32,105,95,101,110,100,0,0,0,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,78,79,78,69,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,109,32,62,32,48,32,38,38,32,110,32,62,32,48,0,0,99,104,101,99,107,95,115,116,97,98,40,99,115,97,44,32,112,97,114,109,45,62,116,111,108,95,100,106,41,32,61,61,32,48,0,0,0,0,0,0,87,97,114,110,105,110,103,58,32,110,117,109,101,114,105,99,97,108,32,105,110,115,116,97,98,105,108,105,116,121,32,40,112,114,105,109,97,108,32,115,105,109,112,108,101,120,44,32,112,104,97,115,101,32,37,115,41,10,0,0,0,0,0,0,71,77,0,0,0,0,0,0,99,111,108,45,62,108,98,32,60,32,99,111,108,45,62,117,98,0,0,0,0,0,0,0,112,45,62,112,116,114,32,33,61,32,78,85,76,76,32,38,38,32,112,45,62,112,116,114,45,62,114,95,110,101,120,116,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,0,103,108,112,95,115,111,114,116,95,109,97,116,114,105,120,58,32,80,32,61,32,37,112,59,32,105,110,118,97,108,105,100,32,112,114,111,98,108,101,109,32,111,98,106,101,99,116,10,0,0,0,0,0,0,0,0,110,112,112,32,33,61,32,110,112,112,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,111,98,106,95,110,97,109,101,58,32,111,98,106,101,99,116,105,118,101,32,110,97,109,101,32,99,111,110,116,97,105,110,115,32,105,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,40,115,41,10,0,107,32,61,61,32,110,0,0,108,112,102,45,62,105,102,117,46,117,32,61,61,32,78,85,76,76,0,0,0,0,0,0,78,85,76,76,32,33,61,32,111,98,106,0,0,0,0,0,107,32,60,61,32,110,0,0,83,105,122,101,32,111,102,32,116,114,105,97,110,103,117,108,97,114,32,112,97,114,116,32,105,115,32,37,100,10,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,114,95,116,101,115,116,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,99,111,108,32,33,61,32,99,111,108,0,0,0,0,0,0,103,108,112,95,103,101,116,95,115,106,106,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,78,85,76,76,32,33,61,32,97,114,0,0,0,0,0,0,108,112,45,62,118,97,108,105,100,0,0,0,0,0,0,0,100,105,114,101,99,116,105,111,110,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,108,111,99,45,49,32,61,61,32,108,112,45,62,110,110,122,0,0,0,0,0,0,0,0,108,112,32,33,61,32,108,112,0,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,108,112,32,33,61,32,108,112,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,99,115,97,45,62,118,97,108,105,100,32,38,38,32,99,115,97,45,62,98,102,100,32,33,61,32,78,85,76,76,0,0,108,112,45,62,110,32,61,61,32,110,0,0,0,0,0,0,80,77,0,0,0,0,0,0,108,112,45,62,109,32,61,61,32,109,0,0,0,0,0,0,65,77,0,0,0,0,0,0,111,114,105,103,95,116,121,112,101,32,33,61,32,111,114,105,103,95,116,121,112,101,0,0,49,32,60,61,32,105,32,38,38,32,105,32,60,61,32,109,0,0,0,0,0,0,0,0,112,111,111,108,45,62,99,111,117,110,116,32,62,32,48,0,103,108,112,95,114,101,97,108,108,111,99,58,32,112,116,114,32,61,32,37,112,59,32,105,110,118,97,108,105,100,32,112,111,105,110,116,101,114,10,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,112,105,118,95,116,111,108,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,110,101,119,95,110,32,62,32,110,0,0,0,0,0,0,0,118,99,95,108,101,110,91,106,93,32,61,61,32,49,0,0,97,113,95,118,97,108,91,107,93,32,33,61,32,48,46,48,0,0,0,0,0,0,0,0,106,99,45,62,112,97,114,115,101,95,98,117,102,102,101,114,91,106,99,45,62,112,97,114,115,101,95,98,117,102,102,101,114,95,99,111,117,110,116,45,49,93,32,61,61,32,39,46,39,0,0,0,0,0,0,0,116,121,112,101,32,33,61,32,116,121,112,101,0,0,0,0,87,97,114,110,105,110,103,58,32,100,117,97,108,32,100,101,103,101,110,101,114,97,99,121,59,32,115,119,105,116,99,104,105,110,103,32,116,111,32,112,114,105,109,97,108,32,115,105,109,112,108,101,120,10,0,0,99,104,101,99,107,95,115,116,97,98,40,99,115,97,44,32,112,97,114,109,45,62,116,111,108,95,98,110,100,41,32,61,61,32,48,0,0,0,0,0,80,114,111,98,108,101,109,32,100,97,116,97,32,115,101,101,109,32,116,111,32,98,101,32,119,101,108,108,32,115,99,97,108,101,100,10,0,0,0,0,110,112,112,45,62,115,111,108,32,61,61,32,71,76,80,95,77,73,80,0,0,0,0,0,112,45,62,108,98,32,61,61,32,112,45,62,117,98,0,0,33,115,99,97,108,105,110,103,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,124,37,54,100,58,32,111,98,106,32,61,32,37,49,55,46,57,101,32,32,105,110,102,101,97,115,32,61,32,37,49,48,46,51,101,32,40,37,100,41,10,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,111,98,106,95,110,97,109,101,58,32,111,98,106,101,99,116,105,118,101,32,110,97,109,101,32,116,111,111,32,108,111,110,103,10,0,0,0,0,0,0,108,112,102,45,62,105,102,117,46,102,32,61,61,32,78,85,76,76,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,49,32,60,61,32,106,32,38,38,32,106,32,60,61,32,110,0,0,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,112,114,105,99,105,110,103,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,115,116,97,116,58,32,106,32,61,32,37,100,59,32,115,116,97,116,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,115,116,97,116,117,115,10,0,0,0,0,103,108,112,95,103,101,116,95,114,105,105,58,32,105,32,61,32,37,100,59,32,114,111,119,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,32,37,54,100,58,32,37,50,52,115,32,105,110,102,101,97,115,32,61,32,37,49,48,46,51,101,32,40,37,100,41,10,0,0,0,0,0,0,0,0,110,97,109,101,0,0,0,0,99,115,97,45,62,114,101,102,99,116,32,61,61,32,48,0,101,120,97,99,116,91,105,93,32,61,61,32,49,46,48,0,97,105,106,45,62,114,95,112,114,101,118,32,61,61,32,78,85,76,76,0,0,0,0,0,103,97,109,109,97,91,105,93,32,62,61,32,48,46,48,0,103,108,112,95,115,101,116,95,109,97,116,95,99,111,108,58,32,106,32,61,32,37,100,59,32,105,110,100,91,37,100,93,32,61,32,37,100,59,32,100,117,112,108,105,99,97,116,101,32,114,111,119,32,105,110,100,105,99,101,115,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,0,0,0,115,116,97,116,91,106,93,32,33,61,32,71,76,80,95,78,83,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,109,97,116,95,99,111,108,58,32,106,32,61,32,37,100,59,32,105,110,100,91,37,100,93,32,61,32,37,100,59,32,114,111,119,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,10,0,0,0,0,0,0,0,113,32,33,61,32,48,0,0,103,108,112,95,115,101,116,95,109,97,116,95,99,111,108,58,32,106,32,61,32,37,100,59,32,108,101,110,32,61,32,37,100,59,32,116,111,111,32,109,97,110,121,32,99,111,110,115,116,114,97,105,110,116,32,99,111,101,102,102,105,99,105,101,110,116,115,10,0,0,0,0,40,49,32,61,61,32,114,111,111,116,45,62,114,101,102,99,111,117,110,116,41,32,38,38,32,34,68,101,116,101,99,116,101,100,32,109,101,109,111,114,121,32,109,105,115,109,97,110,97,103,101,109,101,110,116,32,105,110,32,116,104,101,32,112,97,114,115,101,114,46,34,0,97,108,102,97,32,33,61,32,48,46,48,0,0,0,0,0,102,108,97,103,91,106,93,32,61,61,32,50,0,0,0,0,103,108,112,95,115,101,116,95,109,97,116,95,99,111,108,58,32,106,32,61,32,37,100,59,32,108,101,110,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,99,111,108,117,109,110,32,108,101,110,103,116,104,10,0,0,0,0,0,0,0,40,40,115,116,114,117,99,116,32,112,114,101,102,105,120,32,42,41,97,116,111,109,41,45,62,115,105,122,101,32,61,61,32,115,105,122,101,0,0,0,103,108,112,95,97,108,108,111,99,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,108,117,95,115,105,122,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,110,110,110,32,62,32,48,0,112,105,118,32,33,61,32,48,46,48,0,0,0,0,0,0,118,97,108,91,105,93,32,61,61,32,48,46,48,0,0,0,106,99,45,62,116,121,112,101,32,33,61,32,74,83,79,78,95,84,95,83,84,82,73,78,71,0,0,0,0,0,0,0,100,101,108,116,97,32,33,61,32,48,46,48,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,115,112,120,48,50,46,99,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,115,112,120,48,49,46,99,0,0,32,65,0,0,0,0,0,0,48,120,48,48,32,60,61,32,114,101,116,32,38,38,32,114,101,116,32,60,61,32,48,120,70,70,0,0,0,0,0,0,113,45,62,108,98,32,60,32,113,45,62,117,98,0,0,0,103,108,112,95,115,101,116,95,109,97,116,95,99,111,108,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,112,45,62,117,98,32,33,61,32,43,68,66,76,95,77,65,88,0,0,0,0,0,0,0,115,99,97,108,105,110,103,32,61,61,32,71,76,80,95,79,70,70,32,124,124,32,115,99,97,108,105,110,103,32,61,61,32,71,76,80,95,79,78,0,115,116,97,116,32,33,61,32,115,116,97,116,0,0,0,0,80,82,79,66,76,69,77,32,72,65,83,32,85,78,66,79,85,78,68,69,68,32,83,79,76,85,84,73,79,78,10,0,98,102,100,45,62,118,97,108,105,100,0,0,0,0,0,0,103,108,112,95,115,101,116,95,109,97,116,95,99,111,108,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,110,95,109,97,120,32,62,32,48,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,111,98,106,95,110,97,109,101,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,0,0,0,0,116,99,111,108,95,118,101,99,91,112,93,32,33,61,32,48,46,48,0,0,0,0,0,0,49,32,60,61,32,105,32,38,38,32,105,32,60,61,32,109,0,0,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,109,101,116,104,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,0,0,80,82,79,66,76,69,77,32,72,65,83,32,78,79,32,70,69,65,83,73,66,76,69,32,83,79,76,85,84,73,79,78,10,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,115,116,97,116,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,103,108,112,95,115,101,116,95,115,106,106,58,32,106,32,61,32,37,100,59,32,115,106,106,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,115,99,97,108,101,32,102,97,99,116,111,114,10,0,0,0,0,103,108,112,95,102,105,110,100,95,99,111,108,58,32,99,111,108,117,109,110,32,110,97,109,101,32,105,110,100,101,120,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,10,0,97,105,106,45,62,99,95,112,114,101,118,32,61,61,32,78,85,76,76,0,0,0,0,0,48,32,60,61,32,108,101,110,32,38,38,32,108,101,110,32,60,61,32,109,0,0,0,0,120,32,62,32,48,46,48,0,118,75,101,121,32,38,38,32,40,107,101,121,61,61,67,83,79,78,95,83,84,82,40,118,75,101,121,41,41,0,0,0,103,97,109,109,97,91,105,93,32,61,61,32,49,46,48,0,109,32,62,32,48,32,38,38,32,110,32,62,32,48,0,0,79,80,84,73,77,65,76,32,83,79,76,85,84,73,79,78,32,70,79,85,78,68,10,0,103,108,112,95,115,101,116,95,109,97,116,95,114,111,119,58,32,105,32,61,32,37,100,59,32,105,110,100,91,37,100,93,32,61,32,37,100,59,32,100,117,112,108,105,99,97,116,101,32,99,111,108,117,109,110,32,105,110,100,105,99,101,115,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,98,111,117,110,100,115,0,0,100,109,112,95,99,114,101,97,116,101,95,112,111,111,108,58,32,119,97,114,110,105,110,103,58,32,100,101,98,117,103,32,109,111,100,101,32,105,115,32,111,110,10,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,111,98,106,45,62,107,118,112,46,108,105,115,116,91,110,100,120,93,32,61,61,32,107,118,112,0,0,0,0,0,0,0,112,105,118,111,116,32,33,61,32,48,46,48,0,0,0,0,107,32,61,61,32,110,0,0,112,97,114,109,32,33,61,32,112,97,114,109,0,0,0,0,106,32,62,61,32,48,0,0,103,108,112,95,115,101,116,95,109,97,116,95,114,111,119,58,32,105,32,61,32,37,100,59,32,105,110,100,91,37,100,93,32,61,32,37,100,59,32,99,111,108,117,109,110,32,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,0,115,116,114,108,101,110,40,101,110,118,45,62,116,101,114,109,95,98,117,102,41,32,60,32,84,66,85,70,95,83,73,90,69,0,0,0,0,0,0,0,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,37,100,46,37,100,0,0,0,111,98,106,45,62,107,118,112,46,99,111,117,110,116,32,62,32,48,0,0,0,0,0,0,116,121,112,101,91,107,93,32,33,61,32,71,76,80,95,70,88,0,0,0,0,0,0,0,107,32,60,61,32,110,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,105,110,105,116,105,97,108,32,98,97,115,105,115,32,105,115,32,105,108,108,45,99,111,110,100,105,116,105,111,110,101,100,10,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,101,110,118,47,97,108,108,111,99,46,99,0,103,108,112,95,115,101,116,95,109,97,116,95,114,111,119,58,32,105,32,61,32,37,100,59,32,108,101,110,32,61,32,37,100,59,32,116,111,111,32,109,97,110,121,32,99,111,110,115,116,114,97,105,110,116,32,99,111,101,102,102,105,99,105,101,110,116,115,10,0,0,0,0,78,85,76,76,32,33,61,32,100,101,115,116,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,49,32,60,61,32,106,32,38,38,32,106,32,60,61,32,110,0,0,0,0,0,0,0,0,108,112,45,62,118,97,108,105,100,0,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,105,110,105,116,105,97,108,32,98,97,115,105,115,32,105,115,32,115,105,110,103,117,108,97,114,10,0,103,108,112,95,115,101,116,95,109,97,116,95,114,111,119,58,32,105,32,61,32,37,100,59,32,108,101,110,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,114,111,119,32,108,101,110,103,116,104,32,10,0,108,112,32,33,61,32,108,112,0,0,0,0,0,0,0,0,48,32,60,32,110,95,109,97,120,32,38,38,32,110,95,109,97,120,32,60,32,73,78,84,95,77,65,88,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,112,116,114,32,60,32,101,110,100,0,0,0,0,0,0,0,78,85,76,76,32,33,61,32,115,0,0,0,0,0,0,0,110,32,62,32,48,0,0,0,116,121,112,101,91,104,101,97,100,91,112,93,93,32,33,61,32,71,76,80,95,70,82,0,108,111,99,32,61,61,32,108,112,45,62,110,110,122,43,49,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,109,97,116,95,114,111,119,58,32,105,32,61,32,37,100,59,32,114,111,119,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,105,110,105,116,105,97,108,32,98,97,115,105,115,32,105,115,32,105,110,118,97,108,105,100,10,0,0,98,102,100,32,33,61,32,98,102,100,0,0,0,0,0,0,48,32,60,61,32,110,32,38,38,32,110,32,60,32,110,95,109,97,120,0,0,0,0,0,110,32,62,32,48,0,0,0,49,32,60,61,32,113,32,38,38,32,113,32,60,61,32,110,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,99,115,111,110,95,107,118,112,0,0,0,0,0,0,0,0,99,115,97,45,62,114,101,102,99,116,32,62,32,48,0,0,108,112,32,33,61,32,108,112,0,0,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,117,110,97,98,108,101,32,116,111,32,114,101,99,111,118,101,114,32,117,110,100,101,102,105,110,101,100,32,111,114,32,110,111,110,45,111,112,116,105,109,97,108,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,111,98,106,95,99,111,101,102,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,106,99,45,62,116,121,112,101,32,33,61,32,74,83,79,78,95,84,95,70,65,76,83,69,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,118,97,108,32,61,61,32,38,67,83,79,78,95,83,80,69,67,73,65,76,95,86,65,76,85,69,83,91,67,83,79,78,95,86,65,76,95,73,78,84,95,48,93,0,0,0,0,0,99,115,97,45,62,118,97,108,105,100,0,0,0,0,0,0,37,99,37,54,100,58,32,111,98,106,32,61,32,37,49,55,46,57,101,32,32,105,110,102,101,97,115,32,61,32,37,49,48,46,51,101,32,40,37,100,41,10,0,0,0,0,0,0,79,80,84,73,77,65,76,32,83,79,76,85,84,73,79,78,32,70,79,85,78,68,32,66,89,32,76,80,32,80,82,69,80,82,79,67,69,83,83,79,82,10,0,0,0,0,0,0,49,32,60,61,32,106,32,38,38,32,106,32,60,61,32,110,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,103,108,112,95,115,101,116,95,111,98,106,95,99,111,101,102,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,0,0,0,0,40,40,115,116,114,117,99,116,32,112,114,101,102,105,120,32,42,41,97,116,111,109,41,45,62,112,111,111,108,32,61,61,32,112,111,111,108,0,0,0,104,32,33,61,32,104,0,0,103,108,112,95,97,108,108,111,99,58,32,110,32,61,32,37,100,44,32,115,105,122,101,32,61,32,37,100,59,32,98,108,111,99,107,32,116,111,111,32,108,97,114,103,101,10,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,116,121,112,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,0,115,118,97,95,97,108,108,111,99,95,118,101,99,115,58,32,110,110,110,32,61,32,37,100,10,0,0,0,0,0,0,0,40,49,32,60,61,32,107,49,32,38,38,32,107,49,32,60,32,107,50,32,38,38,32,107,50,32,60,61,32,110,41,32,124,124,32,40,107,49,32,61,61,32,110,43,49,32,38,38,32,107,50,32,61,61,32,110,41,0,0,0,0,0,0,0,48,32,60,61,32,108,101,110,32,38,38,32,108,101,110,32,60,61,32,110,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,102,105,45,62,118,97,108,105,100,0,0,0,0,0,0,0,49,32,60,61,32,105,32,38,38,32,105,32,60,61,32,110,0,0,0,0,0,0,0,0,106,99,45,62,116,121,112,101,32,33,61,32,74,83,79,78,95,84,95,78,85,76,76,0,49,32,60,61,32,107,32,38,38,32,107,32,60,61,32,109,43,110,0,0,0,0,0,0,99,115,97,45,62,112,104,97,115,101,32,61,61,32,49,0,33,108,112,45,62,118,97,108,105,100,32,38,38,32,108,112,45,62,98,102,100,32,61,61,32,78,85,76,76,0,0,0,33,108,112,45,62,118,97,108,105,100,32,38,38,32,108,112,45,62,98,102,100,32,61,61,32,78,85,76,76,0,0,0,126,37,54,100,58,32,111,98,106,32,61,32,37,49,55,46,57,101,32,32,105,110,102,101,97,115,32,61,32,37,49,48,46,51,101,10,0,0,0,0,83,99,97,108,105,110,103,46,46,46,10,0,0,0,0,0,33,40,114,111,119,45,62,108,98,32,61,61,32,45,68,66,76,95,77,65,88,32,38,38,32,114,111,119,45,62,117,98,32,61,61,32,43,68,66,76,95,77,65,88,41,0,0,0,110,112,112,32,61,61,32,110,112,112,0,0,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,98,110,100,115,58,32,106,32,61,32,37,100,59,32,116,121,112,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,99,111,108,117,109,110,32,116,121,112,101,10,0,0,0,0,0,0,0,112,45,62,108,98,32,60,32,112,45,62,117,98,0,0,0,115,111,108,32,61,61,32,71,76,80,95,83,79,76,32,124,124,32,115,111,108,32,61,61,32,71,76,80,95,73,80,84,32,124,124,32,115,111,108,32,61,61,32,71,76,80,95,77,73,80], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,79,98,106,101,99,116,105,118,101,32,115,99,97,108,101,32,102,97,99,116,111,114,32,61,32,37,103,10,0,0,0,0,40,48,32,60,32,118,45,62,108,101,110,103,116,104,41,32,38,38,32,34,72,111,119,32,100,111,32,119,101,32,104,97,118,101,32,97,32,110,111,110,45,115,105,110,103,108,101,116,111,110,32,101,109,112,116,121,32,115,116,114,105,110,103,63,34,0,0,0,0,0,0,0,49,32,60,61,32,105,32,38,38,32,105,32,60,61,32,109,0,0,0,0,0,0,0,0,99,115,97,45,62,114,101,102,99,116,32,61,61,32,48,0,99,111,108,45,62,109,105,112,120,32,61,61,32,102,108,111,111,114,40,99,111,108,45,62,109,105,112,120,41,0,0,0,114,101,116,32,33,61,32,114,101,116,0,0,0,0,0,0,79,98,106,101,99,116,105,118,101,32,115,99,97,108,101,32,102,97,99,116,111,114,32,61,32,37,103,10,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,98,110,100,115,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,98,102,100,32,33,61,32,78,85,76,76,0,0,0,0,0,108,112,102,95,102,97,99,116,111,114,105,122,101,58,32,109,32,61,32,37,100,59,32,109,97,116,114,105,120,32,116,111,111,32,98,105,103,10,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,112,114,111,98,95,110,97,109,101,58,32,112,114,111,98,108,101,109,32,110,97,109,101,32,99,111,110,116,97,105,110,115,32,105,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,40,115,41,10,0,0,115,118,97,45,62,114,95,112,116,114,32,45,32,115,118,97,45,62,109,95,112,116,114,32,62,61,32,108,101,110,95,107,0,0,0,0,0,0,0,0,116,121,112,101,91,107,93,32,61,61,32,71,76,80,95,85,80,32,124,124,32,116,121,112,101,91,107,93,32,61,61,32,71,76,80,95,68,66,0,0,103,97,109,109,97,91,106,93,32,61,61,32,49,46,48,0,48,32,60,61,32,115,105,122,101,32,38,38,32,115,105,122,101,32,60,61,32,109,105,110,95,109,110,0,0,0,0,0,33,110,112,112,45,62,115,99,97,108,105,110,103,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,115,99,108,46,99,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,109,115,103,95,108,101,118,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,80,82,79,66,76,69,77,32,72,65,83,32,78,79,32,68,85,65,76,32,70,69,65,83,73,66,76,69,32,83,79,76,85,84,73,79,78,10,0,0,114,111,119,32,33,61,32,114,111,119,0,0,0,0,0,0,103,108,112,95,115,101,116,95,115,106,106,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,103,108,112,95,115,101,116,95,114,111,119,95,98,110,100,115,58,32,105,32,61,32,37,100,59,32,116,121,112,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,114,111,119,32,116,121,112,101,10,0,0,110,112,112,32,61,61,32,110,112,112,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,112,116,114,91,107,93,32,61,61,32,48,32,38,38,32,108,101,110,91,107,93,32,61,61,32,48,32,38,38,32,99,97,112,91,107,93,32,61,61,32,48,0,0,0,0,0,0,0,107,32,60,61,32,106,32,38,38,32,106,32,60,61,32,110,0,0,0,0,0,0,0,0,116,121,112,101,91,107,93,32,61,61,32,71,76,80,95,76,79,32,124,124,32,116,121,112,101,91,107,93,32,61,61,32,71,76,80,95,68,66,0,0,112,32,33,61,32,48,0,0,99,111,108,32,33,61,32,99,111,108,0,0,0,0,0,0,112,45,62,112,116,114,32,61,61,32,78,85,76,76,0,0,80,82,79,66,76,69,77,32,72,65,83,32,78,79,32,80,82,73,77,65,76,32,70,69,65,83,73,66,76,69,32,83,79,76,85,84,73,79,78,10,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,114,111,119,95,98,110,100,115,58,32,105,32,61,32,37,100,59,32,114,111,119,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,115,117,98,106,101,99,116,84,111,0,0,0,0,0,0,0,112,45,62,108,98,32,61,61,32,45,68,66,76,95,77,65,88,32,38,38,32,112,45,62,117,98,32,61,61,32,43,68,66,76,95,77,65,88,0,0,80,97,114,115,101,95,69,88,80,69,67,84,69,68,95,67,79,76,79,78,0,0,0,0,110,101,119,95,99,97,112,32,62,32,48,0,0,0,0,0,107,32,60,61,32,105,32,38,38,32,105,32,60,61,32,110,0,0,0,0,0,0,0,0,49,32,60,61,32,113,32,38,38,32,113,32,60,61,32,110,0,0,0,0,0,0,0,0,99,115,97,45,62,114,101,102,99,116,32,62,32,48,0,0,99,111,108,45,62,116,121,112,101,32,61,61,32,71,76,80,95,70,88,0,0,0,0,0,99,111,108,45,62,110,111,100,101,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,80,114,101,112,114,111,99,101,115,115,105,110,103,46,46,46,10,0,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,103,108,112,95,103,101,116,95,99,111,108,95,110,97,109,101,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,80,97,114,115,101,95,69,88,80,69,67,84,69,68,95,75,69,89,0,0,0,0,0,0,115,118,97,45,62,109,95,112,116,114,32,60,61,32,115,118,97,45,62,114,95,112,116,114,0,0,0,0,0,0,0,0,112,116,114,32,45,32,102,99,95,112,116,114,91,106,93,32,61,61,32,108,101,110,0,0,49,32,60,61,32,112,32,38,38,32,112,32,60,61,32,109,0,0,0,0,0,0,0,0,99,115,97,45,62,118,97,108,105,100,0,0,0,0,0,0,99,111,108,45,62,116,121,112,101,32,61,61,32,71,76,80,95,70,82,0,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,110,97,109,101,58,32,106,32,61,32,37,100,58,32,99,111,108,117,109,110,32,110,97,109,101,32,99,111,110,116,97,105,110,115,32,105,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,40,115,41,10,0,0,0,0,80,97,114,115,101,95,85,78,66,65,76,65,78,67,69,68,95,67,79,76,76,69,67,84,73,79,78,0,0,0,0,0,102,97,108,115,101,0,0,0,112,116,114,91,107,93,32,43,32,108,101,110,91,107,93,32,60,61,32,115,118,97,45,62,109,95,112,116,114,0,0,0,97,95,101,110,100,32,60,61,32,115,118,97,45,62,114,95,112,116,114,0,0,0,0,0,99,115,97,45,62,116,99,111,108,95,110,110,122,32,60,61,32,99,115,97,45,62,109,0,115,116,97,116,32,33,61,32,115,116,97,116,0,0,0,0,99,111,108,45,62,116,121,112,101,32,61,61,32,71,76,80,95,85,80,32,124,124,32,99,111,108,45,62,116,121,112,101,32,61,61,32,71,76,80,95,68,66,0,0,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,110,97,109,101,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,97,109,101,32,116,111,111,32,108,111,110,103,10,0,58,32,0,0,0,0,0,0,80,97,114,115,101,95,78,69,83,84,73,78,71,95,68,69,80,84,72,95,82,69,65,67,72,69,68,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,108,101,110,91,107,93,32,61,61,32,48,0,0,0,0,0,102,99,95,99,97,112,91,106,93,32,61,61,32,48,0,0,112,105,118,49,32,61,32,37,46,49,50,103,59,32,112,105,118,50,32,61,32,37,46,49,50,103,10,0,0,0,0,0,99,115,97,45,62,116,114,111,119,95,110,110,122,32,60,61,32,99,115,97,45,62,110,0,99,111,108,45,62,116,121,112,101,32,61,61,32,71,76,80,95,76,79,32,124,124,32,99,111,108,45,62,116,121,112,101,32,61,61,32,71,76,80,95,68,66,0,0,0,0,0,0,103,108,112,95,103,101,116,95,99,111,108,95,112,114,105,109,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,108,112,45,62,99,95,116,114,101,101,32,33,61,32,78,85,76,76,0,0,0,0,0,0,80,97,114,115,101,95,73,78,86,65,76,73,68,95,78,85,77,66,69,82,0,0,0,0,112,116,114,91,107,93,32,61,61,32,48,0,0,0,0,0,116,114,117,101,0,0,0,0,102,99,95,108,101,110,91,106,93,32,61,61,32,48,0,0,112,105,118,49,32,33,61,32,48,46,48,0,0,0,0,0,112,105,118,49,32,61,32,37,46,49,50,103,59,32,112,105,118,50,32,61,32,37,46,49,50,103,10,0,0,0,0,0,114,111,119,32,33,61,32,114,111,119,0,0,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,110,97,109,101,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,49,32,60,61,32,109,32,38,38,32,109,32,60,61,32,77,95,77,65,88,0,0,0,0,80,97,114,115,101,95,73,78,86,65,76,73,68,95,85,78,73,67,79,68,69,95,83,69,81,85,69,78,67,69,0,0,115,118,97,45,62,114,95,112,116,114,32,45,32,115,118,97,45,62,109,95,112,116,114,32,62,61,32,110,101,119,95,99,97,112,0,0,0,0,0,0,112,116,114,32,45,32,118,114,95,112,116,114,91,105,93,32,61,61,32,108,101,110,0,0,112,105,118,32,61,32,37,46,49,50,103,59,32,101,112,115,32,61,32,37,103,10,0,0,112,105,118,49,32,33,61,32,48,46,48,0,0,0,0,0,105,110,102,111,45,62,115,116,97,116,32,61,61,32,71,76,80,95,78,76,32,124,124,32,105,110,102,111,45,62,115,116,97,116,32,61,61,32,71,76,80,95,78,85,0,0,0,0,114,111,119,45,62,116,121,112,101,32,61,61,32,71,76,80,95,70,88,0,0,0,0,0,48,32,60,61,32,108,101,110,32,38,38,32,108,101,110,32,60,61,32,110,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,110,97,109,101,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,109,105,115,99,47,100,109,112,46,99,0,0,73,110,118,97,108,105,100,32,71,76,80,75,32,101,110,118,105,114,111,110,109,101,110,116,10,0,0,0,0,0,0,0,103,108,112,95,97,108,108,111,99,58,32,115,105,122,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,0,0,0,0,48,32,60,32,115,105,122,101,32,38,38,32,115,105,122,101,32,60,32,73,78,84,95,77,65,88,0,0,0,0,0,0,107,49,32,60,32,107,50,0,110,95,109,97,120,32,62,61,32,110,0,0,0,0,0,0,48,32,60,61,32,110,32,38,38,32,110,32,60,61,32,110,95,109,97,120,0,0,0,0,110,102,115,95,109,97,120,32,62,32,48,0,0,0,0,0,48,32,60,61,32,97,113,95,108,101,110,32,38,38,32,97,113,95,108,101,110,32,60,61,32,110,0,0,0,0,0,0,106,99,45,62,116,121,112,101,32,33,61,32,74,83,79,78,95,84,95,84,82,85,69,0,80,97,114,115,101,95,73,78,86,65,76,73,68,95,69,83,67,65,80,69,95,83,69,81,85,69,78,67,69,0,0,0,110,101,119,95,99,97,112,32,62,32,99,97,112,91,107,93,0,0,0,0,0,0,0,0,115,118,97,45,62,109,95,112,116,114,32,60,61,32,97,95,112,116,114,0,0,0,0,0,76,80,32,72,65,83,32,85,78,66,79,85,78,68,69,68,32,68,85,65,76,32,83,79,76,85,84,73,79,78,10,0,112,105,118,32,61,32,37,46,49,50,103,59,32,101,112,115,32,61,32,37,103,10,0,0,119,104,105,99,104,32,33,61,32,119,104,105,99,104,0,0,114,111,119,45,62,116,121,112,101,32,61,61,32,71,76,80,95,70,82,0,0,0,0,0,83,111,114,114,121,44,32,98,97,115,105,115,32,114,101,99,111,118,101,114,121,32,112,114,111,99,101,100,117,114,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,121,101,116,10,0,0,0,0,83,111,114,114,121,44,32,98,97,115,105,115,32,114,101,99,111,118,101,114,121,32,112,114,111,99,101,100,117,114,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,121,101,116,10,0,0,0,0,37,115,58,32,109,105,110,124,97,105,106,124,32,61,32,37,49,48,46,51,101,32,32,109,97,120,124,97,105,106,124,32,61,32,37,49,48,46,51,101,32,32,114,97,116,105,111,32,61,32,37,49,48,46,51,101,10,0,0,0,0,0,0,0,114,101,116,32,33,61,32,114,101,116,0,0,0,0,0,0,113,45,62,112,116,114,32,61,61,32,78,85,76,76,0,0,114,111,119,45,62,110,111,100,101,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,112,45,62,108,98,32,33,61,32,45,68,66,76,95,77,65,88,0,0,0,0,0,0,0,110,97,109,101,115,32,61,61,32,71,76,80,95,79,70,70,32,124,124,32,110,97,109,101,115,32,61,61,32,71,76,80,95,79,78,0,0,0,0,0,80,97,114,115,101,95,73,78,86,65,76,73,68,95,75,69,89,87,79,82,68,0,0,0,49,32,60,61,32,107,32,38,38,32,107,32,60,61,32,115,118,97,45,62,110,0,0,0,115,118,97,45,62,114,95,112,116,114,32,45,32,115,118,97,45,62,109,95,112,116,114,32,62,61,32,108,101,110,0,0,69,114,114,111,114,58,32,117,110,97,98,108,101,32,116,111,32,99,104,111,111,115,101,32,110,111,110,45,98,97,115,105,99,32,118,97,114,105,97,98,108,101,32,111,110,32,112,104,97,115,101,32,73,10,0,0,76,80,32,72,65,83,32,85,78,66,79,85,78,68,69,68,32,80,82,73,77,65,76,32,83,79,76,85,84,73,79,78,10,0,0,0,0,0,0,0,106,45,62,117,98,32,33,61,32,43,68,66,76,95,77,65,88,0,0,0,0,0,0,0,114,111,119,45,62,116,121,112,101,32,61,61,32,71,76,80,95,85,80,32,124,124,32,114,111,119,45,62,116,121,112,101,32,61,61,32,71,76,80,95,68,66,0,0,0,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,107,105,110,100,58,32,106,32,61,32,37,100,59,32,107,105,110,100,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,99,111,108,117,109,110,32,107,105,110,100,10,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,114,111,119,95,110,97,109,101,58,32,105,32,61,32,37,100,58,32,114,111,119,32,110,97,109,101,32,99,111,110,116,97,105,110,115,32,105,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,40,115,41,10,0,0,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,108,112,102,95,102,97,99,116,111,114,105,122,101,58,32,109,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,0,0,0,110,111,100,101,32,33,61,32,78,85,76,76,0,0,0,0,103,108,112,95,115,101,116,95,112,114,111,98,95,110,97,109,101,58,32,112,114,111,98,108,101,109,32,110,97,109,101,32,116,111,111,32,108,111,110,103,10,0,0,0,0,0,0,0,80,97,114,115,101,95,73,78,86,65,76,73,68,95,67,72,65,82,0,0,0,0,0,0,115,118,97,45,62,114,95,112,116,114,32,45,32,115,118,97,45,62,109,95,112,116,114,32,62,61,32,109,95,115,105,122,101,0,0,0,0,0,0,0,118,114,95,108,101,110,91,105,93,32,61,61,32,48,0,0,79,80,84,73,77,65,76,32,76,80,32,83,79,76,85,84,73,79,78,32,70,79,85,78,68,10,0,0,0,0,0,0,69,114,114,111,114,58,32,117,110,97,98,108,101,32,116,111,32,99,104,111,111,115,101,32,98,97,115,105,99,32,118,97,114,105,97,98,108,101,32,111,110,32,112,104,97,115,101,32,73,10,0,0,0,0,0,0,67,111,110,115,116,114,117,99,116,105,110,103,32,105,110,105,116,105,97,108,32,98,97,115,105,115,46,46,46,10,0,0,106,45,62,108,98,32,33,61,32,45,68,66,76,95,77,65,88,0,0,0,0,0,0,0,114,111,119,45,62,116,121,112,101,32,61,61,32,71,76,80,95,76,79,32,124,124,32,114,111,119,45,62,116,121,112,101,32,61,61,32,71,76,80,95,68,66,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,0,108,112,32,33,61,32,108,112,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,114,111,119,95,115,116,97,116,58,32,105,32,61,32,37,100,59,32,115,116,97,116,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,115,116,97,116,117,115,10,0,0,0,0,103,108,112,95,115,101,116,95,114,105,105,58,32,105,32,61,32,37,100,59,32,114,105,105,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,115,99,97,108,101,32,102,97,99,116,111,114,10,0,0,0,0,99,111,108,45,62,110,111,100,101,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,48,57,46,99,0,0,103,108,112,95,115,101,116,95,114,111,119,95,110,97,109,101,58,32,105,32,61,32,37,100,59,32,114,111,119,32,110,97,109,101,32,116,111,111,32,108,111,110,103,10,0,0,0,0,85,110,107,110,111,119,110,69,114,114,111,114,0,0,0,0,115,105,122,101,32,62,32,48,0,0,0,0,0,0,0,0,49,32,60,61,32,107,97,32,38,38,32,107,97,32,60,61,32,110,97,0,0,0,0,0,76,80,32,72,65,83,32,78,79,32,68,85,65,76,32,70,69,65,83,73,66,76,69,32,83,79,76,85,84,73,79,78,10,0,0,0,0,0,0,0,100,49,32,61,32,37,46,49,50,103,59,32,100,50,32,61,32,37,46,49,50,103,10,0,106,45,62,108,98,32,60,32,106,45,62,117,98,0,0,0,110,112,112,45,62,111,114,105,103,95,110,110,122,32,61,61,32,111,114,105,103,45,62,110,110,122,0,0,0,0,0,0,115,0,0,0,0,0,0,0,108,112,45,62,114,95,116,114,101,101,32,33,61,32,78,85,76,76,0,0,0,0,0,0,118,97,114,115,0,0,0,0,109,95,115,105,122,101,32,62,32,115,118,97,45,62,114,95,112,116,114,32,45,32,115,118,97,45,62,109,95,112,116,114,0,0,0,0,0,0,0,0,78,111,116,70,111,117,110,100,69,114,114,111,114,0,0,0,49,32,60,61,32,110,97,32,38,38,32,110,97,32,60,61,32,110,0,0,0,0,0,0,84,73,77,69,32,76,73,77,73,84,32,69,88,67,69,69,68,69,68,59,32,83,69,65,82,67,72,32,84,69,82,77,73,78,65,84,69,68,10,0,100,49,32,33,61,32,48,46,48,0,0,0,0,0,0,0,97,116,32,61,61,32,48,32,124,124,32,97,116,32,61,61,32,49,0,0,0,0,0,0,110,112,112,45,62,111,114,105,103,95,110,32,61,61,32,111,114,105,103,45,62,110,0,0,117,115,101,100,32,62,61,32,48,0,0,0,0,0,0,0,114,111,119,45,62,108,101,118,101,108,32,61,61,32,116,114,101,101,45,62,99,117,114,114,45,62,108,101,118,101,108,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,37,115,58,32,110,111,32,109,101,109,111,114,121,32,97,118,97,105,108,97,98,108,101,10,0,0,0,0,0,0,0,0,115,118,97,95,109,111,114,101,95,115,112,97,99,101,58,32,109,95,115,105,122,101,32,61,32,37,100,10,0,0,0,0,85,110,115,117,112,112,111,114,116,101,100,69,114,114,111,114,0,0,0,0,0,0,0,0,49,32,60,61,32,107,32,38,38,32,107,32,60,61,32,110,0,0,0,0,0,0,0,0,99,115,97,32,33,61,32,99,115,97,0,0,0,0,0,0,79,80,84,73,77,65,76,32,76,80,32,83,79,76,85,84,73,79,78,32,70,79,85,78,68,10,0,0,0,0,0,0,110,112,112,45,62,111,114,105,103,95,109,32,61,61,32,111,114,105,103,45,62,109,0,0,103,108,112,95,115,101,116,95,114,111,119,95,110,97,109,101,58,32,105,32,61,32,37,100,59,32,114,111,119,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,118,95,115,105,122,101,32,60,32,110,101,119,95,115,105,122,101,0,0,0,0,0,0,0,37,100,32,114,111,119,37,115,44,32,37,100,32,99,111,108,117,109,110,37,115,44,32,37,100,32,110,111,110,45,122,101,114,111,37,115,10,0,0,0,37,115,58,32,116,111,111,32,109,97,110,121,32,109,101,109,111,114,121,32,98,108,111,99,107,115,32,97,108,108,111,99,97,116,101,100,10,0,0,0,97,102,116,101,114,32,100,101,102,114,97,103,109,101,110,116,105,110,103,32,61,32,37,100,32,37,100,32,37,100,10,0,73,110,116,101,114,110,97,108,69,114,114,111,114,0,0,0,106,32,33,61,32,113,0,0,67,0,0,0,0,0,0,0,73,84,69,82,65,84,73,79,78,32,76,73,77,73,84,32,69,88,67,69,69,68,69,68,59,32,83,69,65,82,67,72,32,84,69,82,77,73,78,65,84,69,68,10,0,0,0,0,76,80,32,72,65,83,32,78,79,32,80,82,73,77,65,76,32,70,69,65,83,73,66,76,69,32,83,79,76,85,84,73,79,78,10,0,0,0,0,0,112,45,62,108,98,32,33,61,32,45,68,66,76,95,77,65,88,0,0,0,0,0,0,0,110,112,112,45,62,111,114,105,103,95,100,105,114,32,61,61,32,111,114,105,103,45,62,100,105,114,0,0,0,0,0,0,98,104,32,61,61,32,98,104,0,0,0,0,0,0,0,0,108,112,102,45,62,66,32,61,61,32,78,85,76,76,0,0,71,76,80,75,32,83,105,109,112,108,101,120,32,79,112,116,105,109,105,122,101,114,44,32,118,37,115,10,0,0,0,0,108,112,45,62,110,95,109,97,120,32,62,32,48,0,0,0,37,115,58,32,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,108,105,109,105,116,32,101,120,99,101,101,100,101,100,10,0,0,0,109,95,112,116,114,32,60,61,32,115,118,97,45,62,114,95,112,116,114,0,0,0,0,0,108,101,110,32,60,61,32,118,114,95,108,101,110,91,105,93,0,0,0,0,0,0,0,0,78,89,73,69,114,114,111,114,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,79,66,74,69,67,84,73,86,69,32,85,80,80,69,82,32,76,73,77,73,84,32,82,69,65,67,72,69,68,59,32,83,69,65,82,67,72,32,84,69,82,77,73,78,65,84,69,68,10,0,0,0,0,0,0,0,84,73,77,69,32,76,73,77,73,84,32,69,88,67,69,69,68,69,68,59,32,83,69,65,82,67,72,32,84,69,82,77,73,78,65,84,69,68,10,0,103,108,112,95,97,100,100,95,99,111,108,115,58,32,110,99,115,32,61,32,37,100,59,32,116,111,111,32,109,97,110,121,32,99,111,108,117,109,110,115,10,0,0,0,0,0,0,0,112,45,62,117,98,32,33,61,32,43,68,66,76,95,77,65,88,0,0,0,0,0,0,0,116,115,101,45,62,102,117,110,99,40,110,112,112,44,32,116,115,101,45,62,105,110,102,111,41,32,61,61,32,48,0,0,108,112,102,45,62,110,32,60,61,32,108,112,102,45,62,110,95,109,97,120,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,99,111,108,117,109,110,32,37,100,58,32,108,98,32,61,32,37,103,44,32,117,98,32,61,32,37,103,59,32,105,110,99,111,114,114,101,99,116,32,98,111,117,110,100,115,10,0,0,0,0,0,37,115,58,32,98,108,111,99,107,32,116,111,111,32,108,97,114,103,101,10,0,0,0,0,109,95,112,116,114,32,60,61,32,112,116,114,95,107,0,0,105,32,33,61,32,112,0,0,65,108,108,111,99,69,114,114,111,114,0,0,0,0,0,0,37,46,48,76,102,0,0,0,79,66,74,69,67,84,73,86,69,32,76,79,87,69,82,32,76,73,77,73,84,32,82,69,65,67,72,69,68,59,32,83,69,65,82,67,72,32,84,69,82,77,73,78,65,84,69,68,10,0,0,0,0,0,0,0,99,115,97,32,33,61,32,99,115,97,0,0,0,0,0,0,103,108,112,95,97,100,100,95,99,111,108,115,58,32,110,99,115,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,99,111,108,117,109,110,115,10,0,0,0,0,0,0,113,45,62,112,116,114,32,33,61,32,78,85,76,76,32,38,38,32,113,45,62,112,116,114,45,62,99,95,110,101,120,116,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,0,116,115,101,45,62,102,117,110,99,32,33,61,32,78,85,76,76,0,0,0,0,0,0,0,108,112,102,32,33,61,32,108,112,102,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,114,111,119,32,37,100,58,32,108,98,32,61,32,37,103,44,32,117,98,32,61,32,37,103,59,32,105,110,99,111,114,114,101,99,116,32,98,111,117,110,100,115,10,0,0,0,0,0,0,0,0,105,110,102,111,32,61,61,32,105,110,102,111,0,0,0,0,37,115,58,32,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,101,114,114,111,114,10,0,0,0,0,98,101,102,111,114,101,32,100,101,102,114,97,103,109,101,110,116,105,110,103,32,61,32,37,100,32,37,100,32,37,100,10,0,0,0,0,0,0,0,0,112,116,114,32,62,32,48,0,73,79,69,114,114,111,114,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,101,95,98,98,97,114,32,60,61,32,49,101,45,53,32,38,38,32,101,95,99,98,97,114,32,60,61,32,49,101,45,53,32,38,38,32,101,95,103,97,109,109,97,32,60,61,32,49,101,45,51,0,0,0,0,0,73,84,69,82,65,84,73,79,78,32,76,73,77,73,84,32,69,88,67,69,69,68,69,68,59,32,83,69,65,82,67,72,32,84,69,82,77,73,78,65,84,69,68,10,0,0,0,0,33,113,45,62,105,115,95,105,110,116,0,0,0,0,0,0,110,112,112,45,62,110,110,122,32,61,61,32,112,114,111,98,45,62,110,110,122,0,0,0,103,108,112,95,97,100,100,95,99,111,108,115,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,98,102,100,46,99,0,0,0,0,0,0,0,108,112,102,95,117,112,100,97,116,101,95,105,116,58,32,118,97,108,91,37,100,93,32,61,32,37,103,59,32,122,101,114,111,32,101,108,101,109,101,110,116,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,112,114,101,115,111,108,118,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,109,105,115,99,47,116,114,105,97,110,103,46,99,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,109,105,115,99,47,114,111,117,110,100,50,110,46,99,0,0,0,0,0,0,115,116,97,116,117,115,0,0,49,32,60,61,32,115,105,122,101,32,38,38,32,115,105,122,101,32,60,61,32,50,53,54,0,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,101,110,118,47,116,105,109,101,46,99,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,101,110,118,47,115,116,100,111,117,116,46,99,0,0,0,0,0,0,0,0,69,114,114,111,114,32,100,101,116,101,99,116,101,100,32,105,110,32,102,105,108,101,32,37,115,32,97,116,32,108,105,110,101,32,37,100,10,0,0,0,71,76,80,75,32,105,110,105,116,105,97,108,105,122,97,116,105,111,110,32,102,97,105,108,101,100,10,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,101,110,118,47,100,108,115,117,112,46,99,0,103,108,112,95,97,108,108,111,99,58,32,110,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,49,50,46,99,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,98,102,108,105,98,47,115,118,97,46,99,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,98,102,108,105,98,47,115,103,102,46,99,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,98,102,108,105,98,47,108,117,102,105,110,116,46,99,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,98,102,108,105,98,47,105,102,117,46,99,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,98,102,108,105,98,47,102,104,118,105,110,116,46,99,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,98,102,108,105,98,47,102,104,118,46,99,0,106,99,45,62,116,111,112,32,60,61,32,106,99,45,62,115,116,97,99,107,95,99,97,112,97,99,105,116,121,0,0,0,46,46,47,99,115,111,110,47,99,115,111,110,95,97,109,97,108,103,97,109,97,116,105,111,110,95,99,111,114,101,46,99,0,0,0,0,0,0,0,0,83,97,116,0,0,0,0,0,110,101,119,95,99,97,112,97,99,105,116,121,32,62,32,48,0,0,0,0,0,0,0,0,99,110,116,91,105,93,32,61,61,32,48,0,0,0,0,0,37,115,58,32,112,116,114,32,61,32,37,112,59,32,105,110,118,97,108,105,100,32,112,111,105,110,116,101,114,10,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,114,115,95,115,105,122,101,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,115,118,97,95,100,101,102,114,97,103,95,97,114,101,97,58,10,0,0,0,0,0,0,0,70,114,105,0,0,0,0,0,106,95,112,116,114,32,60,32,106,95,101,110,100,0,0,0,84,121,112,101,69,114,114,111,114,0,0,0,0,0,0,0,106,99,45,62,101,114,114,111,114,32,61,61,32,74,83,79,78,95,69,95,79,85,84,95,79,70,95,77,69,77,79,82,89,0,0,0,0,0,0,0,37,76,102,0,0,0,0,0,101,95,98,98,97,114,32,61,32,37,49,48,46,51,101,59,32,101,95,99,98,97,114,32,61,32,37,49,48,46,51,101,59,32,101,95,103,97,109,109,97,32,61,32,37,49,48,46,51,101,10,0,0,0,0,0,101,95,98,98,97,114,32,60,61,32,49,101,45,53,32,38,38,32,101,95,99,98,97,114,32,60,61,32,49,101,45,53,32,38,38,32,101,95,103,97,109,109,97,32,60,61,32,49,101,45,51,0,0,0,0,0,48,32,60,61,32,117,98,95,99,104,97,110,103,101,100,32,38,38,32,117,98,95,99,104,97,110,103,101,100,32,60,61,32,52,0,0,0,0,0,0,110,112,112,45,62,110,32,61,61,32,112,114,111,98,45,62,110,0,0,0,0,0,0,0,116,114,101,101,32,33,61,32,116,114,101,101,0,0,0,0,84,104,117,0,0,0,0,0,69,114,114,111,114,58,32,117,110,97,98,108,101,32,116,111,32,102,97,99,116,111,114,105,122,101,32,116,104,101,32,98,97,115,105,115,32,109,97,116,114,105,120,32,40,37,100,41,10,0,0,0,0,0,0,0,112,97,114,115,101,95,98,117,102,102,101,114,95,104,97,115,95,115,112,97,99,101,95,102,111,114,40,106,99,44,32,49,41,0,0,0,0,0,0,0,69,114,114,111,114,58,32,117,110,97,98,108,101,32,116,111,32,102,97,99,116,111,114,105,122,101,32,116,104,101,32,98,97,115,105,115,32,109,97,116,114,105,120,32,40,37,100,41,10,0,0,0,0,0,0,0,108,112,102,95,117,112,100,97,116,101,95,105,116,58,32,105,110,100,91,37,100,93,32,61,32,37,100,59,32,100,117,112,108,105,99,97,116,101,32,114,111,119,32,105,110,100,101,120,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,87,101,100,0,0,0,0,0,74,83,79,78,95,69,95,79,85,84,95,79,70,95,77,69,77,79,82,89,32,61,61,32,106,99,45,62,101,114,114,111,114,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,105,110,105,48,49,46,99,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,111,117,116,95,100,108,121,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,103,108,112,95,115,99,97,108,101,95,112,114,111,98,58,32,102,108,97,103,115,32,61,32,48,120,37,48,50,88,59,32,105,110,118,97,108,105,100,32,115,99,97,108,105,110,103,32,111,112,116,105,111,110,115,10,0,0,0,0,0,0,0,0,84,117,101,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,110,112,112,48,53,46,99,0,0,120,32,60,32,49,54,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,110,112,112,48,51,46,99,0,0,103,108,112,107,95,118,101,114,115,105,111,110,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,110,112,112,48,50,46,99,0,0,77,111,110,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,110,112,112,48,49,46,99,0,0,106,99,45,62,112,97,114,115,101,95,98,117,102,102,101,114,95,99,111,117,110,116,32,62,61,32,54,0,0,0,0,0,83,117,110,0,0,0,0,0,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,78,85,76,76,32,124,124,32,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,70,65,76,83,69,32,124,124,32,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,84,82,85,69,32,124,124,32,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,70,76,79,65,84,32,124,124,32,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,73,78,84,69,71,69,82,32,124,124,32,106,99,45,62,116,121,112,101,32,61,61,32,74,83,79,78,95,84,95,83,84,82,73,78,71,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,78,85,76,76,32,33,61,32,99,118,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,58,58,114,101,102,99,111,117,110,116,61,48,0,0,70,114,105,100,97,121,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,115,101,108,102,45,62,118,97,108,117,101,32,61,61,32,97,114,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,115,101,108,102,45,62,118,97,108,117,101,32,61,61,32,111,98,106,0,0,0,0,0,0,107,115,32,62,32,48,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,110,114,115,95,109,97,120,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,110,111,119,32,115,118,97,45,62,115,105,122,101,32,61,32,37,100,10,0,0,0,0,0,99,115,95,112,114,101,118,91,106,93,32,61,61,32,106,0,82,97,110,103,101,69,114,114,111,114,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,100,101,102,46,97,112,105,45,62,116,121,112,101,73,68,32,33,61,32,67,83,79,78,95,84,89,80,69,95,85,78,68,69,70,0,0,0,0,0,0,84,117,101,115,100,97,121,0,98,105,110,118,95,115,116,32,38,38,32,98,98,97,114,95,115,116,32,38,38,32,99,98,97,114,95,115,116,0,0,0,101,95,98,98,97,114,32,61,32,37,49,48,46,51,101,59,32,101,95,99,98,97,114,32,61,32,37,49,48,46,51,101,59,32,101,95,103,97,109,109,97,32,61,32,37,49,48,46,51,101,10,0,0,0,0,0,48,32,60,61,32,108,98,95,99,104,97,110,103,101,100,32,38,38,32,108,98,95,99,104,97,110,103,101,100,32,60,61,32,52,0,0,0,0,0,0,113,45,62,108,98,32,61,61,32,113,45,62,117,98,0,0,110,112,112,45,62,109,32,61,61,32,112,114,111,98,45,62,109,0,0,0,0,0,0,0,77,111,110,100,97,121,0,0,48,32,38,38,32,34,85,110,104,97,110,100,108,101,100,32,116,121,112,101,32,105,110,32,99,115,111,110,95,118,97,108,117,101,95,110,101,119,40,41,33,34,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,48,49,46,99,0,0,116,114,101,101,45,62,99,117,114,114,32,33,61,32,78,85,76,76,0,0,0,0,0,0,108,112,102,95,117,112,100,97,116,101,95,105,116,58,32,105,110,100,91,37,100,93,32,61,32,37,100,59,32,114,111,119,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,83,117,110,100,97,121,0,0,99,115,111,110,95,118,97,108,117,101,58,111,98,106,101,99,116,0,0,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,111,117,116,95,102,114,113,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,103,108,112,95,115,101,116,95,99,111,108,95,107,105,110,100,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,99,115,111,110,95,118,97,108,117,101,58,115,116,114,105,110,103,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,48,32,33,61,32,101,120,116,114,97,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,48,54,46,99,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,58,105,110,116,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,58,100,111,117,98,108,101,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,108,112,102,46,99,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,58,97,114,114,97,121,0,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,97,118,108,46,99,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,48,32,61,61,32,101,120,116,114,97,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,95,110,101,119,0,0,107,115,32,61,61,32,48,0,103,108,112,95,102,114,101,101,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,117,112,100,95,116,111,108,32,61,32,37,103,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,100,101,108,116,97,32,60,32,73,78,84,95,77,65,88,32,45,32,115,118,97,45,62,115,105,122,101,0,0,0,0,0,49,32,60,61,32,113,32,38,38,32,113,32,60,61,32,110,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,65,114,103,69,114,114,111,114,0,0,0,0,0,0,0,0,115,75,101,121,0,0,0,0,112,97,114,109,32,33,61,32,112,97,114,109,0,0,0,0,98,105,110,118,95,115,116,32,38,38,32,98,98,97,114,95,115,116,32,38,38,32,99,98,97,114,95,115,116,0,0,0,103,108,112,95,97,100,118,95,98,97,115,105,115,58,32,102,108,97,103,115,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,102,108,97,103,115,10,0,0,0,0,0,0,0,102,108,97,103,32,61,61,32,48,32,124,124,32,102,108,97,103,32,61,61,32,49,0,0,112,45,62,108,98,32,60,32,112,45,62,117,98,0,0,0,103,108,112,95,115,101,116,95,112,114,111,98,95,110,97,109,101,58,32,111,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,10,0,0,0,0,0,0,0,110,112,112,45,62,111,114,105,103,95,100,105,114,32,61,61,32,112,114,111,98,45,62,100,105,114,0,0,0,0,0,0,108,112,45,62,109,95,109,97,120,32,62,32,48,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,107,118,112,32,38,38,32,107], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([118,112,45,62,107,101,121,0,103,108,112,95,115,105,109,112,108,101,120,58,32,80,32,61,32,37,112,59,32,105,110,118,97,108,105,100,32,112,114,111,98,108,101,109,32,111,98,106,101,99,116,10,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,48,53,46,99,0,0,108,112,102,95,117,112,100,97,116,101,95,105,116,58,32,106,32,61,32,37,100,59,32,99,111,108,117,109,110,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,48,32,61,61,32,107,118,112,45,62,107,101,121,45,62,114,101,102,99,111,117,110,116,0,103,108,112,95,115,105,109,112,108,101,120,58,32,116,109,95,108,105,109,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,103,108,112,95,115,101,116,95,114,111,119,95,115,116,97,116,58,32,105,32,61,32,37,100,59,32,114,111,119,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,103,108,112,95,115,101,116,95,114,105,105,58,32,105,32,61,32,37,100,59,32,114,111,119,32,110,117,109,98,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,10,0,0,0,111,98,106,32,38,38,32,40,112,45,62,110,111,100,101,45,62,118,97,108,117,101,32,61,61,32,111,98,106,41,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,48,51,46,99,0,0,117,98,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,112,32,38,38,32,118,97,108,0,0,0,0,0,0,0,0,48,32,38,38,32,34,73,110,116,101,114,110,97,108,32,101,114,114,111,114,32,105,110,32,99,115,111,110,95,112,97,114,115,101,114,32,99,111,100,101,34,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,97,114,32,38,38,32,40,97,114,32,61,61,32,112,45,62,110,111,100,101,45,62,118,97,108,117,101,41,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,95,105,115,95,111,98,106,101,99,116,40,32,112,45,62,110,111,100,101,32,41,0,48,0,0,0,0,0,0,0,46,46,47,46,46,47,103,108,112,107,45,52,46,53,51,47,115,114,99,47,103,108,112,97,112,105,48,52,46,99,0,0,68,101,99,0,0,0,0,0,33,112,45,62,99,107,101,121,0,0,0,0,0,0,0,0,49,32,60,61,32,106,106,32,38,38,32,106,106,32,60,61,32,110,0,0,0,0,0,0,103,108,112,95,102,114,101,101,58,32,112,116,114,32,61,32,37,112,59,32,105,110,118,97,108,105,100,32,112,111,105,110,116,101,114,10,0,0,0,0,103,108,112,95,115,101,116,95,98,102,99,112,58,32,110,102,115,95,109,97,120,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,100,101,108,116,97,32,62,61,32,109,95,112,116,114,32,45,32,114,95,112,116,114,0,0,49,32,60,61,32,112,32,38,38,32,112,32,60,61,32,110,0,0,0,0,0,0,0,0,78,111,118,0,0,0,0,0,79,75,0,0,0,0,0,0,112,45,62,110,111,100,101,32,61,61,32,112,45,62,115,116,97,99,107,46,108,105,115,116,46,108,105,115,116,91,112,45,62,115,116,97,99,107,46,108,105,115,116,46,99,111,117,110,116,93,0,0,0,0,0,0,99,115,97,45,62,112,104,97,115,101,32,61,61,32,49,32,124,124,32,99,115,97,45,62,112,104,97,115,101,32,61,61,32,50,0,0,0,0,0,0,112,97,114,109,32,33,61,32,112,97,114,109,0,0,0,0,49,32,60,61,32,105,32,38,38,32,105,32,60,61,32,108,112,45,62,109,0,0,0,0,112,45,62,108,98,32,33,61,32,45,68,66,76,95,77,65,88,32,124,124,32,112,45,62,117,98,32,33,61,32,43,68,66,76,95,77,65,88,0,0,99,99,99,32,33,61,32,99,99,99,0,0,0,0,0,0,103,108,112,95,97,100,100,95,114,111,119,115,58,32,110,114,115,32,61,32,37,100,59,32,116,111,111,32,109,97,110,121,32,114,111,119,115,10,0,0,79,99,116,0,0,0,0,0,110,117,108,108,0,0,0,0,108,112,102,95,117,112,100,97,116,101,95,105,116,58,32,116,104,101,32,102,97,99,116,111,114,105,122,97,116,105,111,110,32,105,115,32,110,111,116,32,118,97,108,105,100,10,0,0,102,97,108,115,101,0,0,0,83,101,112,0,0,0,0,0,103,108,112,95,115,105,109,112,108,101,120,58,32,105,116,95,108,105,109,32,61,32,37,100,59,32,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,10,0,0,0,0,65,117,103,0,0,0,0,0,116,114,117,101,0,0,0,0,114,111,119,45,62,110,111,100,101,32,61,61,32,78,85,76,76,0,0,0,0,0,0,0,108,98,0,0,0,0,0,0,111,98,106,101,99,116,105,118,101,0,0,0,0,0,0,0,74,83,79,78,32,112,97,114,115,101,32,101,114,114,111,114,44,32,99,111,100,101,61,37,100,32,40,37,115,41,44,32,97,116,32,108,105,110,101,32,37,117,44,32,99,111,108,117,109,110,32,37,117,46,10,0,112,117,115,104,0,0,0,0,112,97,114,115,101,95,112,97,114,115,101,95,98,117,102,102,101,114,0,0,0,0,0,0,112,97,114,115,101,95,98,117,102,102,101,114,95,114,101,115,101,114,118,101,95,102,111,114,0,0,0,0,0,0,0,0,112,97,114,115,101,95,98,117,102,102,101,114,95,103,114,111,119,0,0,0,0,0,0,0,103,108,112,95,118,112,114,105,110,116,102,0,0,0,0,0,103,108,112,95,112,114,105,110,116,102,0,0,0,0,0,0,100,101,99,111,100,101,95,117,110,105,99,111,100,101,95,99,104,97,114,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,95,111,98,106,101,99,116,95,97,108,108,111,99,0,99,115,111,110,95,118,97,108,117,101,95,102,101,116,99,104,95,105,110,116,101,103,101,114,0,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,95,100,101,115,116,114,111,121,95,111,98,106,101,99,116,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,95,100,101,115,116,114,111,121,95,97,114,114,97,121,0,0,0,0,0,0,0,0,99,115,111,110,95,118,97,108,117,101,95,97,114,114,97,121,95,97,108,108,111,99,0,0,99,115,111,110,95,115,116,114,105,110,103,95,99,115,116,114,0,0,0,0,0,0,0,0,99,115,111,110,95,115,116,114,95,116,111,95,106,115,111,110,0,0,0,0,0,0,0,0,99,115,111,110,95,114,101,102,99,111,117,110,116,95,105,110,99,114,0,0,0,0,0,0,99,115,111,110,95,112,97,114,115,101,114,95,115,101,116,95,107,101,121,0,0,0,0,0,99,115,111,110,95,112,97,114,115,101,114,95,112,117,115,104,95,118,97,108,117,101,0,0,99,115,111,110,95,112,97,114,115,101,95,99,97,108,108,98,97,99,107,0,0,0,0,0,99,115,111,110,95,112,97,114,115,101,0,0,0,0,0,0,99,115,111,110,95,111,117,116,112,117,116,95,115,116,114,105,110,103,0,0,0,0,0,0,99,115,111,110,95,111,117,116,112,117,116,95,111,98,106,101,99,116,0,0,0,0,0,0,99,115,111,110,95,111,117,116,112,117,116,95,105,109,112,108,0,0,0,0,0,0,0,0,99,115,111,110,95,111,117,116,112,117,116,95,100,111,117,98,108,101,0,0,0,0,0,0,99,115,111,110,95,111,117,116,112,117,116,95,97,114,114,97,121,0,0,0,0,0,0,0,99,115,111,110,95,111,98,106,101,99,116,95,117,110,115,101,116,0,0,0,0,0,0,0,99,115,111,110,95,111,98,106,101,99,116,95,115,101,116,95,115,0,0,0,0,0,0,0,99,115,111,110,95,111,98,106,101,99,116,95,115,101,97,114,99,104,95,105,109,112,108,0,99,115,111,110,95,110,101,119,95,115,116,114,105,110,103,0,97,100,100,95,101,115,99,97,112,101,100,95,99,104,97,114,95,116,111,95,112,97,114,115,101,95,98,117,102,102,101,114,0,0,0,0,0,0,0,0,97,100,100,95,99,104,97,114,95,116,111,95,112,97,114,115,101,95,98,117,102,102,101,114,0,0,0,0,0,0,0,0,74,83,79,78,95,112,97,114,115,101,114,95,99,104,97,114,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,96,113,0,0,72,0,0,0,158,0,0,0,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,113,0,0,240,0,0,0,202,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,113,0,0,112,0,0,0,46,1,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,113,0,0,136,0,0,0,48,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,113,0,0,136,0,0,0,60,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,113,0,0,206,0,0,0,124,0,0,0,90,0,0,0,42,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,113,0,0,38,1,0,0,230,0,0,0,90,0,0,0,44,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,113,0,0,200,0,0,0,232,0,0,0,90,0,0,0,48,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,114,0,0,40,1,0,0,180,0,0,0,90,0,0,0,46,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,114,0,0,36,1,0,0,134,0,0,0,90,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,114,0,0,198,0,0,0,150,0,0,0,90,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,114,0,0,80,0,0,0,152,0,0,0,90,0,0,0,160,0,0,0,44,0,0,0,72,0,0,0,46,0,0,0,60,0,0,0,96,0,0,0,42,0,0,0,248,255,255,255,248,114,0,0,60,0,0,0,50,0,0,0,74,0,0,0,54,0,0,0,42,0,0,0,72,0,0,0,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,115,0,0,26,1,0,0,10,1,0,0,90,0,0,0,58,0,0,0,56,0,0,0,100,0,0,0,66,0,0,0,58,0,0,0,42,0,0,0,44,0,0,0,248,255,255,255,32,115,0,0,104,0,0,0,142,0,0,0,154,0,0,0,162,0,0,0,130,0,0,0,84,0,0,0,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,115,0,0,118,0,0,0,234,0,0,0,90,0,0,0,86,0,0,0,80,0,0,0,48,0,0,0,82,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,115,0,0,104,0,0,0,108,0,0,0,90,0,0,0,82,0,0,0,118,0,0,0,52,0,0,0,96,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,115,0,0,30,1,0,0,42,0,0,0,90,0,0,0,70,0,0,0,70,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,115,0,0,88,0,0,0,252,0,0,0,90,0,0,0,84,0,0,0,54,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,115,0,0,254,0,0,0,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,115,0,0,70,0,0,0,178,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,115,0,0,46,0,0,0,212,0,0,0,90,0,0,0,48,0,0,0,46,0,0,0,52,0,0,0,44,0,0,0,50,0,0,0,44,0,0,0,42,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,115,0,0,140,0,0,0,58,0,0,0,90,0,0,0,60,0,0,0,64,0,0,0,74,0,0,0,62,0,0,0,62,0,0,0,48,0,0,0,46,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,82,0,0,0,66,0,0,0,90,0,0,0,88,0,0,0,86,0,0,0,78,0,0,0,80,0,0,0,70,0,0,0,84,0,0,0,76,0,0,0,94,0,0,0,92,0,0,0,90,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,116,0,0,94,0,0,0,44,0,0,0,90,0,0,0,116,0,0,0,110,0,0,0,104,0,0,0,106,0,0,0,98,0,0,0,108,0,0,0,102,0,0,0,68,0,0,0,114,0,0,0,112,0,0,0,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,116,0,0,114,0,0,0,132,0,0,0,90,0,0,0,46,0,0,0,50,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,116,0,0,68,0,0,0,214,0,0,0,90,0,0,0,56,0,0,0,54,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,116,0,0,102,0,0,0,228,0,0,0,90,0,0,0,42,0,0,0,50,0,0,0,54,0,0,0,158,0,0,0,136,0,0,0,64,0,0,0,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,116,0,0,218,0,0,0,172,0,0,0,90,0,0,0,54,0,0,0,56,0,0,0,58,0,0,0,90,0,0,0,48,0,0,0,60,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,116,0,0,218,0,0,0,62,0,0,0,90,0,0,0,46,0,0,0,44,0,0,0,44,0,0,0,134,0,0,0,100,0,0,0,50,0,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,116,0,0,218,0,0,0,142,0,0,0,90,0,0,0,52,0,0,0,48,0,0,0,62,0,0,0,70,0,0,0,108,0,0,0,48,0,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,116,0,0,218,0,0,0,76,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,116,0,0,100,0,0,0,196,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,0,0,218,0,0,0,120,0,0,0,90,0,0,0,66,0,0,0,46,0,0,0,48,0,0,0,58,0,0,0,62,0,0,0,74,0,0,0,76,0,0,0,46,0,0,0,50,0,0,0,54,0,0,0,56,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,117,0,0,44,1,0,0,78,0,0,0,90,0,0,0,42,0,0,0,44,0,0,0,66,0,0,0,82,0,0,0,54,0,0,0,50,0,0,0,72,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,117,0,0,110,0,0,0,6,1,0,0,112,0,0,0,42,0,0,0,60,0,0,0,78,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,117,0,0,218,0,0,0,126,0,0,0,90,0,0,0,52,0,0,0,48,0,0,0,62,0,0,0,70,0,0,0,108,0,0,0,48,0,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,117,0,0,218,0,0,0,22,1,0,0,90,0,0,0,52,0,0,0,48,0,0,0,62,0,0,0,70,0,0,0,108,0,0,0,48,0,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,117,0,0,168,0,0,0,18,1,0,0,60,0,0,0,68,0,0,0,56,0,0,0,52,0,0,0,122,0,0,0,138,0,0,0,80,0,0,0,68,0,0,0,64,0,0,0,52,0,0,0,92,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,117,0,0,50,0,0,0,160,0,0,0,102,0,0,0,86,0,0,0,68,0,0,0,48,0,0,0,88,0,0,0,120,0,0,0,64,0,0,0,46,0,0,0,52,0,0,0,84,0,0,0,62,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,184,117,0,0,86,0,0,0,250,0,0,0,252,255,255,255,252,255,255,255,184,117,0,0,186,0,0,0,166,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,208,117,0,0,0,1,0,0,20,1,0,0,252,255,255,255,252,255,255,255,208,117,0,0,148,0,0,0,244,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,232,117,0,0,128,0,0,0,48,1,0,0,248,255,255,255,248,255,255,255,232,117,0,0,220,0,0,0,16,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,118,0,0,146,0,0,0,248,0,0,0,248,255,255,255,248,255,255,255,0,118,0,0,176,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,118,0,0,246,0,0,0,222,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,118,0,0,32,1,0,0,14,1,0,0,56,0,0,0,68,0,0,0,56,0,0,0,52,0,0,0,96,0,0,0,138,0,0,0,80,0,0,0,68,0,0,0,64,0,0,0,52,0,0,0,76,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,118,0,0,194,0,0,0,216,0,0,0,78,0,0,0,86,0,0,0,68,0,0,0,48,0,0,0,124,0,0,0,120,0,0,0,64,0,0,0,46,0,0,0,52,0,0,0,84,0,0,0,88,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,118,0,0,8,1,0,0,184,0,0,0,90,0,0,0,102,0,0,0,156,0,0,0,70,0,0,0,120,0,0,0,44,0,0,0,74,0,0,0,92,0,0,0,64,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,118,0,0,144,0,0,0,98,0,0,0,90,0,0,0,148,0,0,0,44,0,0,0,108,0,0,0,116,0,0,0,118,0,0,0,66,0,0,0,152,0,0,0,92,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,118,0,0,12,1,0,0,156,0,0,0,90,0,0,0,56,0,0,0,98,0,0,0,46,0,0,0,84,0,0,0,122,0,0,0,94,0,0,0,128,0,0,0,98,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,118,0,0,116,0,0,0,210,0,0,0,90,0,0,0,140,0,0,0,144,0,0,0,72,0,0,0,114,0,0,0,68,0,0,0,62,0,0,0,114,0,0,0,112,0,0,0,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,119,0,0,130,0,0,0,56,0,0,0,100,0,0,0,68,0,0,0,56,0,0,0,52,0,0,0,122,0,0,0,138,0,0,0,80,0,0,0,106,0,0,0,116,0,0,0,58,0,0,0,92,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,119,0,0,54,0,0,0,2,1,0,0,104,0,0,0,86,0,0,0,68,0,0,0,48,0,0,0,88,0,0,0,120,0,0,0,64,0,0,0,132,0,0,0,62,0,0,0,44,0,0,0,62,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,119,0,0,34,1,0,0,242,0,0,0,106,0,0,0,192,0,0,0,52,0,0,0,42,0,0,0,46,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,0,0,0,0,168,101,0,0,0,0,0,0,184,101,0,0,0,0,0,0,200,101,0,0,88,113,0,0,0,0,0,0,0,0,0,0,216,101,0,0,88,113,0,0,0,0,0,0,0,0,0,0,232,101,0,0,88,113,0,0,0,0,0,0,0,0,0,0,0,102,0,0,160,113,0,0,0,0,0,0,0,0,0,0,24,102,0,0,88,113,0,0,0,0,0,0,0,0,0,0,40,102,0,0,128,101,0,0,64,102,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,96,118,0,0,0,0,0,0,128,101,0,0,136,102,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,104,118,0,0,0,0,0,0,128,101,0,0,208,102,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,112,118,0,0,0,0,0,0,128,101,0,0,24,103,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,120,118,0,0,0,0,0,0,0,0,0,0,96,103,0,0,168,115,0,0,0,0,0,0,0,0,0,0,144,103,0,0,168,115,0,0,0,0,0,0,128,101,0,0,192,103,0,0,0,0,0,0,1,0,0,0,160,117,0,0,0,0,0,0,128,101,0,0,216,103,0,0,0,0,0,0,1,0,0,0,160,117,0,0,0,0,0,0,128,101,0,0,240,103,0,0,0,0,0,0,1,0,0,0,168,117,0,0,0,0,0,0,128,101,0,0,8,104,0,0,0,0,0,0,1,0,0,0,168,117,0,0,0,0,0,0,128,101,0,0,32,104,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,16,119,0,0,0,8,0,0,128,101,0,0,104,104,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,16,119,0,0,0,8,0,0,128,101,0,0,176,104,0,0,0,0,0,0,3,0,0,0,224,116,0,0,2,0,0,0,176,113,0,0,2,0,0,0,64,117,0,0,0,8,0,0,128,101,0,0,248,104,0,0,0,0,0,0,3,0,0,0,224,116,0,0,2,0,0,0,176,113,0,0,2,0,0,0,72,117,0,0,0,8,0,0,0,0,0,0,64,105,0,0,224,116,0,0,0,0,0,0,0,0,0,0,88,105,0,0,224,116,0,0,0,0,0,0,128,101,0,0,112,105,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,176,117,0,0,2,0,0,0,128,101,0,0,136,105,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,176,117,0,0,2,0,0,0,0,0,0,0,160,105,0,0,0,0,0,0,184,105,0,0,24,118,0,0,0,0,0,0,128,101,0,0,216,105,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,88,114,0,0,0,0,0,0,128,101,0,0,32,106,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,112,114,0,0,0,0,0,0,128,101,0,0,104,106,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,136,114,0,0,0,0,0,0,128,101,0,0,176,106,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,160,114,0,0,0,0,0,0,0,0,0,0,248,106,0,0,224,116,0,0,0,0,0,0,0,0,0,0,16,107,0,0,224,116,0,0,0,0,0,0,128,101,0,0,40,107,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,40,118,0,0,2,0,0,0,128,101,0,0,80,107,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,40,118,0,0,2,0,0,0,128,101,0,0,120,107,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,40,118,0,0,2,0,0,0,128,101,0,0,160,107,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,40,118,0,0,2,0,0,0,0,0,0,0,200,107,0,0,152,117,0,0,0,0,0,0,0,0,0,0,224,107,0,0,224,116,0,0,0,0,0,0,128,101,0,0,248,107,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,8,119,0,0,2,0,0,0,128,101,0,0,16,108,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,8,119,0,0,2,0,0,0,0,0,0,0,40,108,0,0,0,0,0,0,80,108,0,0,0,0,0,0,120,108,0,0,48,118,0,0,0,0,0,0,0,0,0,0,152,108,0,0,192,116,0,0,0,0,0,0,0,0,0,0,192,108,0,0,192,116,0,0,0,0,0,0,0,0,0,0,232,108,0,0,0,0,0,0,32,109,0,0,0,0,0,0,88,109,0,0,0,0,0,0,120,109,0,0,0,0,0,0,152,109,0,0,0,0,0,0,184,109,0,0,0,0,0,0,216,109,0,0,128,101,0,0,240,109,0,0,0,0,0,0,1,0,0,0,56,114,0,0,3,244,255,255,128,101,0,0,32,110,0,0,0,0,0,0,1,0,0,0,72,114,0,0,3,244,255,255,128,101,0,0,80,110,0,0,0,0,0,0,1,0,0,0,56,114,0,0,3,244,255,255,128,101,0,0,128,110,0,0,0,0,0,0,1,0,0,0,72,114,0,0,3,244,255,255,0,0,0,0,176,110,0,0,128,113,0,0,0,0,0,0,0,0,0,0,200,110,0,0,0,0,0,0,224,110,0,0,144,117,0,0,0,0,0,0,0,0,0,0,248,110,0,0,128,117,0,0,0,0,0,0,0,0,0,0,24,111,0,0,136,117,0,0,0,0,0,0,0,0,0,0,56,111,0,0,0,0,0,0,88,111,0,0,0,0,0,0,120,111,0,0,0,0,0,0,152,111,0,0,128,101,0,0,184,111,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,0,119,0,0,2,0,0,0,128,101,0,0,216,111,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,0,119,0,0,2,0,0,0,128,101,0,0,248,111,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,0,119,0,0,2,0,0,0,128,101,0,0,24,112,0,0,0,0,0,0,2,0,0,0,224,116,0,0,2,0,0,0,0,119,0,0,2,0,0,0,0,0,0,0,56,112,0,0,0,0,0,0,80,112,0,0,0,0,0,0,104,112,0,0,0,0,0,0,128,112,0,0,128,117,0,0,0,0,0,0,0,0,0,0,152,112,0,0,136,117,0,0,0,0,0,0,0,0,0,0,176,112,0,0,88,119,0,0,0,0,0,0,0,0,0,0,216,112,0,0,88,119,0,0,0,0,0,0,0,0,0,0,0,113,0,0,104,119,0,0,0,0,0,0,0,0,0,0,40,113,0,0,80,113,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,32,5,0,0,0,0,0,0,0,0,0,0,56,5,0,0,0,0,0,0,0,0,0,0,80,5,0,0,0,120,0,0,0,0,0,0,80,5,0,0,0,0,0,0,0,0,0,0,64,5,0,0,0,0,0,0,0,0,0,0,72,5,0,0,0,0,0,0,0,0,0,0,40,5,0,0,4,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

   
  Module["_strlen"] = _strlen;

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      Runtime.stackRestore(ret);
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_last_thrown_exception=0;
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  var _llvm_va_start=undefined;

  function _llvm_va_end() {}

  
  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      return FS.getStreamFromPtr(stream).fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision === -1) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  function _iscntrl(chr) {
      return (0 <= chr && chr <= 0x1F) || chr === 0x7F;
    }

   
  Module["_strcpy"] = _strcpy;

  var _fabs=Math_abs;

  var _floor=Math_floor;

  function _frexp(x, exp_addr) {
      var sig = 0, exp_ = 0;
      if (x !== 0) {
        var sign = 1;
        if (x < 0) {
          x = -x;
          sign = -1;
        }
        var raw_exp = Math.log(x)/Math.log(2);
        exp_ = Math.ceil(raw_exp);
        if (exp_ === raw_exp) exp_ += 1;
        sig = sign*x/Math.pow(2, exp_);
      }
      HEAP32[((exp_addr)>>2)]=exp_;
      return sig;
    }

  
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;

  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function ___errno_location() {
      return ___errno_state;
    }

  
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  var _ceil=Math_ceil;

  var _sqrt=Math_sqrt;

  function _vsprintf(s, format, va_arg) {
      return _sprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  
  var ___tm_current=allocate(44, "i8", ALLOC_STATIC);
  
  
  var ___tm_timezone=allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);function _gmtime_r(time, tmPtr) {
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getUTCSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getUTCMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getUTCHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getUTCDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getUTCMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getUTCFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getUTCDay();
      HEAP32[(((tmPtr)+(36))>>2)]=0;
      HEAP32[(((tmPtr)+(32))>>2)]=0;
      var start = new Date(date); // define date using UTC, start from Jan 01 00:00:00 UTC
      start.setUTCDate(1);
      start.setUTCMonth(0);
      start.setUTCHours(0);
      start.setUTCMinutes(0);
      start.setUTCSeconds(0);
      start.setUTCMilliseconds(0);
      var yday = Math.floor((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24));
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(40))>>2)]=___tm_timezone;
  
      return tmPtr;
    }function _gmtime(time) {
      return _gmtime_r(time, ___tm_current);
    }



  function _abort() {
      Module['abort']();
    }

  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      var fd = _fileno(stream);
      return _write(fd, s, _strlen(s));
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }


  function _localeconv() {
      // %struct.timeval = type { char* decimal point, other stuff... }
      // var indexes = Runtime.calculateStructAlignment({ fields: ['i32', 'i32'] });
      var me = _localeconv;
      if (!me.ret) {
        me.ret = allocate([allocate(intArrayFromString('.'), 'i8', ALLOC_NORMAL)], 'i8*', ALLOC_NORMAL); // just decimal point, for now
      }
      return me.ret;
    }

  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }

  function _pthread_mutex_lock() {}

  function _pthread_mutex_unlock() {}

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }

  var _llvm_memset_p0i8_i64=_memset;


  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  
  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;

  function __ZNSt9exceptionD2Ev() {}

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }


  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function ___cxa_guard_abort() {}

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  
  
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _uselocale(locale) {
      return 0;
    }

  
  function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  
  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }var _copysignl=_copysign;

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodl=_fmod;






  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            var errorInfo = '?';
            function onContextCreationError(event) {
              errorInfo = event.statusMessage || errorInfo;
            }
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stdin|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var r=env._stderr|0;var s=env._stdout|0;var t=env.___dso_handle|0;var u=+env.NaN;var v=+env.Infinity;var w=0;var x=0;var y=0;var z=0;var A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0.0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=global.Math.floor;var U=global.Math.abs;var V=global.Math.sqrt;var W=global.Math.pow;var X=global.Math.cos;var Y=global.Math.sin;var Z=global.Math.tan;var _=global.Math.acos;var $=global.Math.asin;var aa=global.Math.atan;var ba=global.Math.atan2;var ca=global.Math.exp;var da=global.Math.log;var ea=global.Math.ceil;var fa=global.Math.imul;var ga=env.abort;var ha=env.assert;var ia=env.asmPrintInt;var ja=env.asmPrintFloat;var ka=env.min;var la=env.jsCall;var ma=env.invoke_viiiii;var na=env.invoke_viiiiiii;var oa=env.invoke_vi;var pa=env.invoke_vii;var qa=env.invoke_iii;var ra=env.invoke_iiii;var sa=env.invoke_viiiiiid;var ta=env.invoke_ii;var ua=env.invoke_viii;var va=env.invoke_viiiiid;var wa=env.invoke_v;var xa=env.invoke_iiiiiiiii;var ya=env.invoke_viiiiiiiii;var za=env.invoke_viiiiiiii;var Aa=env.invoke_viiiiii;var Ba=env.invoke_iiiii;var Ca=env.invoke_iiiiii;var Da=env.invoke_viiii;var Ea=env._llvm_lifetime_end;var Fa=env.__scanString;var Ga=env._fclose;var Ha=env._pthread_mutex_lock;var Ia=env.___cxa_end_catch;var Ja=env._strtoull;var Ka=env._fflush;var La=env.__isLeapYear;var Ma=env._llvm_stackrestore;var Na=env._fwrite;var Oa=env._send;var Pa=env._frexp;var Qa=env._fputs;var Ra=env._isspace;var Sa=env._read;var Ta=env._ceil;var Ua=env._isxdigit_l;var Va=env._fileno;var Wa=env._fsync;var Xa=env.___cxa_guard_abort;var Ya=env._newlocale;var Za=env.___gxx_personality_v0;var _a=env._pthread_cond_wait;var $a=env.___cxa_rethrow;var ab=env._fmod;var bb=env.___resumeException;var cb=env._llvm_va_end;var db=env._vsscanf;var eb=env._snprintf;var fb=env._fgetc;var gb=env.__getFloat;var hb=env._atexit;var ib=env.___cxa_free_exception;var jb=env._close;var kb=env._isdigit_l;var lb=env.___setErrNo;var mb=env._isxdigit;var nb=env._exit;var ob=env._sprintf;var pb=env.___ctype_b_loc;var qb=env._freelocale;var rb=env._catgets;var sb=env._asprintf;var tb=env.___cxa_is_number_type;var ub=env._gmtime;var vb=env.___cxa_does_inherit;var wb=env.___cxa_guard_acquire;var xb=env.___cxa_begin_catch;var yb=env._emscripten_memcpy_big;var zb=env._recv;var Ab=env.__parseInt64;var Bb=env.__ZSt18uncaught_exceptionv;var Cb=env.__ZNSt9exceptionD2Ev;var Db=env._llvm_stacksave;var Eb=env._copysign;var Fb=env.__exit;var Gb=env._strftime;var Hb=env.___cxa_throw;var Ib=env._pread;var Jb=env._strtoull_l;var Kb=env.__arraySum;var Lb=env._sysconf;var Mb=env._strtoll_l;var Nb=env.___cxa_find_matching_catch;var Ob=env.__formatString;var Pb=env._pthread_cond_broadcast;var Qb=env.__ZSt9terminatev;var Rb=env._vfprintf;var Sb=env._pthread_mutex_unlock;var Tb=env.___cxa_call_unexpected;var Ub=env._sbrk;var Vb=env._localeconv;var Wb=env.___errno_location;var Xb=env._strerror;var Yb=env._catclose;var Zb=env._llvm_lifetime_start;var _b=env.___cxa_guard_release;var $b=env._ungetc;var ac=env._vsprintf;var bc=env._uselocale;var cc=env._gmtime_r;var dc=env._vsnprintf;var ec=env._sscanf;var fc=env.___assert_fail;var gc=env._fread;var hc=env._strftime_l;var ic=env._abort;var jc=env._fprintf;var kc=env._isdigit;var lc=env._strtoll;var mc=env.__addDays;var nc=env._fabs;var oc=env._floor;var pc=env.__reallyNegative;var qc=env._sqrt;var rc=env._write;var sc=env._mkport;var tc=env.___cxa_allocate_exception;var uc=env._vasprintf;var vc=env._catopen;var wc=env.___ctype_toupper_loc;var xc=env.___ctype_tolower_loc;var yc=env._pwrite;var zc=env._strerror_r;var Ac=env._iscntrl;var Bc=env._time;var Cc=0.0;
// EMSCRIPTEN_START_FUNCS
function Fj(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;c[d+4>>2]=0;Cj(a,d)|0;i=b;return(J=c[d+4>>2]|0,c[d>>2]|0)|0}function Gj(a){a=a|0;var b=0,c=0;b=i;i=i+8|0;c=b|0;h[c>>3]=0.0;Dj(a,c)|0;i=b;return+(+h[c>>3])}function Hj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;do{if((e|0)!=0){if((a|0)==0){break}if(!((rj(e)|0)<<24>>24!=0)){f=c[365]|0;g=f;i=d;return g|0}if((a|0)!=0){c[a>>2]=c[e+4>>2]}f=0;g=f;i=d;return g|0}}while(0);f=c[363]|0;g=f;i=d;return g|0}function Ij(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if((e|0)==0){f=c[363]|0;g=f;i=d;return g|0}if(!((tj(e)|0)<<24>>24!=0)){f=c[365]|0;g=f;i=d;return g|0}if((a|0)!=0){c[a>>2]=c[e+4>>2]}f=0;g=f;i=d;return g|0}function Jj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if((e|0)==0){f=c[363]|0;g=f;i=d;return g|0}if(!((sj(e)|0)<<24>>24!=0)){f=c[365]|0;g=f;i=d;return g|0}if((a|0)!=0){c[a>>2]=c[e+4>>2]}f=0;g=f;i=d;return g|0}function Kj(){var a=0,b=0,d=0,e=0;a=i;b=Lj(8,9048)|0;if((b|0)==0){d=b;i=a;return d|0}e=b;c[e>>2]=c[7714];c[e+4>>2]=c[7715];d=b;i=a;return d|0}function Lj(a,b){a=a|0;b=b|0;var c=0;b=i;c=mu(a)|0;i=b;return c|0}function Mj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a;a=b;do{if((e|0)!=0){if((a|0)==0){break}if(((c[e+4>>2]|0)+1|0)>>>0<(c[e+4>>2]|0)>>>0){f=c[364]|0;g=f;i=d;return g|0}if((c[e+8>>2]|0)!=0){if((c[e+4>>2]|0)==((c[e+8>>2]|0)-1|0)){h=8}}else{h=8}do{if((h|0)==8){if((c[e+4>>2]|0)!=0){j=c[e+4>>2]<<1}else{j=7}b=j;if(!(b>>>0>(Nj(e|0,b)|0)>>>0)){break}f=c[367]|0;g=f;i=d;return g|0}}while(0);f=Oj(e,c[e+4>>2]|0,a)|0;g=f;i=d;return g|0}}while(0);f=c[363]|0;g=f;i=d;return g|0}function Nj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if((e|0)==0){f=0;g=f;i=d;return g|0}if(0==(a|0)){if(0==(c[e+8>>2]|0)){f=0;g=f;i=d;return g|0}else{rk(c[e>>2]|0,4232);c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;f=0;g=f;i=d;return g|0}}if((c[e+8>>2]|0)>>>0>=a>>>0){f=c[e+8>>2]|0;g=f;i=d;return g|0}b=sk(c[e>>2]|0,a<<2,4232)|0;if((b|0)!=0){Nu(b+(c[e+8>>2]<<2)|0,0,a-(c[e+8>>2]|0)<<2|0)|0;c[e+8>>2]=a;c[e>>2]=b;f=a;g=f;i=d;return g|0}else{f=c[e+8>>2]|0;g=f;i=d;return g|0}return 0}function Oj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a;a=b;b=d;do{if((f|0)!=0){if((b|0)==0){break}if((a+1|0)>>>0<a>>>0){g=c[364]|0;h=g;i=e;return h|0}if((Nj(f|0,a+1|0)|0)>>>0<=a>>>0){g=c[367]|0;h=g;i=e;return h|0}d=c[(c[f>>2]|0)+(a<<2)>>2]|0;do{if((d|0)!=0){if((d|0)==(b|0)){g=0;h=g;i=e;return h|0}else{nj(d);break}}}while(0);lj(b);c[(c[f>>2]|0)+(a<<2)>>2]=b;if(a>>>0>=(c[f+4>>2]|0)>>>0){c[f+4>>2]=a+1}g=0;h=g;i=e;return h|0}}while(0);g=c[363]|0;h=g;i=e;return h|0}function Pj(){return 30648}function Qj(){return 30660}function Rj(){return 30636}function Sj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+8|0;e=d|0;c[e>>2]=a;c[e+4>>2]=b;if(0==(c[e>>2]|0)&0==(c[e+4>>2]|0)){f=30672;g=f;i=d;return g|0}b=Tj(3,0)|0;if((b|0)!=0){a=c[e+4>>2]|0;h=c[b+4>>2]|0;c[h>>2]=c[e>>2];c[h+4>>2]=a}f=b;g=f;i=d;return g|0}function Tj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d|0;f=b;b=0;g=e;c[g>>2]=c[304];c[g+4>>2]=c[305];c[g+8>>2]=c[306];g=0;h=20024;switch(a|0){case 4:{if(0==(f|0)){}else{fc(19992,17608,2246,20024);return 0}a=e;c[a>>2]=c[320];c[a+4>>2]=c[321];c[a+8>>2]=c[322];b=8;h=19848;break};case 7:{if(0==(f|0)){}else{fc(19992,17608,2266,20024);return 0}a=e;c[a>>2]=c[312];c[a+4>>2]=c[313];c[a+8>>2]=c[314];b=12;h=19536;break};case 3:{if(0==(f|0)){}else{fc(19992,17608,2252,20024);return 0}a=e;c[a>>2]=c[316];c[a+4>>2]=c[317];c[a+8>>2]=c[318];b=8;h=19816;break};case 6:{if(0==(f|0)){}else{fc(19992,17608,2240,20024);return 0}a=e;c[a>>2]=c[324];c[a+4>>2]=c[325];c[a+8>>2]=c[326];b=12;h=19920;break};case 5:{if(0!=(f|0)){}else{fc(19712,17608,2260,20024);return 0}a=e;c[a>>2]=c[308];c[a+4>>2]=c[309];c[a+8>>2]=c[310];b=4;h=19664;break};default:{fc(19368,17608,2272,20024);return 0}}if((c[c[e>>2]>>2]|0)!=0){}else{fc(19144,17608,2275,20024);return 0}g=Lj(f+12+b|0,h)|0;if((g|0)==0){j=g;i=d;return j|0}h=g;a=e;c[h>>2]=c[a>>2];c[h+4>>2]=c[a+4>>2];c[h+8>>2]=c[a+8>>2];if((b|0)!=0){k=23}else{if((f|0)!=0){k=23}}if((k|0)==23){Nu(g+12|0,0,b+f|0)|0;c[g+4>>2]=g+12}j=g;i=d;return j|0}function Uj(a){a=+a;var b=0,d=0.0,e=0,f=0,g=0;b=i;d=a;if(0.0==d){e=30684;f=e;i=b;return f|0}g=Tj(4,0)|0;if((g|0)!=0){h[c[g+4>>2]>>3]=d}e=g;f=e;i=b;return f|0}function Vj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=b;b=d;do{if((f|0)!=0){if((a[f]|0)==0){break}if((b|0)==0){break}d=Tj(5,b+1|0)|0;g=0;if((d|0)!=0){h=0;g=c[d+4>>2]|0;c[g>>2]=c[7698];if(0!=(g|0)){}else{fc(8720,17608,2906,22576);return 0}c[g>>2]=b;h=Wj(g)|0;if(0!=(h|0)){}else{fc(8440,17608,2909,22576);return 0}Ku(h|0,f|0,b)|0;a[h+b|0]=0}j=g;k=j;i=e;return k|0}}while(0);j=30724;k=j;i=e;return k|0}function Wj(a){a=a|0;var b=0,c=0,d=0,e=0;b=i;c=a;do{if((c|0)!=0){if(30724==(c|0)){d=3;break}e=c+4|0}else{d=3}}while(0);if((d|0)==3){e=0}i=b;return e|0}function Xj(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=Yj(Vj(a,b)|0)|0;i=c;return d|0}function Yj(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;if((d|0)==0){e=0;i=b;return e|0}if((d|0)==(c[7675]|0)){f=30696}else{f=d-12|0}e=f;i=b;return e|0}function Zj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a;a=b;b=d;if((f|0)==0){g=c[363]|0;h=g;i=e;return h|0}if(a>>>0>=(c[f+4>>2]|0)>>>0){g=c[364]|0;h=g;i=e;return h|0}if((b|0)!=0){c[b>>2]=c[(c[f>>2]|0)+(a<<2)>>2]}g=0;h=g;i=e;return h|0}function _j(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+8|0;e=d|0;c[e>>2]=0;Zj(a,b,e)|0;i=d;return c[e>>2]|0}function $j(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;do{if((e|0)!=0){if((a|0)==0){break}if((a|0)!=0){c[a>>2]=c[e+4>>2]}f=0;g=f;i=d;return g|0}}while(0);f=c[363]|0;g=f;i=d;return g|0}function ak(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;$j(a,d)|0;i=b;return c[d>>2]|0}function bk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=ck(a,b,0)|0;if((e|0)!=0){f=c[e+4>>2]|0;i=d;return f|0}else{f=0;i=d;return f|0}return 0}function ck(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;b=d;d=e;do{if((g|0)!=0){if((b|0)==0){break}if((a[b]|0)==0){break}if((c[g+4>>2]|0)==0){break}e=g|0;h=0;j=Lu(b|0)|0;while(1){if(!(h>>>0<(c[e+4>>2]|0)>>>0)){k=21;break}l=c[(c[e>>2]|0)+(h<<2)>>2]|0;if((l|0)!=0){if((c[l>>2]|0)!=0){}else{k=9}}else{k=9}if((k|0)==9){k=0;fc(20480,17608,3040,22552);return 0}m=zj(c[l>>2]|0)|0;if((m|0)!=0){}else{fc(20200,17608,3042,22552);return 0}if((c[m>>2]|0)==(j|0)){if(0==(Ju(b,mj(m)|0)|0)){break}}h=h+1|0}if((k|0)==21){break}if((d|0)!=0){c[d>>2]=h}n=l;o=n;i=f;return o|0}}while(0);n=0;o=n;i=f;return o|0}function dk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e|0;g=b;b=d;do{if((g|0)!=0){if((b|0)==0){break}if((a[b]|0)==0){break}c[f>>2]=0;d=ck(g,b,f)|0;if((d|0)==0){h=c[371]|0;j=h;i=e;return j|0}if((c[g+4>>2]|0)>>>0>0>>>0){}else{fc(8232,17608,3092,22504);return 0}if((c[(c[g>>2]|0)+(c[f>>2]<<2)>>2]|0)==(d|0)){}else{fc(8008,17608,3093,22504);return 0}ek(d);c[(c[g>>2]|0)+(c[f>>2]<<2)>>2]=0;d=c[f>>2]|0;while(1){if(!(d>>>0<(c[g+4>>2]|0)>>>0)){break}if(d>>>0<((c[g+8>>2]|0)-1|0)>>>0){k=c[(c[g>>2]|0)+(d+1<<2)>>2]|0}else{k=0}c[(c[g>>2]|0)+(d<<2)>>2]=k;d=d+1|0}d=g+4|0;l=(c[d>>2]|0)-1|0;c[d>>2]=l;c[(c[g>>2]|0)+(l<<2)>>2]=0;h=0;j=h;i=e;return j|0}}while(0);h=c[363]|0;j=h;i=e;return j|0}function ek(a){a=a|0;var b=0,c=0;b=i;c=a;if((c|0)==0){i=b;return}Ik(c);rk(c,9048);i=b;return}function fk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=a;a=b;b=d;do{if((f|0)!=0){if((a|0)==0){break}if(0==(b|0)){g=dk(f,mj(a)|0)|0;h=g;i=e;return h|0}d=Yj(a)|0;if((d|0)!=0){if((a|0)==(c[d+4>>2]|0)){}else{j=8}}else{j=8}if((j|0)==8){fc(7760,17608,3124,22528);return 0}if((d|0)==(f-12|0)){g=c[363]|0;h=g;i=e;return h|0}k=ck(f,mj(a)|0,0)|0;if((k|0)!=0){if((c[k>>2]|0)!=(d|0)){nj(c[k>>2]|0);lj(d);c[k>>2]=d}if((c[k+4>>2]|0)!=(b|0)){nj(c[k+4>>2]|0);lj(b);c[k+4>>2]=b}g=0;h=g;i=e;return h|0}if((c[f+8>>2]|0)!=0){if((c[f+4>>2]|0)==((c[f+8>>2]|0)-1|0)){j=19}}else{j=19}do{if((j|0)==19){if((c[f+4>>2]|0)!=0){l=c[f+4>>2]<<1}else{l=6}m=l;if(!(m>>>0>(gk(f|0,m)|0)>>>0)){break}g=c[367]|0;h=g;i=e;return h|0}}while(0);m=0;k=Kj()|0;if((k|0)==0){g=c[367]|0;h=g;i=e;return h|0}m=hk(f|0,k)|0;if(0!=(m|0)){ek(k)}else{lj(d);lj(b);c[k>>2]=d;c[k+4>>2]=b}g=m;h=g;i=e;return h|0}}while(0);g=c[363]|0;h=g;i=e;return h|0}function gk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if((e|0)==0){f=0;g=f;i=d;return g|0}if(0==(a|0)){if(0==(c[e+8>>2]|0)){f=0;g=f;i=d;return g|0}else{rk(c[e>>2]|0,4288);c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;f=0;g=f;i=d;return g|0}}if((c[e+8>>2]|0)>>>0>=a>>>0){f=c[e+8>>2]|0;g=f;i=d;return g|0}b=sk(c[e>>2]|0,a<<2,4288)|0;if((b|0)!=0){Nu(b+(c[e+8>>2]<<2)|0,0,a-(c[e+8>>2]|0)<<2|0)|0;c[e+8>>2]=a;c[e>>2]=b;f=a;g=f;i=d;return g|0}else{f=c[e+8>>2]|0;g=f;i=d;return g|0}return 0}function hk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;a=b;do{if((e|0)!=0){if((a|0)==0){break}b=c[e+8>>2]|0;if(b>>>0>(gk(e,(c[e+4>>2]|0)+1|0)|0)>>>0){f=c[367]|0;g=f;i=d;return g|0}else{b=e+4|0;h=c[b>>2]|0;c[b>>2]=h+1;c[(c[e>>2]|0)+(h<<2)>>2]=a;f=0;g=f;i=d;return g|0}}}while(0);f=c[363]|0;g=f;i=d;return g|0}function ik(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=b;b=d;d=e;do{if((g|0)!=0){if((b|0)==0){break}if((a[b]|0)==0){break}if(0==(d|0)){h=dk(g,b)|0;j=h;i=f;return j|0}e=Vj(b,Lu(b|0)|0)|0;if((e|0)==0){h=c[367]|0;j=h;i=f;return j|0}k=fk(g,e,d)|0;if((k|0)!=0){nj(Yj(e)|0)}h=k;j=h;i=f;return j|0}}while(0);h=c[363]|0;j=h;i=f;return j|0}function jk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0;e=i;f=b;b=d;d=a;a=0;a:do{switch(f|0){case 11:{if((c[d+24>>2]|0)!=0){fc(21264,17608,3484,22344);return 0}else{}c[d+24>>2]=Vj(c[b>>2]|0,c[b+4>>2]|0)|0;if((c[d+24>>2]|0)!=0){g=d+32|0;c[g>>2]=(c[g>>2]|0)+1;break a}else{a=c[367]|0;break a}break};case 8:{a=Gk(d,Pj()|0)|0;break};case 9:{a=Gk(d,Qj()|0)|0;break};case 1:case 3:{if(1==(f|0)){j=xj()|0}else{j=uj()|0}g=j;if((g|0)==0){c[d+28>>2]=c[367];break a}if(0!=(a|0)){break a}if((c[d+4>>2]|0)!=0){a=Mj(d+12|0,g)|0;if((a|0)!=0){nj(g)}else{a=Gk(d,g)|0;if(0==(a|0)){c[d+8>>2]=g}}}else{k=g;c[d+8>>2]=k;c[d+4>>2]=k;a=Mj(d+12|0,g)|0;if(0!=(a|0)){nj(c[d+4>>2]|0);c[d+4>>2]=0}else{lj(c[d+4>>2]|0);g=d+36|0;c[g>>2]=(c[g>>2]|0)+1}}break};case 6:{g=Uj(+h[b>>3])|0;if((g|0)!=0){a=Gk(d,g)|0;break a}else{a=c[367]|0;break a}break};case 2:case 4:{if(0==(c[d+16>>2]|0)){a=c[364]|0;break a}g=d+16|0;c[g>>2]=(c[g>>2]|0)-1;if((c[d+8>>2]|0)==(c[(c[d+12>>2]|0)+(c[d+16>>2]<<2)>>2]|0)){}else{fc(21456,17608,3427,22344);return 0}oj(c[d+8>>2]|0)|0;c[(c[d+12>>2]|0)+(c[d+16>>2]<<2)>>2]=0;if((c[d+16>>2]|0)!=0){c[d+8>>2]=c[(c[d+12>>2]|0)+((c[d+16>>2]|0)-1<<2)>>2]}else{c[d+8>>2]=c[d+4>>2]}break};case 5:{g=b|0;k=Sj(c[g>>2]|0,c[g+4>>2]|0)|0;if((k|0)!=0){a=Gk(d,k)|0;break a}else{a=c[367]|0;break a}break};case 10:{k=Xj(c[b>>2]|0,c[b+4>>2]|0)|0;if(0==(k|0)){l=c[367]|0}else{l=Gk(d,k)|0}a=l;break};case 7:{a=Gk(d,Rj()|0)|0;break};default:{fc(21216,17608,3502,22344);return 0}}}while(0);l=a;c[d+28>>2]=l;i=e;return((l|0)!=0?0:1)|0}function kk(a){a=a|0;var b=0;switch(a|0){case 2:{b=c[374]|0;break};case 3:{b=c[375]|0;break};case 0:{b=0;break};case 4:{b=c[376]|0;break};case 1:{b=c[373]|0;break};case 5:{b=c[377]|0;break};case 6:{b=c[378]|0;break};case 7:{b=c[379]|0;break};case 8:{b=c[380]|0;break};case 9:{b=c[381]|0;break};case 10:{b=c[367]|0;break};default:{b=c[369]|0}}i=i;return b|0}function lk(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;if((d|0)==0){e=c[363]|0;f=e;i=b;return f|0}if((c[d>>2]|0)!=0){Zi(c[d>>2]|0);c[d>>2]=0}if((c[d+24>>2]|0)!=0){nj(Yj(c[d+24>>2]|0)|0)}Fk(d+12|0,1);if((c[d+4>>2]|0)!=0){nj(c[d+4>>2]|0)}Ku(d|0,30800,40)|0;e=0;f=e;i=b;return f|0}function mk(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=b;b=e;e=f;f=h;h=f+1|0;j=d[f]|0;if((j|0)<192){k=h;l=e;c[l>>2]=k;m=j;i=g;return m|0}j=d[1376+(j-192)|0]|0;while(1){if((h|0)!=(b|0)){n=(a[h]&192|0)==128}else{n=0}if(!n){break}f=h;h=f+1|0;j=(j<<6)+(63&(d[f]|0))|0}do{if((j|0)<128){o=10}else{if((j&-2048|0)==55296){o=10;break}if((j&-2|0)==65534){o=10}}}while(0);if((o|0)==10){j=65533}k=h;l=e;c[l>>2]=k;m=j;i=g;return m|0}function nk(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;g=c;c=d;d=e;if((d|0)==0){d=1560}e=ok(b,g,c,d,0)|0;if(0!=(e|0)){h=e;i=f;return h|0}if((a[d+4|0]|0)==0){h=e;i=f;return h|0}e=Ic[g&127](c,6552,1)|0;h=e;i=f;return h|0}function ok(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;j=b;b=d;d=e;e=f;f=g;do{if((j|0)!=0){if((b|0)==0){break}if((c[j>>2]|0)==0){break}g=0;if((e|0)!=0){}else{fc(3464,17608,4072,22432);return 0}switch(c[c[j>>2]>>2]|0){case 2:{g=xk(j,b,d)|0;break};case 7:{g=Ck(j,b,d,e,f)|0;break};case 3:{g=yk(j,b,d)|0;break};case 6:{g=Bk(j,b,d,e,f)|0;break};case 5:{g=Ak(j,a[e+7|0]|0,b,d)|0;break};case 4:{g=zk(j,b,d)|0;break};case 0:case 1:{g=wk(b,d)|0;break};default:{g=c[365]|0}}k=g;l=k;i=h;return l|0}}while(0);k=c[363]|0;l=k;i=h;return l|0}function pk(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h|0;k=b;b=d;d=e;e=f;f=g;do{if((k|0)!=0){if((b|0)==0){break}do{if((a[b]|0)!=0){if(d>>>0<2>>>0){break}g=b;c[j+4>>2]=g;c[j>>2]=g;c[j+8>>2]=b+d;l=Aj(k,48,j,e,f)|0;m=l;i=h;return m|0}}while(0);l=c[364]|0;m=l;i=h;return m|0}}while(0);l=c[363]|0;m=l;i=h;return m|0}function qk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;g=b;b=d;d=e;do{if((g|0)!=0){if((d|0)==0){break}if((b|0)==0){break}if((c[d>>2]|0)==0){h=0;j=h;i=f;return j|0}e=g;k=b;l=0;while(1){if(l>>>0<(c[d>>2]|0)>>>0){m=(c[e+4>>2]|0)>>>0<(c[e+8>>2]|0)>>>0}else{m=0}if(!m){break}a[k]=a[c[e+4>>2]|0]|0;l=l+1|0;n=e+4|0;c[n>>2]=(c[n>>2]|0)+1;k=k+1|0}c[d>>2]=l;h=0;j=h;i=f;return j|0}}while(0);h=c[363]|0;j=h;i=f;return j|0}function rk(a,b){a=a|0;b=b|0;var c=0;b=i;c=a;if((vk(c)|0)<<24>>24!=0){i=b;return}nu(c);i=b;return}function sk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if(0==(a|0)){rk(e,c);f=0;g=f;i=d;return g|0}else{f=ou(e,a)|0;g=f;i=d;return g|0}return 0}function tk(a){a=a|0;var b=0,c=0;b=a;if((b|0)!=0){c=b-12|0}else{c=0}i=i;return c|0}function uk(a){a=a|0;var b=0,c=0;b=i;c=a;if((c|0)==0){i=b;return}nj(tk(c)|0);i=b;return}function vk(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=i;c=a;do{if(c>>>0>=30720>>>0){if(!(c>>>0<30728>>>0)){break}d=1;e=d;i=b;return e|0}}while(0);if(c>>>0>=30624>>>0){f=c>>>0<30708>>>0}else{f=0}d=(f?1:0)&255;e=d;i=b;return e|0}function wk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;if((e|0)!=0){f=Ic[e&127](b,21696,4)|0;g=f;i=d;return g|0}else{f=c[363]|0;g=f;i=d;return g|0}return 0}function xk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;if((f|0)!=0){b=Ej(a)|0;g=Ic[f&127](d,(b<<24>>24|0)!=0?21824:21752,(b<<24>>24|0)!=0?4:5)|0;h=g;i=e;return h|0}else{g=c[363]|0;h=g;i=e;return h|0}return 0}function yk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+104|0;f=e|0;g=a;a=b;if((a|0)==0){h=c[363]|0;j=h;i=e;return j|0}if(!((pj(g)|0)<<24>>24!=0)){h=c[365]|0;j=h;i=e;return j|0}Nu(f|0,0,100)|0;b=Fj(g)|0;g=J;k=ob(f|0,1704,(l=i,i=i+16|0,c[l>>2]=b,c[l+8>>2]=g,l)|0)|0;i=l;l=k;if((l|0)<=0){m=c[364]|0}else{m=Ic[a&127](d,f|0,l)|0}h=m;j=h;i=e;return j|0}function zk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0.0,n=0,o=0;f=i;i=i+128|0;g=f|0;j=b;b=d;d=e;if((b|0)==0){k=c[363]|0;l=k;i=f;return l|0}if(!((qj(j)|0)<<24>>24!=0)){k=c[365]|0;l=k;i=f;return l|0}Nu(g|0,0,128)|0;m=+Gj(j);j=ob(g|0,1800,(e=i,i=i+8|0,h[e>>3]=m,e)|0)|0;i=e;e=j;if((e|0)<=0){k=c[364]|0;l=k;i=f;return l|0}j=e;e=g+j-1|0;while(1){do{if(48==(a[e]|0)){if((j|0)==0){n=0;break}n=(a[e-1|0]|0)!=46}else{n=0}}while(0);if(!n){break}a[e]=0;e=e-1|0;j=j-1|0}if((j|0)!=0){if((a[e]|0)!=0){}else{o=16}}else{o=16}if((o|0)==16){fc(1776,17608,3991,22456);return 0}k=Ic[b&127](d,g|0,j)|0;l=k;i=f;return l|0}function Ak(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=a;a=d;if((a|0)==0){h=c[363]|0;j=h;i=f;return j|0}if(!((rj(g)|0)<<24>>24!=0)){h=c[365]|0;j=h;i=f;return j|0}d=zj(g)|0;if(0!=(d|0)){}else{fc(1816,17608,4010,22384);return 0}g=mj(d)|0;h=Ek(g,c[d>>2]|0,b,a,e)|0;j=h;i=f;return j|0}function Bk(b,f,g,h,j){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;l=b;b=f;f=g;g=h;h=j;do{if((l|0)!=0){if((b|0)==0){break}if((g|0)==0){break}if(!((sj(l)|0)<<24>>24!=0)){m=c[365]|0;n=m;i=k;return n|0}if(h>>>0>(e[g+2>>1]|0)>>>0){m=c[364]|0;n=m;i=k;return n|0}j=((d[g|0]|0)!=0?1:0)&255;o=yj(l)|0;if(0!=(o|0)){}else{fc(5184,17608,4119,22480);return 0}if(0==(c[o+4>>2]|0)){m=Ic[b&127](f,2088,2)|0;n=m;i=k;return n|0}do{if(1==(c[o+4>>2]|0)){if((a[g+6|0]|0)!=0){break}j=0}}while(0);p=Ic[b&127](f,1896,1)|0;h=h+1|0;if(j<<24>>24!=0){p=Dk(b,f,a[g|0]|0,h)|0}q=0;while(1){if(q>>>0<(c[o+4>>2]|0)>>>0){r=0==(p|0)}else{r=0}if(!r){break}s=c[(c[o>>2]|0)+(q<<2)>>2]|0;if((s|0)!=0){p=ok(s,b,f,g,h)|0}else{p=wk(b,f)|0}if(0==(p|0)){if(q>>>0<((c[o+4>>2]|0)-1|0)>>>0){p=Ic[b&127](f,2648,1)|0;if(0==(p|0)){if((j<<24>>24|0)!=0){t=Dk(b,f,a[g|0]|0,h)|0}else{t=0}p=t}}}q=q+1|0}h=h-1|0;do{if((j<<24>>24|0)!=0){if(0!=(p|0)){break}p=Dk(b,f,a[g|0]|0,h)|0}}while(0);if(0==(p|0)){u=Ic[b&127](f,1840,1)|0}else{u=p}m=u;n=m;i=k;return n|0}}while(0);m=c[363]|0;n=m;i=k;return n|0}function Ck(b,f,g,h,j){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;l=b;b=f;f=g;g=h;h=j;do{if((l|0)!=0){if((b|0)==0){break}if((g|0)==0){break}if(!((tj(l)|0)<<24>>24!=0)){m=c[365]|0;n=m;i=k;return n|0}if(h>>>0>(e[g+2>>1]|0)>>>0){m=c[364]|0;n=m;i=k;return n|0}j=((d[g|0]|0)!=0?1:0)&255;o=wj(l)|0;if(0!=(o|0)){if(0!=(g|0)){}else{p=11}}else{p=11}if((p|0)==11){fc(3416,17608,4180,22408);return 0}if(0==(c[o+4>>2]|0)){m=Ic[b&127](f,3392,2)|0;n=m;i=k;return n|0}do{if(1==(c[o+4>>2]|0)){if((a[g+6|0]|0)!=0){break}j=0}}while(0);q=Ic[b&127](f,3320,1)|0;h=h+1|0;if(j<<24>>24!=0){q=Dk(b,f,a[g|0]|0,h)|0}r=0;while(1){if(r>>>0<(c[o+4>>2]|0)>>>0){s=0==(q|0)}else{s=0}if(!s){p=49;break}t=c[(c[o>>2]|0)+(r<<2)>>2]|0;if((t|0)==0){p=37;break}if((c[t>>2]|0)==0){p=37;break}u=zj(c[t>>2]|0)|0;v=mj(u)|0;q=Ek(v,c[u>>2]|0,a[g+7|0]|0,b,f)|0;if(0==(q|0)){if((a[g+5|0]|0)!=0){w=Ic[b&127](f,3208,2)|0}else{w=Ic[b&127](f,3136,1)|0}q=w}if(0==(q|0)){if((c[t+4>>2]|0)!=0){x=ok(c[t+4>>2]|0,b,f,g,h)|0}else{x=wk(b,f)|0}q=x}if(0==(q|0)){if(r>>>0<((c[o+4>>2]|0)-1|0)>>>0){q=Ic[b&127](f,2648,1)|0;if(0==(q|0)){if((j<<24>>24|0)!=0){y=Dk(b,f,a[g|0]|0,h)|0}else{y=0}q=y}}}r=r+1|0}if((p|0)==37){fc(2912,17608,4217,22408);return 0}else if((p|0)==49){h=h-1|0;do{if((j<<24>>24|0)!=0){if(0!=(q|0)){break}q=Dk(b,f,a[g|0]|0,h)|0}}while(0);if(0==(q|0)){z=Ic[b&127](f,2632,1)|0}else{z=q}m=z;n=m;i=k;return n|0}}}while(0);m=c[363]|0;n=m;i=k;return n|0}function Dk(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+8|0;g=f|0;h=b;b=c;c=d;d=e;if(0==(c&255|0)){j=0;k=j;i=f;return k|0}a[g]=1==(c&255|0)?9:32;e=Ic[h&127](b,6552,1)|0;l=0;while(1){if(l>>>0<d>>>0){m=0==(e|0)}else{m=0}if(!m){break}n=0;while(1){if(n>>>0<(c&255)>>>0){o=0==(e|0)}else{o=0}if(!o){break}e=Ic[h&127](b,g,1)|0;n=n+1|0}l=l+1|0}j=e;k=j;i=f;return k|0}function Ek(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+24|0;k=j|0;l=j+8|0;m=j+16|0;n=b;b=e;e=f;f=g;g=h;if(0==(f|0)){o=c[363]|0;p=o;i=j;return p|0}do{if((n|0)!=0){if((a[n]|0)==0){break}if(0==(b|0)){break}h=n;if((n|0)!=0){q=n+b|0}else{q=0}r=q;c[k>>2]=0;s=0;t=l;a[t]=a[1440]|0;a[t+1|0]=a[1441]|0;a[t+2|0]=a[1442]|0;t=0;t=Ic[f&127](g,2600,1)|0;while(1){if(h>>>0<r>>>0){u=0==(t|0)}else{u=0}if(!u){break}v=mk(h,r,k)|0;if(0==(v|0)){w=15;break}if((c[k>>2]|0)>>>0>h>>>0){}else{fc(2576,17608,3799,22248);return 0}s=(c[k>>2]|0)-h&255;if((s&255|0)!=0){}else{fc(2504,17608,3801,22248);return 0}if(1==(s&255|0)){if((d[h]|0)==(v|0)){if(1){}else{w=23}}else{w=23}if((w|0)==23){w=0;fc(2392,17608,3824,22248);return 0}a[l+1|0]=0;switch(v|0){case 92:{a[l+1|0]=92;break};case 10:{a[l+1|0]=110;break};case 12:{a[l+1|0]=102;break};case 47:{if(e<<24>>24!=0){a[l+1|0]=47}break};case 34:{a[l+1|0]=34;break};case 8:{a[l+1|0]=98;break};case 13:{a[l+1|0]=114;break};case 9:{a[l+1|0]=116;break};default:{}}if((a[l+1|0]|0)!=0){t=Ic[f&127](g,l|0,2)|0}else{t=Ic[f&127](g,h,s&255)|0}}else{Nu(m|0,0,8)|0;x=ob(m|0,2328,(y=i,i=i+8|0,c[y>>2]=v,y)|0)|0;i=y;t=x;if((t|0)!=6){w=41;break}t=Ic[f&127](g,m|0,6)|0}h=h+(s&255)|0}if((w|0)!=15)if((w|0)==41){t=c[364]|0}if(0==(t|0)){t=Ic[f&127](g,2600,1)|0}o=t;p=o;i=j;return p|0}}while(0);o=Ic[f&127](g,2616,2)|0;p=o;i=j;return p|0}function Fk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if((e|0)==0){i=d;return}b=0;f=0;while(1){if(!(b>>>0<(c[e+4>>2]|0)>>>0)){break}f=c[(c[e>>2]|0)+(b<<2)>>2]|0;if((f|0)!=0){c[(c[e>>2]|0)+(b<<2)>>2]=0;if(a<<24>>24!=0){nj(f)}}b=b+1|0}Nj(e|0,0)|0;b=e|0;c[b>>2]=c[7694];c[b+4>>2]=c[7695];c[b+8>>2]=c[7696];i=d;return}function Gk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;a=b;if((c[e+24>>2]|0)!=0){if(((tj(c[e+8>>2]|0)|0)<<24>>24|0)!=0){}else{fc(21184,17608,3322,22320);return 0}f=Hk(e,a)|0;g=f;i=d;return g|0}if(!((sj(c[e+8>>2]|0)|0)<<24>>24!=0)){fc(21008,17608,3343,22320);return 0}b=yj(c[e+8>>2]|0)|0;if((b|0)!=0){if((b|0)==(c[(c[e+8>>2]|0)+4>>2]|0)){}else{h=8}}else{h=8}if((h|0)==8){fc(21120,17608,3329,22320);return 0}h=Mj(b,a)|0;if(0!=(h|0)){nj(a)}else{a=e+36|0;c[a>>2]=(c[a>>2]|0)+1}f=h;g=f;i=d;return g|0}function Hk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;e=a;a=b;if((e|0)!=0){if((a|0)!=0){}else{f=3}}else{f=3}if((f|0)==3){fc(20992,17608,3256,22296);return 0}do{if((c[e+24>>2]|0)!=0){if(((tj(c[e+8>>2]|0)|0)<<24>>24|0)==0){break}b=wj(c[e+8>>2]|0)|0;g=0;if((b|0)!=0){if((c[(c[e+8>>2]|0)+4>>2]|0)==(b|0)){}else{f=8}}else{f=8}if((f|0)==8){fc(20880,17608,3263,22296);return 0}if((c[b+8>>2]|0)!=0){if((c[b+4>>2]|0)==((c[b+8>>2]|0)-1|0)){f=11}}else{f=11}do{if((f|0)==11){h=c[b+8>>2]|0;if((c[b+4>>2]|0)!=0){j=c[b+4>>2]<<1}else{j=5}if(!(h>>>0>(gk(b|0,j)|0)>>>0)){break}nj(a);k=c[367]|0;l=k;i=d;return l|0}}while(0);g=Kj()|0;if((g|0)==0){nj(a);k=c[367]|0;l=k;i=d;return l|0}c[g>>2]=Yj(c[e+24>>2]|0)|0;if(0==(c[(c[g>>2]|0)+8>>2]|0)){}else{fc(20664,17608,3284,22296);return 0}lj(c[g>>2]|0);c[e+24>>2]=0;c[g+4>>2]=a;lj(a);h=hk(b|0,g)|0;if(0!=(h|0)){ek(g)}else{m=e+36|0;c[m>>2]=(c[m>>2]|0)+1}k=h;l=k;i=d;return l|0}}while(0);if((a|0)!=0){nj(a)}a=c[369]|0;c[e+28>>2]=a;k=a;l=k;i=d;return l|0}function Ik(a){a=a|0;var b=0,d=0;b=i;d=a;if((d|0)==0){i=b;return}if((c[d>>2]|0)!=0){nj(c[d>>2]|0);c[d>>2]=0}if((c[d+4>>2]|0)!=0){nj(c[d+4>>2]|0);c[d+4>>2]=0}i=b;return}function Jk(){var a=0,b=0,d=0,e=0,f=0;a=i;b=Tj(6,0)|0;if(0==(b|0)){d=b;i=a;return d|0}e=c[b+4>>2]|0;if(0!=(e|0)){}else{fc(5184,17608,2348,22200);return 0}f=e;c[f>>2]=c[7716];c[f+4>>2]=c[7717];c[f+8>>2]=c[7718];d=b;i=a;return d|0}function Kk(){var a=0,b=0,d=0,e=0,f=0;a=i;b=Tj(7,0)|0;if(0==(b|0)){d=b;i=a;return d|0}e=c[b+4>>2]|0;if(0!=(e|0)){}else{fc(4968,17608,2360,22080);return 0}f=e;c[f>>2]=c[7710];c[f+4>>2]=c[7711];c[f+8>>2]=c[7712];d=b;i=a;return d|0}function Lk(a){a=a|0;var b=0,d=0;b=i;d=a;if((d|0)==0){i=b;return}if((c[d+4>>2]|0)==0){i=b;return}a=c[d+4>>2]|0;if((c[d+4>>2]|0)==(a|0)){}else{fc(18992,17608,2442,22136)}Mk(a|0,224);a=d;c[a>>2]=c[304];c[a+4>>2]=c[305];c[a+8>>2]=c[306];i=b;return}function Mk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;do{if((e|0)!=0){if((a|0)==0){break}if((c[e+4>>2]|0)==0){break}b=0;while(1){if(!(b>>>0<(c[e+4>>2]|0)>>>0)){break}f=c[(c[e>>2]|0)+(b<<2)>>2]|0;if((f|0)!=0){Fc[a&511](f)}b=b+1|0}}}while(0);gk(e,0)|0;i=d;return}function Nk(a){a=a|0;var b=0,d=0;b=i;d=a;a=yj(d)|0;if((a|0)==0){i=b;return}if((c[d+4>>2]|0)==(a|0)){}else{fc(18952,17608,2496,22168)}Fk(a,1);a=d;c[a>>2]=c[304];c[a+4>>2]=c[305];c[a+8>>2]=c[306];i=b;return}function Ok(a){a=a|0;var b=0,d=0;b=i;d=a;if((d|0)==0){i=b;return}a=d;c[a>>2]=c[304];c[a+4>>2]=c[305];c[a+8>>2]=c[306];i=b;return}function Pk(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;if((d|0)==0){i=b;return}if((c[d>>2]|0)==0){i=b;return}if((c[(c[d>>2]|0)+4>>2]|0)==0){i=b;return}if(!((vk(d)|0)<<24>>24!=0)){a=c[d+8>>2]|0;Fc[c[(c[d>>2]|0)+4>>2]&511](d);e=d;c[e>>2]=c[304];c[e+4>>2]=c[305];c[e+8>>2]=c[306];c[d+8>>2]=a}i=b;return}function Qk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=b;b=d;do{if(!(((c[f+48>>2]|0)+b+1|0)>>>0>(c[f+44>>2]|0)>>>0)){g=8;break}}while((Sk(f)|0)!=0);if((g|0)==8){h=1;j=h;i=e;return j|0}if((a[f+15|0]|0)==10){}else{fc(17840,17608,809,21968);return 0}h=0;j=h;i=e;return j|0}function Rk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,958,22592);return 0}a[f+11|0]=0;if((c[f+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,962,22592);return 0}b=f+48|0;c[b>>2]=(c[b>>2]|0)-1;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;switch(d|0){case 116:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,977,22592);return 0}d=f+48|0;b=c[d>>2]|0;c[d>>2]=b+1;a[(c[f+40>>2]|0)+b|0]=9;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 114:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,974,22592);return 0}b=f+48|0;d=c[b>>2]|0;c[b>>2]=d+1;a[(c[f+40>>2]|0)+d|0]=13;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 47:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,986,22592);return 0}d=f+48|0;b=c[d>>2]|0;c[d>>2]=b+1;a[(c[f+40>>2]|0)+b|0]=47;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 98:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,965,22592);return 0}b=f+48|0;d=c[b>>2]|0;c[b>>2]=d+1;a[(c[f+40>>2]|0)+d|0]=8;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 117:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,989,22592);return 0}d=f+48|0;b=c[d>>2]|0;c[d>>2]=b+1;a[(c[f+40>>2]|0)+b|0]=92;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,990,22592);return 0}b=f+48|0;d=c[b>>2]|0;c[b>>2]=d+1;a[(c[f+40>>2]|0)+d|0]=117;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 110:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,971,22592);return 0}d=f+48|0;b=c[d>>2]|0;c[d>>2]=b+1;a[(c[f+40>>2]|0)+b|0]=10;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 34:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,980,22592);return 0}b=f+48|0;d=c[b>>2]|0;c[b>>2]=d+1;a[(c[f+40>>2]|0)+d|0]=34;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 92:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,983,22592);return 0}d=f+48|0;b=c[d>>2]|0;c[d>>2]=b+1;a[(c[f+40>>2]|0)+b|0]=92;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};case 102:{if(((c[f+48>>2]|0)+2|0)>>>0<=(c[f+44>>2]|0)>>>0){}else{fc(18144,17608,968,22592);return 0}b=f+48|0;d=c[b>>2]|0;c[b>>2]=d+1;a[(c[f+40>>2]|0)+d|0]=12;a[(c[f+40>>2]|0)+(c[f+48>>2]|0)|0]=0;break};default:{g=0;h=g;i=e;return h|0}}g=1;h=g;i=e;return h|0}function Sk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=b;b=c[e+48>>2]|0;f=c[e+44>>2]<<1;g=Kc[c[e+3680>>2]&255](f)|0;if((g|0)==0){a[e+15|0]=10;h=0;j=h;i=d;return j|0}if(f>>>0>0>>>0){}else{fc(17656,17608,792,22e3);return 0}Ku(g|0,c[e+40>>2]|0,b)|0;if((c[e+40>>2]|0)!=(e+180|0)){Fc[c[e+3684>>2]&511](c[e+40>>2]|0)}c[e+40>>2]=g;c[e+44>>2]=f;h=1;j=h;i=d;return j|0}function Tk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[o>>2]|0;nl(33704,h,33832);c[8674]=25364;c[8676]=25384;c[8675]=0;qm(34704,33704);c[8694]=0;c[8695]=-1;j=c[s>>2]|0;c[8402]=25144;yr(33612);Nu(33616,0,24)|0;c[8402]=25512;c[8410]=j;zr(g,33612);k=Br(g,34032)|0;l=k;Ar(g);c[8411]=l;c[8412]=33840;a[33652]=(Kc[c[(c[k>>2]|0)+28>>2]&255](l)|0)&1;c[8608]=25268;c[8609]=25288;qm(34436,33608);c[8627]=0;c[8628]=-1;l=c[r>>2]|0;c[8414]=25144;yr(33660);Nu(33664,0,24)|0;c[8414]=25512;c[8422]=l;zr(f,33660);k=Br(f,34032)|0;g=k;Ar(f);c[8423]=g;c[8424]=33848;a[33700]=(Kc[c[(c[k>>2]|0)+28>>2]&255](g)|0)&1;c[8652]=25268;c[8653]=25288;qm(34612,33656);c[8671]=0;c[8672]=-1;g=c[(c[(c[8652]|0)-12>>2]|0)+34632>>2]|0;c[8630]=25268;c[8631]=25288;qm(34524,g);c[8649]=0;c[8650]=-1;c[(c[(c[8674]|0)-12>>2]|0)+34768>>2]=34432;g=(c[(c[8652]|0)-12>>2]|0)+34612|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[8652]|0)-12>>2]|0)+34680>>2]=34432;$k(33552,h,33856);c[8586]=25316;c[8588]=25336;c[8587]=0;qm(34352,33552);c[8606]=0;c[8607]=-1;c[8364]=25072;yr(33460);Nu(33464,0,24)|0;c[8364]=25440;c[8372]=j;zr(e,33460);j=Br(e,34024)|0;h=j;Ar(e);c[8373]=h;c[8374]=33864;a[33500]=(Kc[c[(c[j>>2]|0)+28>>2]&255](h)|0)&1;c[8516]=25220;c[8517]=25240;qm(34068,33456);c[8535]=0;c[8536]=-1;c[8376]=25072;yr(33508);Nu(33512,0,24)|0;c[8376]=25440;c[8384]=l;zr(d,33508);l=Br(d,34024)|0;h=l;Ar(d);c[8385]=h;c[8386]=33872;a[33548]=(Kc[c[(c[l>>2]|0)+28>>2]&255](h)|0)&1;c[8560]=25220;c[8561]=25240;qm(34244,33504);c[8579]=0;c[8580]=-1;h=c[(c[(c[8560]|0)-12>>2]|0)+34264>>2]|0;c[8538]=25220;c[8539]=25240;qm(34156,h);c[8557]=0;c[8558]=-1;c[(c[(c[8586]|0)-12>>2]|0)+34416>>2]=34064;h=(c[(c[8560]|0)-12>>2]|0)+34244|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[8560]|0)-12>>2]|0)+34312>>2]=34064;i=b;return}function Uk(a){a=a|0;Xm(34432)|0;Xm(34520)|0;an(34064)|0;an(34152)|0;return}function Vk(a){a=a|0;c[a>>2]=25072;Ar(a+4|0);return}function Wk(a){a=a|0;c[a>>2]=25072;Ar(a+4|0);tu(a);return}function Xk(b,d){b=b|0;d=d|0;var e=0;Kc[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=Br(d,34024)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Kc[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function Yk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Tc[c[(c[a>>2]|0)+20>>2]&127](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Na(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Ka(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function Zk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]|0)!=0){f=Na(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((Hc[c[(c[g>>2]|0)+52>>2]&127](b,c[h>>2]|0)|0)==-1){f=i;j=6;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=6;break}}if((j|0)==6){return f|0}return 0}function _k(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){c[g>>2]=d;if((a[b+44|0]|0)!=0){if((Na(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Oc[c[(c[u>>2]|0)+12>>2]&63](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Na(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Na(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function $k(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=25072;j=b+4|0;yr(j);Nu(b+8|0,0,24)|0;c[h>>2]=25840;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;zr(g,j);j=Br(g,34024)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Kc[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Kc[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){Ar(g);i=f;return}Kq(1848);Ar(g);i=f;return}function al(a){a=a|0;c[a>>2]=25072;Ar(a+4|0);return}function bl(a){a=a|0;c[a>>2]=25072;Ar(a+4|0);tu(a);return}function cl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Br(d,34024)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Kc[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Kc[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}Kq(1848);return}function dl(a){a=a|0;return gl(a,0)|0}function el(a){a=a|0;return gl(a,1)|0}function fl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Oc[c[(c[o>>2]|0)+12>>2]&63](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if(($b(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function gl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]|0)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;a:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=fb(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break a}}i=e;return n|0}}while(0);b:do{if((a[b+53|0]|0)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=Oc[c[(c[t>>2]|0)+16>>2]&63](t,s,o,w,h,g,p,j)|0;if((x|0)==3){y=14;break}else if((x|0)==2){n=-1;y=22;break}else if((x|0)!=1){z=r;break b}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=22;break}v=fb(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=22;break}a[w]=v;r=r+1|0}if((y|0)==14){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==22){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if(($b(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=22;break}else{b=z}}if((y|0)==22){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function hl(a){a=a|0;c[a>>2]=25144;Ar(a+4|0);return}function il(a){a=a|0;c[a>>2]=25144;Ar(a+4|0);tu(a);return}function jl(b,d){b=b|0;d=d|0;var e=0;Kc[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=Br(d,34032)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Kc[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function kl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Tc[c[(c[a>>2]|0)+20>>2]&127](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Na(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Ka(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function ll(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]|0)!=0){g=Na(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((Hc[c[(c[h>>2]|0)+52>>2]&127](b,d[i]|0)|0)==-1){g=j;k=6;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=6;break}}if((k|0)==6){return g|0}return 0}function ml(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){a[g]=d;if((a[b+44|0]|0)!=0){if((Na(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Oc[c[(c[u>>2]|0)+12>>2]&63](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Na(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Na(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function nl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=25144;j=b+4|0;yr(j);Nu(b+8|0,0,24)|0;c[h>>2]=25912;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;zr(g,j);j=Br(g,34032)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Kc[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Kc[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){Ar(g);i=f;return}Kq(1848);Ar(g);i=f;return}function ol(a){a=a|0;c[a>>2]=25144;Ar(a+4|0);return}function pl(a){a=a|0;c[a>>2]=25144;Ar(a+4|0);tu(a);return}function ql(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Br(d,34032)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Kc[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Kc[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}Kq(1848);return}function rl(a){a=a|0;return ul(a,0)|0}function sl(a){a=a|0;return ul(a,1)|0}function tl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Oc[c[(c[o>>2]|0)+12>>2]&63](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if(($b(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function ul(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]|0)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;a:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=fb(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break a}}i=f;return o|0}}while(0);b:do{if((a[b+53|0]|0)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=Oc[c[(c[u>>2]|0)+16>>2]&63](u,t,p,x,j,h,q,k)|0;if((y|0)==3){z=14;break}else if((y|0)==2){o=-1;z=23;break}else if((y|0)!=1){A=s;break b}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=23;break}w=fb(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=23;break}a[x]=w;s=s+1|0}if((z|0)==14){a[h]=a[p]|0;A=s;break}else if((z|0)==23){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=21;break}j=k-1|0;if(($b(d[g+j|0]|0,c[l>>2]|0)|0)==-1){o=-1;z=23;break}else{k=j}}if((z|0)==21){B=a[h]|0;break}else if((z|0)==23){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function vl(){Tk(0);hb(182,34784,t|0)|0;return}function wl(a){a=a|0;return}function xl(a){a=a|0;var b=0;b=a+4|0;H=c[b>>2]|0,c[b>>2]=H+1,H;return}function yl(a){a=a|0;var b=0,d=0;b=a+4|0;if(((H=c[b>>2]|0,c[b>>2]=H+ -1,H)|0)!=0){d=0;return d|0}Fc[c[(c[a>>2]|0)+8>>2]&511](a);d=1;return d|0}function zl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=23448;d=a+4|0;if((d|0)==0){return}a=Lu(b|0)|0;e=su(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;Ku(f|0,b|0,a+1|0)|0;return}function Al(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=23448;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}uu(e)}}while(0);tu(a);return}function Bl(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=23448;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)>=0){e=a|0;return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a|0;return}uu(d);e=a|0;return}function Cl(a){a=a|0;return c[a+4>>2]|0}function Dl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=23384;e=b+4|0;if((e|0)==0){return}if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=Lu(f|0)|0;b=su(d+13|0)|0;c[b+4>>2]=d;c[b>>2]=d;g=b+12|0;c[e>>2]=g;c[b+8>>2]=0;Ku(g|0,f|0,d+1|0)|0;return}function El(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=23384;d=a+4|0;if((d|0)==0){return}a=Lu(b|0)|0;e=su(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;Ku(f|0,b|0,a+1|0)|0;return}function Fl(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=23384;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}uu(e)}}while(0);tu(a);return}function Gl(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=23384;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)>=0){e=a|0;return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a|0;return}uu(d);e=a|0;return}function Hl(a){a=a|0;return c[a+4>>2]|0}function Il(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=23448;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}uu(e)}}while(0);tu(a);return}function Jl(a){a=a|0;return}function Kl(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function Ll(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;Lc[c[(c[a>>2]|0)+12>>2]&63](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function Ml(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function Nl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=Xb(e|0)|0;e=Lu(d|0)|0;if(e>>>0>4294967279>>>0){Tl(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;Ku(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=ru(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;Ku(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function Ol(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+16|0;g=f|0;h=d|0;j=c[h>>2]|0;k=e;do{if((j|0)!=0){l=a[k]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[e+4>>2]|0}if((m|0)==0){n=j}else{bm(e,12160,2)|0;n=c[h>>2]|0}l=c[d+4>>2]|0;Lc[c[(c[l>>2]|0)+24>>2]&63](g,l,n);l=g;o=a[l]|0;if((o&1)==0){p=(o&255)>>>1;q=g+1|0}else{p=c[g+4>>2]|0;q=c[g+8>>2]|0}bm(e,q,p)|0;if((a[l]&1)==0){break}tu(c[g+8>>2]|0)}}while(0);g=b;c[g>>2]=c[k>>2];c[g+4>>2]=c[k+4>>2];c[g+8>>2]=c[k+8>>2];Nu(k|0,0,12)|0;i=f;return}function Pl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=Lu(e|0)|0;if(j>>>0>4294967279>>>0){Tl(0)}if(j>>>0<11>>>0){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=ru(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}Ku(k|0,e|0,j)|0;a[k+j|0]=0;Ol(g,d,h);Dl(b|0,g);if(!((a[g]&1)==0)){tu(c[g+8>>2]|0)}if((a[h]&1)==0){n=b|0;c[n>>2]=25408;o=b+8|0;p=d;q=o;r=p|0;s=c[r>>2]|0;t=p+4|0;u=c[t>>2]|0;v=q|0;c[v>>2]=s;w=q+4|0;c[w>>2]=u;i=f;return}tu(c[h+8>>2]|0);n=b|0;c[n>>2]=25408;o=b+8|0;p=d;q=o;r=p|0;s=c[r>>2]|0;t=p+4|0;u=c[t>>2]|0;v=q|0;c[v>>2]=s;w=q+4|0;c[w>>2]=u;i=f;return}function Ql(a){a=a|0;Gl(a|0);tu(a);return}function Rl(a){a=a|0;Gl(a|0);return}function Sl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{_a(33784,33760)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;Fc[d&511](b);h;c[a>>2]=-1;i;Pb(33784)|0;return}function Tl(a){a=a|0;a=tc(8)|0;zl(a,19128);c[a>>2]=23416;Hb(a|0,29072,74)}function Ul(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){Tl(0)}if(f>>>0<11>>>0){a[b]=f<<1;g=b+1|0}else{d=f+16&-16;h=ru(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}Ku(g|0,e|0,f)|0;a[g+f|0]=0;return}function Vl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){Tl(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;Ku(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=ru(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;Ku(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function Wl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(d>>>0>4294967279>>>0){Tl(0)}if(d>>>0<11>>>0){a[b]=d<<1;f=b+1|0;Nu(f|0,e|0,d|0)|0;g=f+d|0;a[g]=0;return}else{h=d+16&-16;i=ru(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=d;f=i;Nu(f|0,e|0,d|0)|0;g=f+d|0;a[g]=0;return}}function Xl(b){b=b|0;if((a[b]&1)==0){return}tu(c[b+8>>2]|0);return}function Yl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=Lu(d|0)|0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}cm(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+1|0}else{k=c[b+8>>2]|0}Ou(k|0,d|0,e|0)|0;a[k+e|0]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function Zl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=(g&1)==0;if(h){i=(g&255)>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){_l(b,d-i|0,e)|0;return}if(h){a[b+1+d|0]=0;a[f]=d<<1;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function _l(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){dm(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}Nu(l+j|0,e|0,d|0)|0;e=j+d|0;if((a[f]&1)==0){a[f]=e<<1}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function $l(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>4294967279>>>0){Tl(0)}e=b;f=a[e]|0;if((f&1)==0){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<11>>>0){j=10}else{j=(f+16&-16)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==10){k=b+1|0;l=c[b+8>>2]|0;m=1;n=0}else{f=j+1|0;if(j>>>0>g>>>0){o=ru(f)|0}else{o=ru(f)|0}if((h&1)==0){k=o;l=b+1|0;m=0;n=1;break}else{k=o;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}Ku(k|0,l|0,p+1|0)|0;if(m){tu(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function am(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=10}if((h|0)==(i|0)){dm(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+1|0;l=h+1|0;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}}function bm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){cm(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}Ku(k+j|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function cm(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-18-d|0)>>>0<e>>>0){Tl(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11>>>0){o=11;break}o=n+16&-16}else{o=-17}}while(0);e=ru(o)|0;if((g|0)!=0){Ku(e|0,k|0,g)|0}if((i|0)!=0){Ku(e+g|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){Ku(e+(i+g)|0,k+(h+g)|0,j-g|0)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}tu(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function dm(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-17-d|0)>>>0<e>>>0){Tl(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11>>>0){n=11;break}n=m+16&-16}else{n=-17}}while(0);e=ru(n)|0;if((g|0)!=0){Ku(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){Ku(e+(i+g)|0,j+(h+g)|0,m-g|0)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}tu(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function em(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){Tl(0)}if(e>>>0<2>>>0){a[b]=e<<1;f=b+4|0;g=Pt(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=ru(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=Pt(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function fm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){Tl(0)}if(d>>>0<2>>>0){a[b]=d<<1;f=b+4|0;g=Rt(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=ru(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=Rt(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function gm(b){b=b|0;if((a[b]&1)==0){return}tu(c[b+8>>2]|0);return}function hm(a,b){a=a|0;b=b|0;return im(a,b,Ot(b)|0)|0}function im(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}lm(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+4|0}else{k=c[b+8>>2]|0}Qt(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function jm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>1073741807>>>0){Tl(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=1}else{j=(f+4&-4)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{f=(j<<2)+4|0;if(j>>>0>g>>>0){o=ru(f)|0}else{o=ru(f)|0}f=o;if((h&1)==0){k=f;l=b+4|0;m=0;n=1;break}else{k=f;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}Pt(k,l,p+1|0)|0;if(m){tu(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function km(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=1}if((h|0)==(i|0)){mm(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+4|0;l=h+1|0;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}}function lm(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741806-d|0)>>>0<e>>>0){Tl(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2>>>0){o=2;break}o=n+4&-4}else{o=1073741807}}while(0);e=ru(o<<2)|0;if((g|0)!=0){Pt(e,k,g)|0}if((i|0)!=0){Pt(e+(g<<2)|0,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){Pt(e+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}tu(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function mm(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741807-d|0)>>>0<e>>>0){Tl(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2>>>0){n=2;break}n=m+4&-4}else{n=1073741807}}while(0);e=ru(n<<2)|0;if((g|0)!=0){Pt(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){Pt(e+(i+g<<2)|0,j+(h+g<<2)|0,m-g|0)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}tu(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function nm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=tc(16)|0;do{if((a[34904]|0)==0){if((wb(34904)|0)==0){break}c[8228]=24912;hb(110,32912,t|0)|0}}while(0);b=Ru(32912,0,32)|0;c[f>>2]=b&0|1;c[f+4>>2]=J|0;Pl(e,f,14048);c[e>>2]=24096;Hb(e|0,29616,70)}function om(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=24072;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;Lc[c[(c[d>>2]|0)+(f<<2)>>2]&63](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0)}Ar(a+28|0);nu(c[d>>2]|0);nu(c[e>>2]|0);nu(c[a+48>>2]|0);nu(c[a+60>>2]|0);return}function pm(a,b){a=a|0;b=b|0;zr(a,b+28|0);return}function qm(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;Nu(a+32|0,0,40)|0;if((b|0)==0){return}yr(b);return}function rm(a){a=a|0;c[a>>2]=25144;Ar(a+4|0);tu(a);return}function sm(a){a=a|0;c[a>>2]=25144;Ar(a+4|0);return}function tm(a,b){a=a|0;b=b|0;return}function um(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function vm(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function wm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function xm(a){a=a|0;return 0}function ym(a){a=a|0;return 0}function zm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=Kc[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=8;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=8;break}}if((m|0)==8){return g|0}return 0}function Am(a){a=a|0;return-1|0}function Bm(a){a=a|0;var b=0,e=0;if((Kc[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function Cm(a,b){a=a|0;b=b|0;return-1|0}function Dm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((Hc[c[(c[g>>2]|0)+52>>2]&127](b,d[l]|0)|0)==-1){h=k;n=7;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=7;break}}if((n|0)==7){return h|0}return 0}function Em(a,b){a=a|0;b=b|0;return-1|0}function Fm(a){a=a|0;c[a>>2]=25072;Ar(a+4|0);tu(a);return}function Gm(a){a=a|0;c[a>>2]=25072;Ar(a+4|0);return}function Hm(a,b){a=a|0;b=b|0;return}function Im(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Jm(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Km(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function Lm(a){a=a|0;return 0}function Mm(a){a=a|0;return 0}function Nm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=Kc[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((j|0)==-1){f=b;l=7;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=7;break}}if((l|0)==7){return f|0}return 0}function Om(a){a=a|0;return-1|0}function Pm(a){a=a|0;var b=0,d=0;if((Kc[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function Qm(a,b){a=a|0;b=b|0;return-1|0}function Rm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((Hc[c[(c[e>>2]|0)+52>>2]&127](a,c[j>>2]|0)|0)==-1){f=i;l=8;break}}k=i+1|0;if((k|0)>=(d|0)){f=k;l=8;break}i=k;j=j+4|0}if((l|0)==8){return f|0}return 0}function Sm(a,b){a=a|0;b=b|0;return-1|0}function Tm(a){a=a|0;om(a+8|0);tu(a);return}function Um(a){a=a|0;om(a+8|0);return}function Vm(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;om(b+(d+8)|0);tu(b+d|0);return}function Wm(a){a=a|0;om(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Xm(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Xm(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((Kc[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;nm(h+k|0,c[h+(k+16)>>2]|1)}}while(0);fn(e);i=d;return b|0}function Ym(a){a=a|0;om(a+8|0);tu(a);return}function Zm(a){a=a|0;om(a+8|0);return}function _m(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;om(b+(d+8)|0);tu(b+d|0);return}function $m(a){a=a|0;om(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function an(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{an(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((Kc[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;nm(h+k|0,c[h+(k+16)>>2]|1)}}while(0);ln(e);i=d;return b|0}function bn(a){a=a|0;om(a+4|0);tu(a);return}function cn(a){a=a|0;om(a+4|0);return}function dn(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;om(b+(d+4)|0);tu(b+d|0);return}function en(a){a=a|0;om(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function fn(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(Bb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Kc[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;nm(d+b|0,c[d+(b+16)>>2]|1);return}function gn(a){a=a|0;om(a+4|0);tu(a);return}function hn(a){a=a|0;om(a+4|0);return}function jn(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;om(b+(d+4)|0);tu(b+d|0);return}function kn(a){a=a|0;om(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function ln(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(Bb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Kc[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;nm(d+b|0,c[d+(b+16)>>2]|1);return}function mn(a){a=a|0;return 15160}function nn(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){Vl(a,19760,35);return}else{Nl(a,b|0,c);return}}function on(a){a=a|0;Jl(a|0);return}function pn(a){a=a|0;Rl(a|0);tu(a);return}function qn(a){a=a|0;Rl(a|0);return}function rn(a){a=a|0;om(a);tu(a);return}function sn(a){a=a|0;Jl(a|0);tu(a);return}function tn(a){a=a|0;wl(a|0);tu(a);return}function un(a){a=a|0;wl(a|0);return}function vn(a){a=a|0;wl(a|0);return}function wn(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=7;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=7;break}if(l<<24>>24<k<<24>>24){i=1;j=7;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break a}else{b=k;h=l}}if((j|0)==7){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function xn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=e;g=f-d|0;if(g>>>0>4294967279>>>0){Tl(b)}if(g>>>0<11>>>0){a[b]=g<<1;h=b+1|0}else{i=g+16&-16;j=ru(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((e|0)==(f|0)){k=h;a[k]=0;return}else{l=h;m=e}while(1){a[l]=a[m]|0;e=m+1|0;if((e|0)==(f|0)){break}else{l=l+1|0;m=e}}k=h+(f+(-d|0))|0;a[k]=0;return}function yn(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function zn(a){a=a|0;wl(a|0);tu(a);return}function An(a){a=a|0;wl(a|0);return}function Bn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=b}else{a=b;h=e;while(1){if((a|0)==(d|0)){i=-1;j=7;break}k=c[a>>2]|0;l=c[h>>2]|0;if((k|0)<(l|0)){i=-1;j=7;break}if((l|0)<(k|0)){i=1;j=7;break}k=a+4|0;l=h+4|0;if((l|0)==(f|0)){g=k;break a}else{a=k;h=l}}if((j|0)==7){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function Cn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){Tl(b)}if(h>>>0<2>>>0){a[b]=g>>>1;i=b+4|0}else{g=h+4&-4;j=ru(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=f-4+(-d|0)|0;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+((j>>>2)+1<<2)|0;c[k>>2]=0;return}function Dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function En(a){a=a|0;wl(a|0);tu(a);return}function Fn(a){a=a|0;wl(a|0);return}function Gn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];Ec[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}pm(r,g);q=r|0;r=c[q>>2]|0;if(!((c[8584]|0)==-1)){c[m>>2]=34336;c[m+4>>2]=52;c[m+8>>2]=0;Sl(34336,m,138)}m=(c[8585]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;yl(c[q>>2]|0)|0;pm(s,g);n=s|0;p=c[n>>2]|0;if(!((c[8488]|0)==-1)){c[l>>2]=33952;c[l+4>>2]=52;c[l+8>>2]=0;Sl(33952,l,138)}d=(c[8489]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;yl(c[n>>2]|0)|0;z=t|0;A=x;Gc[c[(c[A>>2]|0)+24>>2]&127](z,y);Gc[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(Hn(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];Xl(t+12|0);Xl(t|0);i=k;return}}while(0);o=tc(4)|0;Tt(o);Hb(o|0,29040,174)}}while(0);k=tc(4)|0;Tt(k);Hb(k|0,29040,174)}function Hn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=mu(l)|0;if((n|0)!=0){o=n;p=n;break}yu();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=0}else{if((c[q+12>>2]|0)!=(c[q+16>>2]|0)){y=q;break}if((Kc[c[(c[q>>2]|0)+36>>2]&255](q)|0)==-1){c[t>>2]=0;y=0;break}else{y=c[t>>2]|0;break}}}while(0);q=(y|0)==0;l=c[b>>2]|0;do{if((l|0)==0){z=0}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){z=l;break}if(!((Kc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){z=l;break}c[b>>2]=0;z=0}}while(0);A=(z|0)==0;B=c[t>>2]|0;if(!((q^A)&(r|0)!=0)){break}l=c[B+12>>2]|0;if((l|0)==(c[B+16>>2]|0)){C=(Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{C=a[l]|0}if(j){D=C}else{D=Hc[c[(c[d>>2]|0)+12>>2]&127](g,C)|0}l=s+1|0;if(m){s=l;w=w;r=r;continue}b:do{if(j){x=r;n=w;v=o;u=0;E=e;while(1){do{if((a[v]|0)==1){F=a[E]|0;G=(F&1)==0;if(G){H=E+1|0}else{H=c[E+8>>2]|0}if(!(D<<24>>24==(a[H+s|0]|0))){a[v]=0;I=u;J=n;K=x-1|0;break}if(G){L=(F&255)>>>1}else{L=c[E+4>>2]|0}if((L|0)!=(l|0)){I=1;J=n;K=x;break}a[v]=2;I=1;J=n+1|0;K=x-1|0}else{I=u;J=n;K=x}}while(0);F=E+12|0;if((F|0)==(f|0)){M=K;N=J;O=I;break b}x=K;n=J;v=v+1|0;u=I;E=F}}else{E=r;u=w;v=o;n=0;x=e;while(1){do{if((a[v]|0)==1){F=x;if((a[F]&1)==0){P=x+1|0}else{P=c[x+8>>2]|0}if(!(D<<24>>24==(Hc[c[(c[d>>2]|0)+12>>2]&127](g,a[P+s|0]|0)|0)<<24>>24)){a[v]=0;Q=n;R=u;S=E-1|0;break}G=a[F]|0;if((G&1)==0){T=(G&255)>>>1}else{T=c[x+4>>2]|0}if((T|0)!=(l|0)){Q=1;R=u;S=E;break}a[v]=2;Q=1;R=u+1|0;S=E-1|0}else{Q=n;R=u;S=E}}while(0);G=x+12|0;if((G|0)==(f|0)){M=S;N=R;O=Q;break b}E=S;u=R;v=v+1|0;n=Q;x=G}}}while(0);if(!O){s=l;w=N;r=M;continue}q=c[t>>2]|0;x=q+12|0;n=c[x>>2]|0;if((n|0)==(c[q+16>>2]|0)){Kc[c[(c[q>>2]|0)+40>>2]&255](q)|0}else{c[x>>2]=n+1}if((M+N|0)>>>0<2>>>0){s=l;w=N;r=M;continue}else{U=N;V=o;W=e}while(1){do{if((a[V]|0)==2){n=a[W]|0;if((n&1)==0){X=(n&255)>>>1}else{X=c[W+4>>2]|0}if((X|0)==(l|0)){Y=U;break}a[V]=0;Y=U-1|0}else{Y=U}}while(0);n=W+12|0;if((n|0)==(f|0)){s=l;w=Y;r=M;continue a}else{U=Y;V=V+1|0;W=n}}}do{if((B|0)==0){Z=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){Z=B;break}if((Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[t>>2]=0;Z=0;break}else{Z=c[t>>2]|0;break}}}while(0);t=(Z|0)==0;do{if(A){_=91}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(t){break}else{_=93;break}}if((Kc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[b>>2]=0;_=91;break}else{if(t){break}else{_=93;break}}}}while(0);if((_|0)==91){if(t){_=93}}if((_|0)==93){c[h>>2]=c[h>>2]|2}c:do{if(m){_=98}else{t=o;b=e;while(1){if((a[t]|0)==2){$=b;break c}z=b+12|0;if((z|0)==(f|0)){_=98;break c}t=t+1|0;b=z}}}while(0);if((_|0)==98){c[h>>2]=c[h>>2]|4;$=f}if((p|0)==0){i=k;return $|0}nu(p);i=k;return $|0}function In(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Jn(a,0,j,k,f,g,h);i=b;return}function Jn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Ao(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Zl(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Zl(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if(($n(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Kc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=wt(F,c[o>>2]|0,h,t)|0;Oq(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}if((Kc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}function Kn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Ln(a,0,j,k,f,g,h);i=b;return}function Ln(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Ao(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){K=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;K=C;L=C}Zl(n,K<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}Zl(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if(($n(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){Kc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=vt(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Oq(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}if((Kc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}function Mn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Nn(a,0,j,k,f,g,h);i=b;return}function Nn(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+256|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;t=c[h+4>>2]&74;if((t|0)==0){u=0}else if((t|0)==64){u=8}else if((t|0)==8){u=16}else{u=10}t=l|0;Ao(n,h,t,m);h=o;Nu(h|0,0,12)|0;Zl(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=0}else{if((c[v+12>>2]|0)!=(c[v+16>>2]|0)){B=v;break}if(!((Kc[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){B=v;break}c[y>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;break}else{G=m;H=D;break a}}if((Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=21;break}else{if(C){F=D;break}else{G=m;H=D;break a}}}}while(0);if((E|0)==21){E=0;if(C){G=m;H=0;break}else{F=0}}D=a[h]|0;I=(D&1)==0;if(I){J=(D&255)>>>1}else{J=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(J|0)){if(I){K=(D&255)>>>1;L=(D&255)>>>1}else{D=c[z>>2]|0;K=D;L=D}Zl(o,K<<1,0);if((a[h]&1)==0){M=10}else{M=(c[g>>2]&-2)-1|0}Zl(o,M,0);if((a[h]&1)==0){N=w}else{N=c[x>>2]|0}c[p>>2]=N+L;O=N}else{O=m}D=B+12|0;I=c[D>>2]|0;P=B+16|0;if((I|0)==(c[P>>2]|0)){Q=(Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{Q=a[I]|0}if(($n(Q,u,O,p,s,A,n,l,r,t)|0)!=0){G=O;H=F;break}I=c[D>>2]|0;if((I|0)==(c[P>>2]|0)){Kc[c[(c[B>>2]|0)+40>>2]&255](B)|0;m=O;v=B;continue}else{c[D>>2]=I+1;m=O;v=B;continue}}v=a[n]|0;if((v&1)==0){R=(v&255)>>>1}else{R=c[n+4>>2]|0}do{if((R|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}O=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=O}}while(0);b[k>>1]=ut(G,c[p>>2]|0,j,u)|0;Oq(n,l,c[r>>2]|0,j);do{if((B|0)==0){S=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){S=B;break}if(!((Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){S=B;break}c[y>>2]=0;S=0}}while(0);y=(S|0)==0;do{if((H|0)==0){E=66}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){if(!y){break}T=d|0;c[T>>2]=S;Xl(o);Xl(n);i=e;return}if((Kc[c[(c[H>>2]|0)+36>>2]&255](H)|0)==-1){c[f>>2]=0;E=66;break}if(!(y^(H|0)==0)){break}T=d|0;c[T>>2]=S;Xl(o);Xl(n);i=e;return}}while(0);do{if((E|0)==66){if(y){break}T=d|0;c[T>>2]=S;Xl(o);Xl(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;T=d|0;c[T>>2]=S;Xl(o);Xl(n);i=e;return}function On(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Pn(a,0,j,k,f,g,h);i=b;return}function Pn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;Ao(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Zl(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Zl(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if(($n(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Kc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=tt(F,c[o>>2]|0,h,t)|0;Oq(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}if((Kc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}function Qn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Rn(a,0,j,k,f,g,h);i=b;return}function Rn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==64){t=8}else if((s|0)==0){t=0}else if((s|0)==8){t=16}else{t=10}s=k|0;Ao(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Zl(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Zl(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if(($n(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Kc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=st(F,c[o>>2]|0,h,t)|0;Oq(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}if((Kc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;Xl(n);Xl(m);i=d;return}function Sn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Tn(a,0,j,k,f,g,h);i=b;return}function Tn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Ao(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){K=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;K=C;L=C}Zl(n,K<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}Zl(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if(($n(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){Kc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=rt(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Oq(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}if((Kc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;Xl(n);Xl(m);i=d;return}function Un(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Vn(a,0,j,k,f,g,h);i=b;return}function Vn(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;Bo(n,h,v,l,m);h=o;Nu(h|0,0,12)|0;Zl(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Kc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[h]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Zl(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Zl(o,O,0);if((a[h]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((Co(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Kc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);g[k>>2]=+qt(I,c[p>>2]|0,j);Oq(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}if((Kc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}function Wn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Xn(a,0,j,k,f,g,h);i=b;return}function Xn(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;Bo(n,g,v,l,m);g=o;Nu(g|0,0,12)|0;Zl(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Kc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Zl(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Zl(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((Co(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Kc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+pt(I,c[p>>2]|0,j);Oq(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}if((Kc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}function Yn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Zn(a,0,j,k,f,g,h);i=b;return}function Zn(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;Bo(n,g,v,l,m);g=o;Nu(g|0,0,12)|0;Zl(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Kc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Zl(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Zl(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((Co(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Kc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+ot(I,c[p>>2]|0,j);Oq(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}if((Kc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;Xl(o);Xl(n);i=d;return}function _n(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+272|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+48|0;n=d+64|0;o=d+72|0;p=d+88|0;q=d+96|0;r=d+256|0;s=d+264|0;Nu(m|0,0,12)|0;pm(n,g);g=n|0;n=c[g>>2]|0;if(!((c[8584]|0)==-1)){c[k>>2]=34336;c[k+4>>2]=52;c[k+8>>2]=0;Sl(34336,k,138)}k=(c[8585]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Sc[c[(c[u>>2]|0)+32>>2]&63](u,30584,30610,v)|0;yl(c[g>>2]|0)|0;u=o;Nu(u|0,0,12)|0;Zl(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){G=F;break}if(!((Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){G=F;break}c[A>>2]=0;G=0}}while(0);H=(G|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=25}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){break}else{K=E;break a}}if((Kc[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1){c[B>>2]=0;J=25;break}else{if(H){break}else{K=E;break a}}}}while(0);if((J|0)==25){J=0;if(H){K=E;break}}I=a[u]|0;L=(I&1)==0;if(L){M=(I&255)>>>1}else{M=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(M|0)){if(L){N=(I&255)>>>1;O=(I&255)>>>1}else{I=c[D>>2]|0;N=I;O=I}Zl(o,N<<1,0);if((a[u]&1)==0){P=10}else{P=(c[C>>2]&-2)-1|0}Zl(o,P,0);if((a[u]&1)==0){Q=y}else{Q=c[z>>2]|0}c[p>>2]=Q+O;R=Q}else{R=E}I=G+12|0;L=c[I>>2]|0;S=G+16|0;if((L|0)==(c[S>>2]|0)){T=(Kc[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{T=a[L]|0}if(($n(T,16,R,p,s,0,m,w,r,v)|0)!=0){K=R;break}L=c[I>>2]|0;if((L|0)==(c[S>>2]|0)){Kc[c[(c[G>>2]|0)+40>>2]&255](G)|0;E=R;F=G;continue}else{c[I>>2]=L+1;E=R;F=G;continue}}a[K+3|0]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);F=ao(K,c[8226]|0,9464,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){U=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){U=F;break}if(!((Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){U=F;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;F=c[B>>2]|0;do{if((F|0)==0){J=73}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(m);i=d;return}if((Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[B>>2]=0;J=73;break}if(!(A^(F|0)==0)){break}V=b|0;c[V>>2]=U;Xl(o);Xl(m);i=d;return}}while(0);do{if((J|0)==73){if(A){break}V=b|0;c[V>>2]=U;Xl(o);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;V=b|0;c[V>>2]=U;Xl(o);Xl(m);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function $n(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(a[l+24|0]|0)==b<<24>>24;if(!o){if(!((a[l+25|0]|0)==b<<24>>24)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&b<<24>>24==h<<24>>24){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+26|0;h=l;while(1){if((h|0)==(j|0)){r=j;break}if((a[h]|0)==b<<24>>24){r=h;break}else{h=h+1|0}}h=r-l|0;if((h|0)>23){p=-1;return p|0}do{if((d|0)==8|(d|0)==10){if((h|0)<(d|0)){break}else{p=-1}return p|0}else if((d|0)==16){if((h|0)<22){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;l=a[30584+h|0]|0;c[f>>2]=m+1;a[m]=l;p=0;return p|0}}while(0);e=a[30584+h|0]|0;c[f>>2]=m+1;a[m]=e;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function ao(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=bc(b|0)|0;b=db(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}bc(h|0)|0;i=f;return b|0}function bo(a){a=a|0;wl(a|0);tu(a);return}function co(a){a=a|0;wl(a|0);return}function eo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];Ec[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}pm(r,g);q=r|0;r=c[q>>2]|0;if(!((c[8582]|0)==-1)){c[m>>2]=34328;c[m+4>>2]=52;c[m+8>>2]=0;Sl(34328,m,138)}m=(c[8583]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;yl(c[q>>2]|0)|0;pm(s,g);n=s|0;p=c[n>>2]|0;if(!((c[8486]|0)==-1)){c[l>>2]=33944;c[l+4>>2]=52;c[l+8>>2]=0;Sl(33944,l,138)}d=(c[8487]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;yl(c[n>>2]|0)|0;z=t|0;A=x;Gc[c[(c[A>>2]|0)+24>>2]&127](z,y);Gc[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(fo(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];gm(t+12|0);gm(t|0);i=k;return}}while(0);o=tc(4)|0;Tt(o);Hb(o|0,29040,174)}}while(0);k=tc(4)|0;Tt(k);Hb(k|0,29040,174)}function fo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=mu(l)|0;if((n|0)!=0){o=n;p=n;break}yu();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=1}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){z=Kc[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{z=c[l>>2]|0}if((z|0)==-1){c[t>>2]=0;y=1;break}else{y=(c[t>>2]|0)==0;break}}}while(0);q=c[b>>2]|0;do{if((q|0)==0){A=1;B=0}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){C=Kc[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{C=c[l>>2]|0}if(!((C|0)==-1)){A=0;B=q;break}c[b>>2]=0;A=1;B=0}}while(0);D=c[t>>2]|0;if(!((y^A)&(r|0)!=0)){break}q=c[D+12>>2]|0;if((q|0)==(c[D+16>>2]|0)){E=Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{E=c[q>>2]|0}if(j){F=E}else{F=Hc[c[(c[d>>2]|0)+28>>2]&127](g,E)|0}q=s+1|0;if(m){s=q;w=w;r=r;continue}b:do{if(j){l=r;x=w;n=o;v=0;u=e;while(1){do{if((a[n]|0)==1){G=a[u]|0;H=(G&1)==0;if(H){I=u+4|0}else{I=c[u+8>>2]|0}if((F|0)!=(c[I+(s<<2)>>2]|0)){a[n]=0;J=v;K=x;L=l-1|0;break}if(H){M=(G&255)>>>1}else{M=c[u+4>>2]|0}if((M|0)!=(q|0)){J=1;K=x;L=l;break}a[n]=2;J=1;K=x+1|0;L=l-1|0}else{J=v;K=x;L=l}}while(0);G=u+12|0;if((G|0)==(f|0)){N=L;O=K;P=J;break b}l=L;x=K;n=n+1|0;v=J;u=G}}else{u=r;v=w;n=o;x=0;l=e;while(1){do{if((a[n]|0)==1){G=l;if((a[G]&1)==0){Q=l+4|0}else{Q=c[l+8>>2]|0}if((F|0)!=(Hc[c[(c[d>>2]|0)+28>>2]&127](g,c[Q+(s<<2)>>2]|0)|0)){a[n]=0;R=x;S=v;T=u-1|0;break}H=a[G]|0;if((H&1)==0){U=(H&255)>>>1}else{U=c[l+4>>2]|0}if((U|0)!=(q|0)){R=1;S=v;T=u;break}a[n]=2;R=1;S=v+1|0;T=u-1|0}else{R=x;S=v;T=u}}while(0);H=l+12|0;if((H|0)==(f|0)){N=T;O=S;P=R;break b}u=T;v=S;n=n+1|0;x=R;l=H}}}while(0);if(!P){s=q;w=O;r=N;continue}l=c[t>>2]|0;x=l+12|0;n=c[x>>2]|0;if((n|0)==(c[l+16>>2]|0)){Kc[c[(c[l>>2]|0)+40>>2]&255](l)|0}else{c[x>>2]=n+4}if((N+O|0)>>>0<2>>>0){s=q;w=O;r=N;continue}else{V=O;W=o;X=e}while(1){do{if((a[W]|0)==2){n=a[X]|0;if((n&1)==0){Y=(n&255)>>>1}else{Y=c[X+4>>2]|0}if((Y|0)==(q|0)){Z=V;break}a[W]=0;Z=V-1|0}else{Z=V}}while(0);n=X+12|0;if((n|0)==(f|0)){s=q;w=Z;r=N;continue a}else{V=Z;W=W+1|0;X=n}}}do{if((D|0)==0){_=1}else{X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){$=Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{$=c[X>>2]|0}if(($|0)==-1){c[t>>2]=0;_=1;break}else{_=(c[t>>2]|0)==0;break}}}while(0);do{if((B|0)==0){aa=93}else{t=c[B+12>>2]|0;if((t|0)==(c[B+16>>2]|0)){ba=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{ba=c[t>>2]|0}if((ba|0)==-1){c[b>>2]=0;aa=93;break}else{if(_){break}else{aa=95;break}}}}while(0);if((aa|0)==93){if(_){aa=95}}if((aa|0)==95){c[h>>2]=c[h>>2]|2}c:do{if(m){aa=100}else{_=o;b=e;while(1){if((a[_]|0)==2){ca=b;break c}ba=b+12|0;if((ba|0)==(f|0)){aa=100;break c}_=_+1|0;b=ba}}}while(0);if((aa|0)==100){c[h>>2]=c[h>>2]|4;ca=f}if((p|0)==0){i=k;return ca|0}nu(p);i=k;return ca|0}function go(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];ho(a,0,j,k,f,g,h);i=b;return}function ho(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){t=8}else if((s|0)==8){t=16}else if((s|0)==0){t=0}else{t=10}s=k|0;Do(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Zl(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Zl(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((zo(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Kc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=wt(I,c[o>>2]|0,h,t)|0;Oq(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Kc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}function io(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];jo(a,0,j,k,f,g,h);i=b;return}



function jo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;Do(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;K=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;K=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}Zl(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Zl(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((zo(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;K=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){Kc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=vt(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Oq(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){E=67}else{x=c[K+12>>2]|0;if((x|0)==(c[K+16>>2]|0)){X=Kc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;Xl(n);Xl(m);i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;Xl(n);Xl(m);i=d;return}function ko(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];lo(a,0,j,k,f,g,h);i=b;return}function lo(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+328|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+152|0;r=e+312|0;s=e+320|0;t=c[h+4>>2]&74;if((t|0)==0){u=0}else if((t|0)==8){u=16}else if((t|0)==64){u=8}else{u=10}t=l|0;Do(n,h,t,m);h=o;Nu(h|0,0,12)|0;Zl(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=1;C=0}else{D=c[v+12>>2]|0;if((D|0)==(c[v+16>>2]|0)){E=Kc[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{E=c[D>>2]|0}if(!((E|0)==-1)){B=0;C=v;break}c[y>>2]=0;B=1;C=0}}while(0);D=c[f>>2]|0;do{if((D|0)==0){F=22}else{G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){H=Kc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{if(B){I=D;break}else{J=m;K=D;break a}}}}while(0);if((F|0)==22){F=0;if(B){J=m;K=0;break}else{I=0}}D=a[h]|0;G=(D&1)==0;if(G){L=(D&255)>>>1}else{L=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(G){M=(D&255)>>>1;N=(D&255)>>>1}else{D=c[z>>2]|0;M=D;N=D}Zl(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}Zl(o,O,0);if((a[h]&1)==0){P=w}else{P=c[x>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}D=C+12|0;G=c[D>>2]|0;R=C+16|0;if((G|0)==(c[R>>2]|0)){S=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{S=c[G>>2]|0}if((zo(S,u,Q,p,s,A,n,l,r,t)|0)!=0){J=Q;K=I;break}G=c[D>>2]|0;if((G|0)==(c[R>>2]|0)){Kc[c[(c[C>>2]|0)+40>>2]&255](C)|0;m=Q;v=C;continue}else{c[D>>2]=G+4;m=Q;v=C;continue}}v=a[n]|0;if((v&1)==0){T=(v&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=Q}}while(0);b[k>>1]=ut(J,c[p>>2]|0,j,u)|0;Oq(n,l,c[r>>2]|0,j);do{if((C|0)==0){U=1;V=0}else{r=c[C+12>>2]|0;if((r|0)==(c[C+16>>2]|0)){W=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{W=c[r>>2]|0}if(!((W|0)==-1)){U=0;V=C;break}c[y>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){F=67}else{y=c[K+12>>2]|0;if((y|0)==(c[K+16>>2]|0)){X=Kc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[y>>2]|0}if((X|0)==-1){c[f>>2]=0;F=67;break}if(!U){break}Y=d|0;c[Y>>2]=V;Xl(o);Xl(n);i=e;return}}while(0);do{if((F|0)==67){if(U){break}Y=d|0;c[Y>>2]=V;Xl(o);Xl(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=d|0;c[Y>>2]=V;Xl(o);Xl(n);i=e;return}function mo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];no(a,0,j,k,f,g,h);i=b;return}function no(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;Do(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Zl(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Zl(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((zo(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Kc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=tt(I,c[o>>2]|0,h,t)|0;Oq(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Kc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}function oo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];po(a,0,j,k,f,g,h);i=b;return}function po(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){t=8}else if((s|0)==8){t=16}else if((s|0)==0){t=0}else{t=10}s=k|0;Do(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Zl(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Zl(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((zo(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Kc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=st(I,c[o>>2]|0,h,t)|0;Oq(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Kc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Xl(n);Xl(m);i=d;return}function qo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];ro(a,0,j,k,f,g,h);i=b;return}function ro(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Do(m,g,s,l);g=n;Nu(g|0,0,12)|0;Zl(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Kc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;K=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;K=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}Zl(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Zl(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((zo(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;K=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){Kc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=rt(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Oq(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){E=67}else{x=c[K+12>>2]|0;if((x|0)==(c[K+16>>2]|0)){X=Kc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;Xl(n);Xl(m);i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;Xl(n);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;Xl(n);Xl(m);i=d;return}function so(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];to(a,0,j,k,f,g,h);i=b;return}function to(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;Eo(n,h,v,l,m);h=o;Nu(h|0,0,12)|0;Zl(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Kc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[h]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Zl(o,O<<1,0);if((a[h]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Zl(o,Q,0);if((a[h]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Kc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((Fo(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Kc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);g[k>>2]=+qt(L,c[p>>2]|0,j);Oq(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Kc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Kc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}function uo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];vo(a,0,j,k,f,g,h);i=b;return}function vo(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;Eo(n,g,v,l,m);g=o;Nu(g|0,0,12)|0;Zl(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Kc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Zl(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Zl(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Kc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((Fo(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Kc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+pt(L,c[p>>2]|0,j);Oq(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Kc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Kc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}function wo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];xo(a,0,j,k,f,g,h);i=b;return}function xo(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;Eo(n,g,v,l,m);g=o;Nu(g|0,0,12)|0;Zl(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Kc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Zl(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Zl(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Kc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((Fo(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Kc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+ot(L,c[p>>2]|0,j);Oq(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Kc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Kc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;Xl(o);Xl(n);i=d;return}function yo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+344|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+120|0;n=d+136|0;o=d+144|0;p=d+160|0;q=d+168|0;r=d+328|0;s=d+336|0;Nu(m|0,0,12)|0;pm(n,g);g=n|0;n=c[g>>2]|0;if(!((c[8582]|0)==-1)){c[k>>2]=34328;c[k+4>>2]=52;c[k+8>>2]=0;Sl(34328,k,138)}k=(c[8583]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Sc[c[(c[u>>2]|0)+48>>2]&63](u,30584,30610,v)|0;yl(c[g>>2]|0)|0;u=o;Nu(u|0,0,12)|0;Zl(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=1;H=0}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if(!((J|0)==-1)){G=0;H=F;break}c[A>>2]=0;G=1;H=0}}while(0);I=c[B>>2]|0;do{if((I|0)==0){K=26}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=Kc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if((M|0)==-1){c[B>>2]=0;K=26;break}else{if(G){break}else{N=E;break a}}}}while(0);if((K|0)==26){K=0;if(G){N=E;break}}I=a[u]|0;L=(I&1)==0;if(L){O=(I&255)>>>1}else{O=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(O|0)){if(L){P=(I&255)>>>1;Q=(I&255)>>>1}else{I=c[D>>2]|0;P=I;Q=I}Zl(o,P<<1,0);if((a[u]&1)==0){R=10}else{R=(c[C>>2]&-2)-1|0}Zl(o,R,0);if((a[u]&1)==0){S=y}else{S=c[z>>2]|0}c[p>>2]=S+Q;T=S}else{T=E}I=H+12|0;L=c[I>>2]|0;U=H+16|0;if((L|0)==(c[U>>2]|0)){V=Kc[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{V=c[L>>2]|0}if((zo(V,16,T,p,s,0,m,w,r,v)|0)!=0){N=T;break}L=c[I>>2]|0;if((L|0)==(c[U>>2]|0)){Kc[c[(c[H>>2]|0)+40>>2]&255](H)|0;E=T;F=H;continue}else{c[I>>2]=L+4;E=T;F=H;continue}}a[N+3|0]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);F=ao(N,c[8226]|0,9464,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){W=1;X=0}else{E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0)){Y=Kc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{Y=c[E>>2]|0}if(!((Y|0)==-1)){W=0;X=F;break}c[A>>2]=0;W=1;X=0}}while(0);A=c[B>>2]|0;do{if((A|0)==0){K=74}else{F=c[A+12>>2]|0;if((F|0)==(c[A+16>>2]|0)){Z=Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{Z=c[F>>2]|0}if((Z|0)==-1){c[B>>2]=0;K=74;break}if(!W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(m);i=d;return}}while(0);do{if((K|0)==74){if(W){break}_=b|0;c[_>>2]=X;Xl(o);Xl(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;_=b|0;c[_>>2]=X;Xl(o);Xl(m);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function zo(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(c[l+96>>2]|0)==(b|0);if(!o){if((c[l+100>>2]|0)!=(b|0)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&(b|0)==(h|0)){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+104|0;h=l;while(1){if((h|0)==(j|0)){r=j;break}if((c[h>>2]|0)==(b|0)){r=h;break}else{h=h+4|0}}h=r-l|0;l=h>>2;if((h|0)>92){p=-1;return p|0}do{if((d|0)==8|(d|0)==10){if((l|0)<(d|0)){break}else{p=-1}return p|0}else if((d|0)==16){if((h|0)<88){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;r=a[30584+l|0]|0;c[f>>2]=m+1;a[m]=r;p=0;return p|0}}while(0);e=a[30584+l|0]|0;c[f>>2]=m+1;a[m]=e;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function Ao(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;pm(k,d);d=k|0;k=c[d>>2]|0;if(!((c[8584]|0)==-1)){c[j>>2]=34336;c[j+4>>2]=52;c[j+8>>2]=0;Sl(34336,j,138)}j=(c[8585]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Sc[c[(c[m>>2]|0)+32>>2]&63](m,30584,30610,e)|0;m=c[d>>2]|0;if(!((c[8488]|0)==-1)){c[h>>2]=33952;c[h+4>>2]=52;c[h+8>>2]=0;Sl(33952,h,138)}n=(c[8489]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;a[f]=Kc[c[(c[p>>2]|0)+16>>2]&255](q)|0;Gc[c[(c[p>>2]|0)+20>>2]&127](b,q);yl(c[d>>2]|0)|0;i=g;return}}while(0);n=tc(4)|0;Tt(n);Hb(n|0,29040,174)}}while(0);g=tc(4)|0;Tt(g);Hb(g|0,29040,174)}function Bo(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;pm(l,d);d=l|0;l=c[d>>2]|0;if(!((c[8584]|0)==-1)){c[k>>2]=34336;c[k+4>>2]=52;c[k+8>>2]=0;Sl(34336,k,138)}k=(c[8585]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Sc[c[(c[n>>2]|0)+32>>2]&63](n,30584,30616,e)|0;n=c[d>>2]|0;if(!((c[8488]|0)==-1)){c[j>>2]=33952;c[j+4>>2]=52;c[j+8>>2]=0;Sl(33952,j,138)}o=(c[8489]|0)-1|0;p=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-p>>2>>>0>o>>>0){q=c[p+(o<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;a[f]=Kc[c[(c[s>>2]|0)+12>>2]&255](r)|0;a[g]=Kc[c[(c[s>>2]|0)+16>>2]&255](r)|0;Gc[c[(c[q>>2]|0)+20>>2]&127](b,r);yl(c[d>>2]|0)|0;i=h;return}}while(0);o=tc(4)|0;Tt(o);Hb(o|0,29040,174)}}while(0);h=tc(4)|0;Tt(h);Hb(h|0,29040,174)}function Co(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if(b<<24>>24==h<<24>>24){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if(b<<24>>24==i<<24>>24){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+32|0;i=n;while(1){if((i|0)==(q|0)){r=q;break}if((a[i]|0)==b<<24>>24){r=i;break}else{i=i+1|0}}i=r-n|0;if((i|0)>31){o=-1;return o|0}n=a[30584+i|0]|0;if((i|0)==22|(i|0)==23){a[e]=80;r=c[g>>2]|0;c[g>>2]=r+1;a[r]=n;o=0;return o|0}else if((i|0)==25|(i|0)==24){r=c[g>>2]|0;do{if((r|0)!=(f|0)){if((a[r-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=r+1;a[r]=n;o=0;return o|0}else{r=a[e]|0;do{if((n&95|0)==(r<<24>>24|0)){a[e]=r|-128;if((a[d]|0)==0){break}a[d]=0;f=a[j]|0;if((f&1)==0){s=(f&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}f=c[l>>2]|0;if((f-k|0)>=160){break}b=c[m>>2]|0;c[l>>2]=f+4;c[f>>2]=b}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=n;if((i|0)>21){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}return 0}function Do(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;pm(j,b);b=j|0;j=c[b>>2]|0;if(!((c[8582]|0)==-1)){c[h>>2]=34328;c[h+4>>2]=52;c[h+8>>2]=0;Sl(34328,h,138)}h=(c[8583]|0)-1|0;k=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-k>>2>>>0>h>>>0){l=c[k+(h<<2)>>2]|0;if((l|0)==0){break}Sc[c[(c[l>>2]|0)+48>>2]&63](l,30584,30610,d)|0;l=c[b>>2]|0;if(!((c[8486]|0)==-1)){c[g>>2]=33944;c[g+4>>2]=52;c[g+8>>2]=0;Sl(33944,g,138)}m=(c[8487]|0)-1|0;n=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-n>>2>>>0>m>>>0){o=c[n+(m<<2)>>2]|0;if((o|0)==0){break}p=o;c[e>>2]=Kc[c[(c[o>>2]|0)+16>>2]&255](p)|0;Gc[c[(c[o>>2]|0)+20>>2]&127](a,p);yl(c[b>>2]|0)|0;i=f;return}}while(0);m=tc(4)|0;Tt(m);Hb(m|0,29040,174)}}while(0);f=tc(4)|0;Tt(f);Hb(f|0,29040,174)}function Eo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;pm(k,b);b=k|0;k=c[b>>2]|0;if(!((c[8582]|0)==-1)){c[j>>2]=34328;c[j+4>>2]=52;c[j+8>>2]=0;Sl(34328,j,138)}j=(c[8583]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Sc[c[(c[m>>2]|0)+48>>2]&63](m,30584,30616,d)|0;m=c[b>>2]|0;if(!((c[8486]|0)==-1)){c[h>>2]=33944;c[h+4>>2]=52;c[h+8>>2]=0;Sl(33944,h,138)}n=(c[8487]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;r=p;c[e>>2]=Kc[c[(c[r>>2]|0)+12>>2]&255](q)|0;c[f>>2]=Kc[c[(c[r>>2]|0)+16>>2]&255](q)|0;Gc[c[(c[p>>2]|0)+20>>2]&127](a,q);yl(c[b>>2]|0)|0;i=g;return}}while(0);n=tc(4)|0;Tt(n);Hb(n|0,29040,174)}}while(0);g=tc(4)|0;Tt(g);Hb(g|0,29040,174)}function Fo(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if((b|0)==(h|0)){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if((b|0)==(i|0)){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+128|0;i=n;while(1){if((i|0)==(q|0)){r=q;break}if((c[i>>2]|0)==(b|0)){r=i;break}else{i=i+4|0}}i=r-n|0;n=i>>2;if((i|0)>124){o=-1;return o|0}r=a[30584+n|0]|0;do{if((n|0)==22|(n|0)==23){a[e]=80}else if((n|0)==25|(n|0)==24){b=c[g>>2]|0;do{if((b|0)!=(f|0)){if((a[b-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=b+1;a[b]=r;o=0;return o|0}else{q=a[e]|0;if((r&95|0)!=(q<<24>>24|0)){break}a[e]=q|-128;if((a[d]|0)==0){break}a[d]=0;q=a[j]|0;if((q&1)==0){s=(q&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}q=c[l>>2]|0;if((q-k|0)>=160){break}p=c[m>>2]|0;c[l>>2]=q+4;c[q>>2]=p}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=r;if((i|0)>84){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}function Go(a){a=a|0;wl(a|0);tu(a);return}function Ho(a){a=a|0;wl(a|0);return}function Io(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Rc[o&127](b,d,l,f,g,h&1);i=j;return}pm(m,f);f=m|0;m=c[f>>2]|0;if(!((c[8488]|0)==-1)){c[k>>2]=33952;c[k+4>>2]=52;c[k+8>>2]=0;Sl(33952,k,138)}k=(c[8489]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;yl(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){Gc[c[o+24>>2]&127](n,d)}else{Gc[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+1|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+1|0;r=l}l=e|0;s=n+4|0;t=p;u=o;while(1){if((u&1)==0){v=(u&255)>>>1;w=q}else{v=c[s>>2]|0;w=c[r>>2]|0}if((t|0)==(w+v|0)){break}o=a[t]|0;x=c[l>>2]|0;do{if((x|0)!=0){y=x+24|0;z=c[y>>2]|0;if((z|0)!=(c[x+28>>2]|0)){c[y>>2]=z+1;a[z]=o;break}if(!((Hc[c[(c[x>>2]|0)+52>>2]&127](x,o&255)|0)==-1)){break}c[l>>2]=0}}while(0);t=t+1|0;u=a[d]|0}c[b>>2]=c[l>>2];Xl(n);i=j;return}}while(0);j=tc(4)|0;Tt(j);Hb(j|0,29040,174)}function Jo(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[23296]|0;a[q+1|0]=a[23297]|0;a[q+2|0]=a[23298]|0;a[q+3|0]=a[23299]|0;a[q+4|0]=a[23300]|0;a[q+5|0]=a[23301]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);v=Ko(u,12,c[8226]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;pm(o,f);Lo(u,w,q,x,m,n,o);yl(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Mo(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Ko(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=bc(d|0)|0;d=dc(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}bc(j|0)|0;i=g;return d|0}function Lo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[8584]|0)==-1)){c[m>>2]=34336;c[m+4>>2]=52;c[m+8>>2]=0;Sl(34336,m,138)}m=(c[8585]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}q=j;r=c[o>>2]|0;if(!((c[8488]|0)==-1)){c[l>>2]=33952;c[l+4>>2]=52;c[l+8>>2]=0;Sl(33952,l,138)}l=(c[8489]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}s=r;Gc[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Sc[c[(c[j>>2]|0)+32>>2]&63](q,b,e,f)|0;c[h>>2]=f+(e-b)}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Hc[c[(c[j>>2]|0)+28>>2]&127](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+1;a[l]=o;v=b+1|0}else{v=b}do{if((e-v|0)>1){if((a[v]|0)!=48){w=v;break}o=v+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){w=v;break}l=j;m=Hc[c[(c[l>>2]|0)+28>>2]&127](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=Hc[c[(c[l>>2]|0)+28>>2]&127](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+1;a[o]=m;w=v+2|0}else{w=v}}while(0);do{if((w|0)!=(e|0)){m=e-1|0;if(m>>>0>w>>>0){x=w;y=m}else{break}do{m=a[x]|0;a[x]=a[y]|0;a[y]=m;x=x+1|0;y=y-1|0;}while(x>>>0<y>>>0)}}while(0);m=Kc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(w>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;z=n+8|0;A=0;B=0;C=w;while(1){D=(a[t]&1)==0;do{if((a[(D?o:c[z>>2]|0)+B|0]|0)==0){E=B;F=A}else{if((A|0)!=(a[(D?o:c[z>>2]|0)+B|0]|0)){E=B;F=A;break}G=c[h>>2]|0;c[h>>2]=G+1;a[G]=m;G=a[t]|0;if((G&1)==0){H=(G&255)>>>1}else{H=c[p>>2]|0}E=(B>>>0<(H-1|0)>>>0)+B|0;F=0}}while(0);D=Hc[c[(c[l>>2]|0)+28>>2]&127](q,a[C]|0)|0;G=c[h>>2]|0;c[h>>2]=G+1;a[G]=D;D=C+1|0;if(D>>>0<e>>>0){A=F+1|0;B=E;C=D}else{break}}}C=f+(w-b)|0;B=c[h>>2]|0;if((C|0)==(B|0)){break}A=B-1|0;if(A>>>0>C>>>0){I=C;J=A}else{break}do{A=a[I]|0;a[I]=a[J]|0;a[J]=A;I=I+1|0;J=J-1|0;}while(I>>>0<J>>>0)}}while(0);if((d|0)==(e|0)){K=c[h>>2]|0;c[g>>2]=K;Xl(n);i=k;return}else{K=f+(d-b)|0;c[g>>2]=K;Xl(n);i=k;return}}function Mo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((Ic[c[(c[d>>2]|0)+48>>2]&127](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){Wl(l,q,j);if((a[l]&1)==0){r=l+1|0}else{r=c[l+8>>2]|0}if((Ic[c[(c[d>>2]|0)+48>>2]&127](d,r,q)|0)==(q|0)){Xl(l);break}c[m>>2]=0;c[b>>2]=0;Xl(l);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((Ic[c[(c[d>>2]|0)+48>>2]&127](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function No(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);v=Ko(u,22,c[8226]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;pm(p,f);Lo(u,w,r,x,n,o,p);yl(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Mo(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Oo(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[23296]|0;a[q+1|0]=a[23297]|0;a[q+2|0]=a[23298]|0;a[q+3|0]=a[23299]|0;a[q+4|0]=a[23300]|0;a[q+5|0]=a[23301]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=k|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);v=Ko(u,12,c[8226]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;pm(o,f);Lo(u,w,q,x,m,n,o);yl(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Mo(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Po(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);v=Ko(u,23,c[8226]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;pm(p,f);Lo(u,w,r,x,n,o,p);yl(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Mo(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Qo(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=c[8226]|0;if(y){w=Ko(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Ko(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[34896]|0)==0;if(y){do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=Ro(m,c[8226]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);w=Ro(m,c[8226]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yu();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=mu(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}yu();H=0;I=0;J=c[m>>2]|0}}while(0);pm(q,f);So(J,F,A,H,o,p,q);yl(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Mo(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){nu(I)}if((D|0)==0){i=d;return}nu(D);i=d;return}function Ro(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=bc(b|0)|0;b=uc(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}bc(h|0)|0;i=f;return b|0}function So(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[8584]|0)==-1)){c[m>>2]=34336;c[m+4>>2]=52;c[m+8>>2]=0;Sl(34336,m,138)}m=(c[8585]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}q=j;r=c[o>>2]|0;if(!((c[8488]|0)==-1)){c[l>>2]=33952;c[l+4>>2]=52;c[l+8>>2]=0;Sl(33952,l,138)}l=(c[8489]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}s=r;Gc[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Hc[c[(c[j>>2]|0)+28>>2]&127](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=u;w=34;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=u;w=34;break}o=j;m=Hc[c[(c[o>>2]|0)+28>>2]&127](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=u+2|0;p=Hc[c[(c[o>>2]|0)+28>>2]&127](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=p;p=m;while(1){if(!(p>>>0<e>>>0)){x=m;y=p;break a}t=a[p]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((Ua(t<<24>>24|0,c[8226]|0)|0)==0){x=m;y=p;break}else{p=p+1|0}}}else{v=u;w=34}}while(0);b:do{if((w|0)==34){while(1){w=0;if(!(v>>>0<e>>>0)){x=u;y=v;break b}p=a[v]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((kb(p<<24>>24|0,c[8226]|0)|0)==0){x=u;y=v;break}else{v=v+1|0;w=34}}}}while(0);w=n;v=a[w]|0;if((v&1)==0){z=(v&255)>>>1}else{z=c[n+4>>2]|0}do{if((z|0)==0){Sc[c[(c[j>>2]|0)+32>>2]&63](q,x,y,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(y-x)}else{do{if((x|0)!=(y|0)){v=y-1|0;if(v>>>0>x>>>0){A=x;B=v}else{break}do{v=a[A]|0;a[A]=a[B]|0;a[B]=v;A=A+1|0;B=B-1|0;}while(A>>>0<B>>>0)}}while(0);p=Kc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){v=n+1|0;u=n+4|0;t=n+8|0;m=j;o=0;C=0;D=x;while(1){E=(a[w]&1)==0;do{if((a[(E?v:c[t>>2]|0)+C|0]|0)>0){if((o|0)!=(a[(E?v:c[t>>2]|0)+C|0]|0)){F=C;G=o;break}H=c[h>>2]|0;c[h>>2]=H+1;a[H]=p;H=a[w]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[u>>2]|0}F=(C>>>0<(I-1|0)>>>0)+C|0;G=0}else{F=C;G=o}}while(0);E=Hc[c[(c[m>>2]|0)+28>>2]&127](q,a[D]|0)|0;H=c[h>>2]|0;c[h>>2]=H+1;a[H]=E;E=D+1|0;if(E>>>0<y>>>0){o=G+1|0;C=F;D=E}else{break}}}D=f+(x-b)|0;C=c[h>>2]|0;if((D|0)==(C|0)){break}o=C-1|0;if(o>>>0>D>>>0){J=D;K=o}else{break}do{o=a[J]|0;a[J]=a[K]|0;a[K]=o;J=J+1|0;K=K-1|0;}while(J>>>0<K>>>0)}}while(0);c:do{if(y>>>0<e>>>0){K=j;J=y;while(1){x=a[J]|0;if(x<<24>>24==46){break}F=Hc[c[(c[K>>2]|0)+28>>2]&127](q,x)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x]=F;F=J+1|0;if(F>>>0<e>>>0){J=F}else{L=F;break c}}K=Kc[c[(c[r>>2]|0)+12>>2]&255](s)|0;F=c[h>>2]|0;c[h>>2]=F+1;a[F]=K;L=J+1|0}else{L=y}}while(0);Sc[c[(c[j>>2]|0)+32>>2]&63](q,L,e,c[h>>2]|0)|0;q=(c[h>>2]|0)+(l-L)|0;c[h>>2]=q;if((d|0)==(e|0)){M=q;c[g>>2]=M;Xl(n);i=k;return}M=f+(d-b)|0;c[g>>2]=M;Xl(n);i=k;return}function To(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=c[8226]|0;if(y){w=Ko(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Ko(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[34896]|0)==0;if(y){do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=Ro(m,c[8226]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);w=Ro(m,c[8226]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yu();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=mu(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}yu();H=0;I=0;J=c[m>>2]|0}}while(0);pm(q,f);So(J,F,A,H,o,p,q);yl(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Mo(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){nu(I)}if((D|0)==0){i=d;return}nu(D);i=d;return}function Uo(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[23304]|0;a[o+1|0]=a[23305]|0;a[o+2|0]=a[23306]|0;a[o+3|0]=a[23307]|0;a[o+4|0]=a[23308]|0;a[o+5|0]=a[23309]|0;p=k|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);q=Ko(p,20,c[8226]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=12;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=12;break}s=k+2|0}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}pm(m,f);t=m|0;m=c[t>>2]|0;if(!((c[8584]|0)==-1)){c[j>>2]=34336;c[j+4>>2]=52;c[j+8>>2]=0;Sl(34336,j,138)}j=(c[8585]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}yl(c[t>>2]|0)|0;u=l|0;Sc[c[(c[r>>2]|0)+32>>2]&63](r,p,o,u)|0;r=l+q|0;if((s|0)==(o|0)){v=r;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Mo(b,n,u,v,r,f,g);i=d;return}v=l+(s-k)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Mo(b,n,u,v,r,f,g);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function Vo(a){a=a|0;wl(a|0);tu(a);return}function Wo(a){a=a|0;wl(a|0);return}function Xo(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Rc[o&127](b,d,l,f,g,h&1);i=j;return}pm(m,f);f=m|0;m=c[f>>2]|0;if(!((c[8486]|0)==-1)){c[k>>2]=33944;c[k+4>>2]=52;c[k+8>>2]=0;Sl(33944,k,138)}k=(c[8487]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;yl(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){Gc[c[o+24>>2]&127](n,d)}else{Gc[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+4|0;r=l}l=e|0;s=p;t=o;while(1){if((t&1)==0){u=(t&255)>>>1;v=q}else{u=c[q>>2]|0;v=c[r>>2]|0}if((s|0)==(v+(u<<2)|0)){break}o=c[s>>2]|0;w=c[l>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){z=Hc[c[(c[w>>2]|0)+52>>2]&127](w,o)|0}else{c[x>>2]=y+4;c[y>>2]=o;z=o}if(!((z|0)==-1)){break}c[l>>2]=0}}while(0);s=s+4|0;t=a[d]|0}c[b>>2]=c[l>>2];gm(n);i=j;return}}while(0);j=tc(4)|0;Tt(j);Hb(j|0,29040,174)}function Yo(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[23296]|0;a[q+1|0]=a[23297]|0;a[q+2|0]=a[23298]|0;a[q+3|0]=a[23299]|0;a[q+4|0]=a[23300]|0;a[q+5|0]=a[23301]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);v=Ko(u,12,c[8226]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;pm(o,f);Zo(u,w,q,x,m,n,o);yl(c[o>>2]|0)|0;c[p>>2]=c[e>>2];_o(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Zo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[8582]|0)==-1)){c[m>>2]=34328;c[m+4>>2]=52;c[m+8>>2]=0;Sl(34328,m,138)}m=(c[8583]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}q=j;r=c[o>>2]|0;if(!((c[8486]|0)==-1)){c[l>>2]=33944;c[l+4>>2]=52;c[l+8>>2]=0;Sl(33944,l,138)}l=(c[8487]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}s=r;Gc[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Sc[c[(c[j>>2]|0)+48>>2]&63](q,b,e,f)|0;l=f+(e-b<<2)|0;c[h>>2]=l;v=l}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Hc[c[(c[j>>2]|0)+44>>2]&127](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=o;w=b+1|0}else{w=b}do{if((e-w|0)>1){if((a[w]|0)!=48){x=w;break}o=w+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){x=w;break}l=j;m=Hc[c[(c[l>>2]|0)+44>>2]&127](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=Hc[c[(c[l>>2]|0)+44>>2]&127](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=m;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(e|0)){m=e-1|0;if(m>>>0>x>>>0){y=x;z=m}else{break}do{m=a[y]|0;a[y]=a[z]|0;a[z]=m;y=y+1|0;z=z-1|0;}while(y>>>0<z>>>0)}}while(0);m=Kc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;A=n+8|0;B=0;C=0;D=x;while(1){E=(a[t]&1)==0;do{if((a[(E?o:c[A>>2]|0)+C|0]|0)==0){F=C;G=B}else{if((B|0)!=(a[(E?o:c[A>>2]|0)+C|0]|0)){F=C;G=B;break}H=c[h>>2]|0;c[h>>2]=H+4;c[H>>2]=m;H=a[t]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[p>>2]|0}F=(C>>>0<(I-1|0)>>>0)+C|0;G=0}}while(0);E=Hc[c[(c[l>>2]|0)+44>>2]&127](q,a[D]|0)|0;H=c[h>>2]|0;J=H+4|0;c[h>>2]=J;c[H>>2]=E;E=D+1|0;if(E>>>0<e>>>0){B=G+1|0;C=F;D=E}else{K=J;break}}}else{K=c[h>>2]|0}D=f+(x-b<<2)|0;if((D|0)==(K|0)){v=K;break}C=K-4|0;if(C>>>0>D>>>0){L=D;M=C}else{v=K;break}while(1){C=c[L>>2]|0;c[L>>2]=c[M>>2];c[M>>2]=C;C=L+4|0;D=M-4|0;if(C>>>0<D>>>0){L=C;M=D}else{v=K;break}}}}while(0);if((d|0)==(e|0)){N=v;c[g>>2]=N;Xl(n);i=k;return}N=f+(d-b<<2)|0;c[g>>2]=N;Xl(n);i=k;return}function _o(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((Ic[c[(c[d>>2]|0)+48>>2]&127](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){fm(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((Ic[c[(c[d>>2]|0)+48>>2]&127](d,r,q)|0)==(q|0)){gm(l);break}c[m>>2]=0;c[b>>2]=0;gm(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((Ic[c[(c[d>>2]|0)+48>>2]&127](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function $o(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);t=Ko(u,22,c[8226]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;pm(p,f);Zo(u,w,r,x,n,o,p);yl(c[p>>2]|0)|0;c[q>>2]=c[e>>2];_o(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function ap(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[23296]|0;a[q+1|0]=a[23297]|0;a[q+2|0]=a[23298]|0;a[q+3|0]=a[23299]|0;a[q+4|0]=a[23300]|0;a[q+5|0]=a[23301]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=k|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);v=Ko(u,12,c[8226]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;pm(o,f);Zo(u,w,q,x,m,n,o);yl(c[o>>2]|0)|0;c[p>>2]=c[e>>2];_o(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function bp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);t=Ko(u,23,c[8226]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;pm(p,f);Zo(u,w,r,x,n,o,p);yl(c[p>>2]|0)|0;c[q>>2]=c[e>>2];_o(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function cp(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=c[8226]|0;if(y){w=Ko(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Ko(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[34896]|0)==0;if(y){do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=Ro(m,c[8226]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);w=Ro(m,c[8226]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yu();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=mu(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}yu();H=B;I=B;J=c[m>>2]|0}}while(0);pm(q,f);dp(J,F,A,H,o,p,q);yl(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];_o(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){nu(I)}if((D|0)==0){i=d;return}nu(D);i=d;return}function dp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[8582]|0)==-1)){c[m>>2]=34328;c[m+4>>2]=52;c[m+8>>2]=0;Sl(34328,m,138)}m=(c[8583]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=tc(4)|0;r=q;Tt(r);Hb(q|0,29040,174)}q=j;r=c[o>>2]|0;if(!((c[8486]|0)==-1)){c[l>>2]=33944;c[l+4>>2]=52;c[l+8>>2]=0;Sl(33944,l,138)}l=(c[8487]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=tc(4)|0;t=s;Tt(t);Hb(s|0,29040,174)}s=r;Gc[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Hc[c[(c[j>>2]|0)+44>>2]&127](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=u;w=34;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=u;w=34;break}o=j;m=Hc[c[(c[o>>2]|0)+44>>2]&127](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=u+2|0;p=Hc[c[(c[o>>2]|0)+44>>2]&127](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=p;p=m;while(1){if(!(p>>>0<e>>>0)){x=m;y=p;break a}t=a[p]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((Ua(t<<24>>24|0,c[8226]|0)|0)==0){x=m;y=p;break}else{p=p+1|0}}}else{v=u;w=34}}while(0);b:do{if((w|0)==34){while(1){w=0;if(!(v>>>0<e>>>0)){x=u;y=v;break b}p=a[v]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((kb(p<<24>>24|0,c[8226]|0)|0)==0){x=u;y=v;break}else{v=v+1|0;w=34}}}}while(0);w=n;v=a[w]|0;if((v&1)==0){z=(v&255)>>>1}else{z=c[n+4>>2]|0}do{if((z|0)==0){Sc[c[(c[j>>2]|0)+48>>2]&63](q,x,y,c[h>>2]|0)|0;v=(c[h>>2]|0)+(y-x<<2)|0;c[h>>2]=v;A=v}else{do{if((x|0)!=(y|0)){v=y-1|0;if(v>>>0>x>>>0){B=x;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);p=Kc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){v=n+1|0;u=n+4|0;t=n+8|0;m=j;o=0;D=0;E=x;while(1){F=(a[w]&1)==0;do{if((a[(F?v:c[t>>2]|0)+D|0]|0)>0){if((o|0)!=(a[(F?v:c[t>>2]|0)+D|0]|0)){G=D;H=o;break}I=c[h>>2]|0;c[h>>2]=I+4;c[I>>2]=p;I=a[w]|0;if((I&1)==0){J=(I&255)>>>1}else{J=c[u>>2]|0}G=(D>>>0<(J-1|0)>>>0)+D|0;H=0}else{G=D;H=o}}while(0);F=Hc[c[(c[m>>2]|0)+44>>2]&127](q,a[E]|0)|0;I=c[h>>2]|0;K=I+4|0;c[h>>2]=K;c[I>>2]=F;F=E+1|0;if(F>>>0<y>>>0){o=H+1|0;D=G;E=F}else{L=K;break}}}else{L=c[h>>2]|0}E=f+(x-b<<2)|0;if((E|0)==(L|0)){A=L;break}D=L-4|0;if(D>>>0>E>>>0){M=E;N=D}else{A=L;break}while(1){D=c[M>>2]|0;c[M>>2]=c[N>>2];c[N>>2]=D;D=M+4|0;E=N-4|0;if(D>>>0<E>>>0){M=D;N=E}else{A=L;break}}}}while(0);c:do{if(y>>>0<e>>>0){L=j;N=y;while(1){M=a[N]|0;if(M<<24>>24==46){break}x=Hc[c[(c[L>>2]|0)+44>>2]&127](q,M)|0;M=c[h>>2]|0;G=M+4|0;c[h>>2]=G;c[M>>2]=x;x=N+1|0;if(x>>>0<e>>>0){N=x}else{O=x;P=G;break c}}L=Kc[c[(c[r>>2]|0)+12>>2]&255](s)|0;G=c[h>>2]|0;x=G+4|0;c[h>>2]=x;c[G>>2]=L;O=N+1|0;P=x}else{O=y;P=A}}while(0);Sc[c[(c[j>>2]|0)+48>>2]&63](q,O,e,P)|0;P=(c[h>>2]|0)+(l-O<<2)|0;c[h>>2]=P;if((d|0)==(e|0)){Q=P;c[g>>2]=Q;Xl(n);i=k;return}Q=f+(d-b<<2)|0;c[g>>2]=Q;Xl(n);i=k;return}function ep(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=c[8226]|0;if(y){w=Ko(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Ko(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[34896]|0)==0;if(y){do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=Ro(m,c[8226]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);w=Ro(m,c[8226]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yu();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=mu(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}yu();H=B;I=B;J=c[m>>2]|0}}while(0);pm(q,f);dp(J,F,A,H,o,p,q);yl(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];_o(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){nu(I)}if((D|0)==0){i=d;return}nu(D);i=d;return}function fp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[23304]|0;a[o+1|0]=a[23305]|0;a[o+2|0]=a[23306]|0;a[o+3|0]=a[23307]|0;a[o+4|0]=a[23308]|0;a[o+5|0]=a[23309]|0;p=k|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);q=Ko(p,20,c[8226]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==32){r=o}else if((h|0)==16){s=a[p]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){r=k+1|0;break}if(!((q|0)>1&s<<24>>24==48)){t=12;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){t=12;break}r=k+2|0}else{t=12}}while(0);if((t|0)==12){r=p}pm(m,f);t=m|0;m=c[t>>2]|0;if(!((c[8582]|0)==-1)){c[j>>2]=34328;c[j+4>>2]=52;c[j+8>>2]=0;Sl(34328,j,138)}j=(c[8583]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){s=c[h+(j<<2)>>2]|0;if((s|0)==0){break}yl(c[t>>2]|0)|0;u=l|0;Sc[c[(c[s>>2]|0)+48>>2]&63](s,p,o,u)|0;s=l+(q<<2)|0;if((r|0)==(o|0)){v=s;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;_o(b,n,u,v,s,f,g);i=d;return}v=l+(r-k<<2)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;_o(b,n,u,v,s,f,g);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function gp(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;pm(p,h);t=p|0;p=c[t>>2]|0;if(!((c[8584]|0)==-1)){c[o>>2]=34336;c[o+4>>2]=52;c[o+8>>2]=0;Sl(34336,o,138)}o=(c[8585]|0)-1|0;u=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-u>>2>>>0>o>>>0){v=c[u+(o<<2)>>2]|0;if((v|0)==0){break}w=v;yl(c[t>>2]|0)|0;c[j>>2]=0;x=f|0;a:do{if((l|0)==(m|0)){y=67}else{z=g|0;A=v;B=v;C=v+8|0;D=e;E=r|0;F=s|0;G=q|0;H=l;I=0;b:while(1){J=I;while(1){if((J|0)!=0){y=67;break a}K=c[x>>2]|0;do{if((K|0)==0){L=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){L=K;break}if(!((Kc[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){L=K;break}c[x>>2]=0;L=0}}while(0);K=(L|0)==0;M=c[z>>2]|0;c:do{if((M|0)==0){y=20}else{do{if((c[M+12>>2]|0)==(c[M+16>>2]|0)){if(!((Kc[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1)){break}c[z>>2]=0;y=20;break c}}while(0);if(K){N=M}else{y=21;break b}}}while(0);if((y|0)==20){y=0;if(K){y=21;break b}else{N=0}}if((Ic[c[(c[A>>2]|0)+36>>2]&127](w,a[H]|0,0)|0)<<24>>24==37){y=24;break}M=a[H]|0;if(!(M<<24>>24<0)){O=c[C>>2]|0;if(!((b[O+(M<<24>>24<<1)>>1]&8192)==0)){P=H;y=35;break}}Q=L+12|0;M=c[Q>>2]|0;R=L+16|0;if((M|0)==(c[R>>2]|0)){S=(Kc[c[(c[L>>2]|0)+36>>2]&255](L)|0)&255}else{S=a[M]|0}M=Hc[c[(c[B>>2]|0)+12>>2]&127](w,S)|0;if(M<<24>>24==(Hc[c[(c[B>>2]|0)+12>>2]&127](w,a[H]|0)|0)<<24>>24){y=62;break}c[j>>2]=4;J=4}d:do{if((y|0)==24){y=0;J=H+1|0;if((J|0)==(m|0)){y=25;break b}M=Ic[c[(c[A>>2]|0)+36>>2]&127](w,a[J]|0,0)|0;if((M<<24>>24|0)==69|(M<<24>>24|0)==48){T=H+2|0;if((T|0)==(m|0)){y=28;break b}U=M;V=Ic[c[(c[A>>2]|0)+36>>2]&127](w,a[T]|0,0)|0;W=T}else{U=0;V=M;W=J}J=c[(c[D>>2]|0)+36>>2]|0;c[E>>2]=L;c[F>>2]=N;Pc[J&63](q,e,r,s,h,j,k,V,U);c[x>>2]=c[G>>2];X=W+1|0}else if((y|0)==35){while(1){y=0;J=P+1|0;if((J|0)==(m|0)){Y=m;break}M=a[J]|0;if(M<<24>>24<0){Y=J;break}if((b[O+(M<<24>>24<<1)>>1]&8192)==0){Y=J;break}else{P=J;y=35}}K=L;J=N;M=N;while(1){do{if((K|0)==0){Z=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){Z=K;break}if(!((Kc[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){Z=K;break}c[x>>2]=0;Z=0}}while(0);T=(Z|0)==0;do{if((J|0)==0){_=M;y=48}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(T){$=J;aa=M;break}else{X=Y;break d}}if((Kc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[z>>2]=0;_=0;y=48;break}else{if(T^(M|0)==0){$=M;aa=M;break}else{X=Y;break d}}}}while(0);if((y|0)==48){y=0;if(T){X=Y;break d}else{$=0;aa=_}}ba=Z+12|0;ca=c[ba>>2]|0;da=Z+16|0;if((ca|0)==(c[da>>2]|0)){ea=(Kc[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{ea=a[ca]|0}if(ea<<24>>24<0){X=Y;break d}if((b[(c[C>>2]|0)+(ea<<24>>24<<1)>>1]&8192)==0){X=Y;break d}ca=c[ba>>2]|0;if((ca|0)==(c[da>>2]|0)){Kc[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;K=Z;J=$;M=aa;continue}else{c[ba>>2]=ca+1;K=Z;J=$;M=aa;continue}}}else if((y|0)==62){y=0;M=c[Q>>2]|0;if((M|0)==(c[R>>2]|0)){Kc[c[(c[L>>2]|0)+40>>2]&255](L)|0}else{c[Q>>2]=M+1}X=H+1|0}}while(0);if((X|0)==(m|0)){y=67;break a}H=X;I=c[j>>2]|0}if((y|0)==21){c[j>>2]=4;fa=L;break}else if((y|0)==25){c[j>>2]=4;fa=L;break}else if((y|0)==28){c[j>>2]=4;fa=L;break}}}while(0);if((y|0)==67){fa=c[x>>2]|0}w=f|0;do{if((fa|0)==0){ga=0}else{if((c[fa+12>>2]|0)!=(c[fa+16>>2]|0)){ga=fa;break}if(!((Kc[c[(c[fa>>2]|0)+36>>2]&255](fa)|0)==-1)){ga=fa;break}c[w>>2]=0;ga=0}}while(0);w=(ga|0)==0;x=g|0;v=c[x>>2]|0;e:do{if((v|0)==0){y=77}else{do{if((c[v+12>>2]|0)==(c[v+16>>2]|0)){if(!((Kc[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){break}c[x>>2]=0;y=77;break e}}while(0);if(!w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);do{if((y|0)==77){if(w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);n=tc(4)|0;Tt(n);Hb(n|0,29040,174)}function hp(a){a=a|0;wl(a|0);tu(a);return}function ip(a){a=a|0;wl(a|0);return}function jp(a){a=a|0;return 2}function kp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];gp(a,b,k,l,f,g,h,23288,23296);i=j;return}function lp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Kc[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+1|0;r=o+1|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}gp(b,d,l,m,g,h,j,q,r+p|0);i=k;return}function mp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;pm(m,f);f=m|0;m=c[f>>2]|0;if(!((c[8584]|0)==-1)){c[l>>2]=34336;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34336,l,138)}l=(c[8585]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}yl(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Kc[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(Hn(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=tc(4)|0;Tt(j);Hb(j|0,29040,174)}function np(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;pm(m,f);f=m|0;m=c[f>>2]|0;if(!((c[8584]|0)==-1)){c[l>>2]=34336;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34336,l,138)}l=(c[8585]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}yl(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Kc[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(Hn(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=tc(4)|0;Tt(j);Hb(j|0,29040,174)}function op(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;pm(l,f);f=l|0;l=c[f>>2]|0;if(!((c[8584]|0)==-1)){c[k>>2]=34336;c[k+4>>2]=52;c[k+8>>2]=0;Sl(34336,k,138)}k=(c[8585]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}yl(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=tp(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=tc(4)|0;Tt(b);Hb(b|0,29040,174)}function pp(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;pm(z,g);_=z|0;z=c[_>>2]|0;if(!((c[8584]|0)==-1)){c[y>>2]=34336;c[y+4>>2]=52;c[y+8>>2]=0;Sl(34336,y,138)}y=(c[8585]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;yl(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 73:{aa=j+8|0;c[t>>2]=c[f>>2];ca=tp(e,t,h,ba,2)|0;da=c[h>>2]|0;do{if((da&4|0)==0){if(!((ca-1|0)>>>0<12>>>0)){break}c[aa>>2]=ca;break a}}while(0);c[h>>2]=da|4;break};case 84:{ca=e|0;c[S>>2]=c[ca>>2];c[T>>2]=c[f>>2];gp(R,d,S,T,g,h,j,23240,23248);c[ca>>2]=c[R>>2];break};case 110:case 116:{c[J>>2]=c[f>>2];qp(0,e,J,h,ba);break};case 97:case 65:{ca=c[f>>2]|0;aa=d+8|0;ea=Kc[c[c[aa>>2]>>2]&255](aa)|0;c[x>>2]=ca;ca=(Hn(e,x,ea,ea+168|0,ba,h,0)|0)-ea|0;if((ca|0)>=168){break a}c[j+24>>2]=((ca|0)/12|0|0)%7|0;break};case 106:{c[s>>2]=c[f>>2];ca=tp(e,s,h,ba,3)|0;ea=c[h>>2]|0;if((ea&4|0)==0&(ca|0)<366){c[j+28>>2]=ca;break a}else{c[h>>2]=ea|4;break a}break};case 119:{c[o>>2]=c[f>>2];ea=tp(e,o,h,ba,1)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(ea|0)<7){c[j+24>>2]=ea;break a}else{c[h>>2]=ca|4;break a}break};case 112:{c[K>>2]=c[f>>2];rp(d,j+8|0,e,K,h,ba);break};case 114:{ca=e|0;c[M>>2]=c[ca>>2];c[N>>2]=c[f>>2];gp(L,d,M,N,g,h,j,23256,23267);c[ca>>2]=c[L>>2];break};case 70:{ca=e|0;c[H>>2]=c[ca>>2];c[I>>2]=c[f>>2];gp(G,d,H,I,g,h,j,23272,23280);c[ca>>2]=c[G>>2];break};case 89:{c[m>>2]=c[f>>2];ca=tp(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=ca-1900;break};case 83:{c[p>>2]=c[f>>2];ca=tp(e,p,h,ba,2)|0;ea=c[h>>2]|0;if((ea&4|0)==0&(ca|0)<61){c[j>>2]=ca;break a}else{c[h>>2]=ea|4;break a}break};case 109:{c[r>>2]=c[f>>2];ea=(tp(e,r,h,ba,2)|0)-1|0;ca=c[h>>2]|0;if((ca&4|0)==0&(ea|0)<12){c[j+16>>2]=ea;break a}else{c[h>>2]=ca|4;break a}break};case 98:case 66:case 104:{ca=c[f>>2]|0;ea=d+8|0;aa=Kc[c[(c[ea>>2]|0)+4>>2]&255](ea)|0;c[w>>2]=ca;ca=(Hn(e,w,aa,aa+288|0,ba,h,0)|0)-aa|0;if((ca|0)>=288){break a}c[j+16>>2]=((ca|0)/12|0|0)%12|0;break};case 37:{c[Z>>2]=c[f>>2];sp(0,e,Z,h,ba);break};case 68:{ca=e|0;c[E>>2]=c[ca>>2];c[F>>2]=c[f>>2];gp(D,d,E,F,g,h,j,23280,23288);c[ca>>2]=c[D>>2];break};case 77:{c[q>>2]=c[f>>2];ca=tp(e,q,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ca|0)<60){c[j+4>>2]=ca;break a}else{c[h>>2]=aa|4;break a}break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];Ec[aa&127](b,d,U,V,g,h,j);i=l;return};case 99:{aa=d+8|0;ca=Kc[c[(c[aa>>2]|0)+12>>2]&255](aa)|0;aa=e|0;c[B>>2]=c[aa>>2];c[C>>2]=c[f>>2];ea=a[ca]|0;if((ea&1)==0){fa=(ea&255)>>>1;ga=ca+1|0;ha=ca+1|0}else{ea=c[ca+8>>2]|0;fa=c[ca+4>>2]|0;ga=ea;ha=ea}gp(A,d,B,C,g,h,j,ga,ha+fa|0);c[aa>>2]=c[A>>2];break};case 121:{c[n>>2]=c[f>>2];aa=tp(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((aa|0)<69){ia=aa+2e3|0}else{ia=(aa-69|0)>>>0<31>>>0?aa+1900|0:aa}c[j+20>>2]=ia-1900;break};case 100:case 101:{aa=j+12|0;c[v>>2]=c[f>>2];ea=tp(e,v,h,ba,2)|0;ca=c[h>>2]|0;do{if((ca&4|0)==0){if(!((ea-1|0)>>>0<31>>>0)){break}c[aa>>2]=ea;break a}}while(0);c[h>>2]=ca|4;break};case 72:{c[u>>2]=c[f>>2];ea=tp(e,u,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ea|0)<24){c[j+8>>2]=ea;break a}else{c[h>>2]=aa|4;break a}break};case 88:{aa=d+8|0;ea=Kc[c[(c[aa>>2]|0)+24>>2]&255](aa)|0;aa=e|0;c[X>>2]=c[aa>>2];c[Y>>2]=c[f>>2];da=a[ea]|0;if((da&1)==0){ja=(da&255)>>>1;ka=ea+1|0;la=ea+1|0}else{da=c[ea+8>>2]|0;ja=c[ea+4>>2]|0;ka=da;la=da}gp(W,d,X,Y,g,h,j,ka,la+ja|0);c[aa>>2]=c[W>>2];break};case 82:{aa=e|0;c[P>>2]=c[aa>>2];c[Q>>2]=c[f>>2];gp(O,d,P,Q,g,h,j,23248,23253);c[aa>>2]=c[O>>2];break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=tc(4)|0;Tt(l);Hb(l|0,29040,174)}function qp(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;a:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((Kc[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;do{if((l|0)==0){m=12}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(h){n=l;break}else{o=l;break a}}if((Kc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1){c[e>>2]=0;m=12;break}else{if(h){n=l;break}else{o=l;break a}}}}while(0);if((m|0)==12){m=0;if(h){o=0;break}else{n=0}}l=c[j>>2]|0;p=c[l+12>>2]|0;if((p|0)==(c[l+16>>2]|0)){q=(Kc[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{q=a[p]|0}if(q<<24>>24<0){o=n;break}if((b[(c[f>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){o=n;break}p=c[j>>2]|0;l=p+12|0;r=c[l>>2]|0;if((r|0)==(c[p+16>>2]|0)){Kc[c[(c[p>>2]|0)+40>>2]&255](p)|0;continue}else{c[l>>2]=r+1;continue}}n=c[j>>2]|0;do{if((n|0)==0){s=0}else{if((c[n+12>>2]|0)!=(c[n+16>>2]|0)){s=n;break}if((Kc[c[(c[n>>2]|0)+36>>2]&255](n)|0)==-1){c[j>>2]=0;s=0;break}else{s=c[j>>2]|0;break}}}while(0);j=(s|0)==0;b:do{if((o|0)==0){m=32}else{do{if((c[o+12>>2]|0)==(c[o+16>>2]|0)){if(!((Kc[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1)){break}c[e>>2]=0;m=32;break b}}while(0);if(!j){break}i=d;return}}while(0);do{if((m|0)==32){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function rp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=Kc[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=Hn(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function sp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((Kc[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;a:do{if((e|0)==0){k=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((Kc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[j>>2]=0;k=11;break a}}while(0);if(d){l=e}else{k=12}}}while(0);if((k|0)==11){if(d){k=12}else{l=0}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){m=(Kc[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{m=a[e]|0}if(!((Ic[c[(c[g>>2]|0)+36>>2]&127](g,m,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=b;return}m=c[h>>2]|0;g=m+12|0;e=c[g>>2]|0;if((e|0)==(c[m+16>>2]|0)){Kc[c[(c[m>>2]|0)+40>>2]&255](m)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){n=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){n=e;break}if((Kc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[h>>2]=0;n=0;break}else{n=c[h>>2]|0;break}}}while(0);h=(n|0)==0;b:do{if((l|0)==0){k=31}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if(!((Kc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){break}c[j>>2]=0;k=31;break b}}while(0);if(!h){break}i=b;return}}while(0);do{if((k|0)==31){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function tp(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((Kc[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;a:do{if((e|0)==0){m=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((Kc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[l>>2]=0;m=11;break a}}while(0);if(d){n=e}else{m=12}}}while(0);if((m|0)==11){if(d){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(Kc[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}do{if(!(p<<24>>24<0)){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(Ic[c[(c[d>>2]|0)+36>>2]&127](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){Kc[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=q;v=h;w=n;x=n}else{c[s>>2]=t+1;u=q;v=h;w=n;x=n}while(1){y=u-48|0;q=v-1|0;t=c[k>>2]|0;do{if((t|0)==0){z=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){z=t;break}if((Kc[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1){c[k>>2]=0;z=0;break}else{z=c[k>>2]|0;break}}}while(0);t=(z|0)==0;do{if((w|0)==0){A=0;B=x}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){A=w;B=x;break}if(!((Kc[c[(c[w>>2]|0)+36>>2]&255](w)|0)==-1)){A=x;B=x;break}c[l>>2]=0;A=0;B=0}}while(0);C=c[k>>2]|0;if(!((t^(A|0)==0)&(q|0)>0)){m=40;break}s=c[C+12>>2]|0;if((s|0)==(c[C+16>>2]|0)){D=(Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0)&255}else{D=a[s]|0}if(D<<24>>24<0){o=y;m=52;break}if((b[(c[e>>2]|0)+(D<<24>>24<<1)>>1]&2048)==0){o=y;m=52;break}s=((Ic[c[(c[d>>2]|0)+36>>2]&127](g,D,0)|0)<<24>>24)+(y*10|0)|0;r=c[k>>2]|0;E=r+12|0;F=c[E>>2]|0;if((F|0)==(c[r+16>>2]|0)){Kc[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=s;v=q;w=A;x=B;continue}else{c[E>>2]=F+1;u=s;v=q;w=A;x=B;continue}}if((m|0)==40){do{if((C|0)==0){G=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){G=C;break}if((Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[k>>2]=0;G=0;break}else{G=c[k>>2]|0;break}}}while(0);d=(G|0)==0;b:do{if((B|0)==0){m=50}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if(!((Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){break}c[l>>2]=0;m=50;break b}}while(0);if(d){o=y}else{break}i=j;return o|0}}while(0);do{if((m|0)==50){if(d){break}else{o=y}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=y;i=j;return o|0}else if((m|0)==52){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function up(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;pm(n,f);r=n|0;n=c[r>>2]|0;if(!((c[8582]|0)==-1)){c[m>>2]=34328;c[m+4>>2]=52;c[m+8>>2]=0;Sl(34328,m,138)}m=(c[8583]|0)-1|0;s=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-s>>2>>>0>m>>>0){t=c[s+(m<<2)>>2]|0;if((t|0)==0){break}u=t;yl(c[r>>2]|0)|0;c[g>>2]=0;v=d|0;a:do{if((j|0)==(k|0)){w=71}else{x=e|0;y=t;z=t;A=t;B=b;C=p|0;D=q|0;E=o|0;F=j;G=0;b:while(1){H=G;while(1){if((H|0)!=0){w=71;break a}I=c[v>>2]|0;do{if((I|0)==0){J=1;K=0}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=Kc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if(!((M|0)==-1)){J=0;K=I;break}c[v>>2]=0;J=1;K=0}}while(0);I=c[x>>2]|0;do{if((I|0)==0){w=23}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){N=Kc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{N=c[L>>2]|0}if((N|0)==-1){c[x>>2]=0;w=23;break}else{if(J){O=I;break}else{w=25;break b}}}}while(0);if((w|0)==23){w=0;if(J){w=25;break b}else{O=0}}if((Ic[c[(c[y>>2]|0)+52>>2]&127](u,c[F>>2]|0,0)|0)<<24>>24==37){w=28;break}if(Ic[c[(c[z>>2]|0)+12>>2]&127](u,8192,c[F>>2]|0)|0){P=F;w=38;break}Q=K+12|0;I=c[Q>>2]|0;R=K+16|0;if((I|0)==(c[R>>2]|0)){S=Kc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{S=c[I>>2]|0}I=Hc[c[(c[A>>2]|0)+28>>2]&127](u,S)|0;if((I|0)==(Hc[c[(c[A>>2]|0)+28>>2]&127](u,c[F>>2]|0)|0)){w=66;break}c[g>>2]=4;H=4}c:do{if((w|0)==28){w=0;H=F+4|0;if((H|0)==(k|0)){w=29;break b}I=Ic[c[(c[y>>2]|0)+52>>2]&127](u,c[H>>2]|0,0)|0;if((I<<24>>24|0)==69|(I<<24>>24|0)==48){L=F+8|0;if((L|0)==(k|0)){w=32;break b}T=I;U=Ic[c[(c[y>>2]|0)+52>>2]&127](u,c[L>>2]|0,0)|0;V=L}else{T=0;U=I;V=H}H=c[(c[B>>2]|0)+36>>2]|0;c[C>>2]=K;c[D>>2]=O;Pc[H&63](o,b,p,q,f,g,h,U,T);c[v>>2]=c[E>>2];W=V+4|0}else if((w|0)==38){while(1){w=0;H=P+4|0;if((H|0)==(k|0)){X=k;break}if(Ic[c[(c[z>>2]|0)+12>>2]&127](u,8192,c[H>>2]|0)|0){P=H;w=38}else{X=H;break}}H=K;I=O;L=O;while(1){do{if((H|0)==0){Y=1;Z=0}else{_=c[H+12>>2]|0;if((_|0)==(c[H+16>>2]|0)){$=Kc[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{$=c[_>>2]|0}if(!(($|0)==-1)){Y=0;Z=H;break}c[v>>2]=0;Y=1;Z=0}}while(0);do{if((I|0)==0){aa=L;w=53}else{_=c[I+12>>2]|0;if((_|0)==(c[I+16>>2]|0)){ba=Kc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{ba=c[_>>2]|0}if((ba|0)==-1){c[x>>2]=0;aa=0;w=53;break}else{if(Y^(L|0)==0){ca=L;da=L;break}else{W=X;break c}}}}while(0);if((w|0)==53){w=0;if(Y){W=X;break c}else{ca=0;da=aa}}_=Z+12|0;ea=c[_>>2]|0;fa=Z+16|0;if((ea|0)==(c[fa>>2]|0)){ga=Kc[c[(c[Z>>2]|0)+36>>2]&255](Z)|0}else{ga=c[ea>>2]|0}if(!(Ic[c[(c[z>>2]|0)+12>>2]&127](u,8192,ga)|0)){W=X;break c}ea=c[_>>2]|0;if((ea|0)==(c[fa>>2]|0)){Kc[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;H=Z;I=ca;L=da;continue}else{c[_>>2]=ea+4;H=Z;I=ca;L=da;continue}}}else if((w|0)==66){w=0;L=c[Q>>2]|0;if((L|0)==(c[R>>2]|0)){Kc[c[(c[K>>2]|0)+40>>2]&255](K)|0}else{c[Q>>2]=L+4}W=F+4|0}}while(0);if((W|0)==(k|0)){w=71;break a}F=W;G=c[g>>2]|0}if((w|0)==25){c[g>>2]=4;ha=K;break}else if((w|0)==29){c[g>>2]=4;ha=K;break}else if((w|0)==32){c[g>>2]=4;ha=K;break}}}while(0);if((w|0)==71){ha=c[v>>2]|0}u=d|0;do{if((ha|0)==0){ia=1;ja=0}else{t=c[ha+12>>2]|0;if((t|0)==(c[ha+16>>2]|0)){ka=Kc[c[(c[ha>>2]|0)+36>>2]&255](ha)|0}else{ka=c[t>>2]|0}if(!((ka|0)==-1)){ia=0;ja=ha;break}c[u>>2]=0;ia=1;ja=0}}while(0);u=e|0;v=c[u>>2]|0;do{if((v|0)==0){w=84}else{t=c[v+12>>2]|0;if((t|0)==(c[v+16>>2]|0)){la=Kc[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{la=c[t>>2]|0}if((la|0)==-1){c[u>>2]=0;w=84;break}if(!ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);do{if((w|0)==84){if(ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);l=tc(4)|0;Tt(l);Hb(l|0,29040,174)}function vp(a){a=a|0;wl(a|0);tu(a);return}function wp(a){a=a|0;wl(a|0);return}function xp(a){a=a|0;return 2}function yp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];up(a,b,k,l,f,g,h,23208,23240);i=j;return}function zp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Kc[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+4|0;r=o+4|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}up(b,d,l,m,g,h,j,q,r+(p<<2)|0);i=k;return}function Ap(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;pm(m,f);f=m|0;m=c[f>>2]|0;if(!((c[8582]|0)==-1)){c[l>>2]=34328;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34328,l,138)}l=(c[8583]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}yl(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Kc[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(fo(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=tc(4)|0;Tt(j);Hb(j|0,29040,174)}function Bp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;pm(m,f);f=m|0;m=c[f>>2]|0;if(!((c[8582]|0)==-1)){c[l>>2]=34328;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34328,l,138)}l=(c[8583]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}yl(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Kc[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(fo(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=tc(4)|0;Tt(j);Hb(j|0,29040,174)}function Cp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;pm(l,f);f=l|0;l=c[f>>2]|0;if(!((c[8582]|0)==-1)){c[k>>2]=34328;c[k+4>>2]=52;c[k+8>>2]=0;Sl(34328,k,138)}k=(c[8583]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}yl(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=Hp(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=tc(4)|0;Tt(b);Hb(b|0,29040,174)}function Dp(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;pm(z,g);_=z|0;z=c[_>>2]|0;if(!((c[8582]|0)==-1)){c[y>>2]=34328;c[y+4>>2]=52;c[y+8>>2]=0;Sl(34328,y,138)}y=(c[8583]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;yl(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 89:{c[m>>2]=c[f>>2];aa=Hp(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=aa-1900;break};case 88:{aa=d+8|0;ca=Kc[c[(c[aa>>2]|0)+24>>2]&255](aa)|0;aa=e|0;c[X>>2]=c[aa>>2];c[Y>>2]=c[f>>2];da=a[ca]|0;if((da&1)==0){ea=(da&255)>>>1;fa=ca+4|0;ga=ca+4|0}else{da=c[ca+8>>2]|0;ea=c[ca+4>>2]|0;fa=da;ga=da}up(W,d,X,Y,g,h,j,fa,ga+(ea<<2)|0);c[aa>>2]=c[W>>2];break};case 121:{c[n>>2]=c[f>>2];aa=Hp(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((aa|0)<69){ha=aa+2e3|0}else{ha=(aa-69|0)>>>0<31>>>0?aa+1900|0:aa}c[j+20>>2]=ha-1900;break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];Ec[aa&127](b,d,U,V,g,h,j);i=l;return};case 119:{c[o>>2]=c[f>>2];aa=Hp(e,o,h,ba,1)|0;da=c[h>>2]|0;if((da&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break a}else{c[h>>2]=da|4;break a}break};case 70:{da=e|0;c[H>>2]=c[da>>2];c[I>>2]=c[f>>2];up(G,d,H,I,g,h,j,23040,23072);c[da>>2]=c[G>>2];break};case 97:case 65:{da=c[f>>2]|0;aa=d+8|0;ca=Kc[c[c[aa>>2]>>2]&255](aa)|0;c[x>>2]=da;da=(fo(e,x,ca,ca+168|0,ba,h,0)|0)-ca|0;if((da|0)>=168){break a}c[j+24>>2]=((da|0)/12|0|0)%7|0;break};case 114:{da=e|0;c[M>>2]=c[da>>2];c[N>>2]=c[f>>2];up(L,d,M,N,g,h,j,23128,23172);c[da>>2]=c[L>>2];break};case 77:{c[q>>2]=c[f>>2];da=Hp(e,q,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<60){c[j+4>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 98:case 66:case 104:{ca=c[f>>2]|0;da=d+8|0;aa=Kc[c[(c[da>>2]|0)+4>>2]&255](da)|0;c[w>>2]=ca;ca=(fo(e,w,aa,aa+288|0,ba,h,0)|0)-aa|0;if((ca|0)>=288){break a}c[j+16>>2]=((ca|0)/12|0|0)%12|0;break};case 73:{ca=j+8|0;c[t>>2]=c[f>>2];aa=Hp(e,t,h,ba,2)|0;da=c[h>>2]|0;do{if((da&4|0)==0){if(!((aa-1|0)>>>0<12>>>0)){break}c[ca>>2]=aa;break a}}while(0);c[h>>2]=da|4;break};case 100:case 101:{aa=j+12|0;c[v>>2]=c[f>>2];ca=Hp(e,v,h,ba,2)|0;ia=c[h>>2]|0;do{if((ia&4|0)==0){if(!((ca-1|0)>>>0<31>>>0)){break}c[aa>>2]=ca;break a}}while(0);c[h>>2]=ia|4;break};case 99:{ca=d+8|0;aa=Kc[c[(c[ca>>2]|0)+12>>2]&255](ca)|0;ca=e|0;c[B>>2]=c[ca>>2];c[C>>2]=c[f>>2];da=a[aa]|0;if((da&1)==0){ja=(da&255)>>>1;ka=aa+4|0;la=aa+4|0}else{da=c[aa+8>>2]|0;ja=c[aa+4>>2]|0;ka=da;la=da}up(A,d,B,C,g,h,j,ka,la+(ja<<2)|0);c[ca>>2]=c[A>>2];break};case 37:{c[Z>>2]=c[f>>2];Gp(0,e,Z,h,ba);break};case 112:{c[K>>2]=c[f>>2];Fp(d,j+8|0,e,K,h,ba);break};case 83:{c[p>>2]=c[f>>2];ca=Hp(e,p,h,ba,2)|0;da=c[h>>2]|0;if((da&4|0)==0&(ca|0)<61){c[j>>2]=ca;break a}else{c[h>>2]=da|4;break a}break};case 72:{c[u>>2]=c[f>>2];da=Hp(e,u,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<24){c[j+8>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 82:{ca=e|0;c[P>>2]=c[ca>>2];c[Q>>2]=c[f>>2];up(O,d,P,Q,g,h,j,23104,23124);c[ca>>2]=c[O>>2];break};case 84:{ca=e|0;c[S>>2]=c[ca>>2];c[T>>2]=c[f>>2];up(R,d,S,T,g,h,j,23072,23104);c[ca>>2]=c[R>>2];break};case 68:{ca=e|0;c[E>>2]=c[ca>>2];c[F>>2]=c[f>>2];up(D,d,E,F,g,h,j,23176,23208);c[ca>>2]=c[D>>2];break};case 110:case 116:{c[J>>2]=c[f>>2];Ep(0,e,J,h,ba);break};case 109:{c[r>>2]=c[f>>2];ca=(Hp(e,r,h,ba,2)|0)-1|0;da=c[h>>2]|0;if((da&4|0)==0&(ca|0)<12){c[j+16>>2]=ca;break a}else{c[h>>2]=da|4;break a}break};case 106:{c[s>>2]=c[f>>2];da=Hp(e,s,h,ba,3)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<366){c[j+28>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=tc(4)|0;Tt(l);Hb(l|0,29040,174)}function Ep(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;a:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=Kc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=15}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=Kc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=15;break}else{if(j){o=h;break}else{p=h;break a}}}}while(0);if((m|0)==15){m=0;if(j){p=0;break}else{o=0}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){q=Kc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{q=c[k>>2]|0}if(!(Ic[c[(c[d>>2]|0)+12>>2]&127](f,8192,q)|0)){p=o;break}k=c[g>>2]|0;h=k+12|0;r=c[h>>2]|0;if((r|0)==(c[k+16>>2]|0)){Kc[c[(c[k>>2]|0)+40>>2]&255](k)|0;continue}else{c[h>>2]=r+4;continue}}o=c[g>>2]|0;do{if((o|0)==0){s=1}else{q=c[o+12>>2]|0;if((q|0)==(c[o+16>>2]|0)){t=Kc[c[(c[o>>2]|0)+36>>2]&255](o)|0}else{t=c[q>>2]|0}if((t|0)==-1){c[g>>2]=0;s=1;break}else{s=(c[g>>2]|0)==0;break}}}while(0);do{if((p|0)==0){m=37}else{g=c[p+12>>2]|0;if((g|0)==(c[p+16>>2]|0)){u=Kc[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{u=c[g>>2]|0}if((u|0)==-1){c[b>>2]=0;m=37;break}if(!s){break}i=a;return}}while(0);do{if((m|0)==37){if(s){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}



function Vc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Wc(){return i|0}function Xc(a){a=a|0;i=a}function Yc(a,b){a=a|0;b=b|0;if((w|0)==0){w=a;x=b}}function Zc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function _c(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function $c(a){a=a|0;J=a}function ad(a){a=a|0;K=a}function bd(a){a=a|0;L=a}function cd(a){a=a|0;M=a}function dd(a){a=a|0;N=a}function ed(a){a=a|0;O=a}function fd(a){a=a|0;P=a}function gd(a){a=a|0;Q=a}function hd(a){a=a|0;R=a}function id(a){a=a|0;S=a}function jd(){c[7252]=p+8;c[7254]=p+8;c[7256]=q+8;c[7260]=q+8;c[7264]=q+8;c[7268]=q+8;c[7272]=q+8;c[7276]=p+8;c[7310]=q+8;c[7314]=q+8;c[7378]=q+8;c[7382]=q+8;c[7402]=p+8;c[7404]=q+8;c[7440]=q+8;c[7444]=q+8;c[7480]=q+8;c[7484]=q+8;c[7504]=p+8;c[7506]=p+8;c[7508]=q+8;c[7512]=q+8;c[7516]=q+8;c[7520]=p+8;c[7522]=p+8;c[7524]=p+8;c[7526]=p+8;c[7528]=p+8;c[7530]=p+8;c[7532]=p+8;c[7558]=q+8;c[7562]=p+8;c[7564]=q+8;c[7568]=q+8;c[7572]=q+8;c[7576]=p+8;c[7578]=p+8;c[7580]=p+8;c[7582]=p+8;c[7616]=p+8;c[7618]=p+8;c[7620]=p+8;c[7622]=q+8;c[7626]=q+8;c[7630]=q+8;c[7634]=q+8;c[7638]=q+8;c[7642]=q+8}function kd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;do{if((a|0)==0){d=1}else{if((b|0)==0|(c|0)==0){d=0;break}bm(a,b,c)|0;d=0}}while(0);return d|0}function ld(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b|0;e=d;c[e>>2]=a;c[e+4>>2]=0;Rb(c[r>>2]|0,21880,d|0)|0;i=b;return}function md(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0,G=0;g=i;i=i+424|0;j=g|0;k=g+8|0;l=g+32|0;m=g+40|0;n=g+408|0;c[l>>2]=0;o=k;c[o>>2]=c[384];c[o+4>>2]=c[385];c[o+8>>2]=c[386];c[o+12>>2]=c[387];c[o+16>>2]=c[388];c[o+20>>2]=c[389];o=pk(l,d,Lu(d|0)|0,0,k)|0;if((o|0)!=0){d=c[k+12>>2]|0;p=kj(o)|0;q=c[k>>2]|0;r=c[k+4>>2]|0;ld((k=i,i=i+32|0,c[k>>2]=d,c[k+8>>2]=p,c[k+16>>2]=q,c[k+24>>2]=r,k)|0);i=k;k=kj(o)|0;Gc[e&127](o,k);i=g;return}k=wj(c[l>>2]|0)|0;o=wj(bk(k,21864)|0)|0;r=yj(bk(o,14920)|0)|0;q=yj(bk(k,11400)|0)|0;yj(bk(k,7928)|0)|0;p=Ed()|0;Td(p);$d(p);Gd(p,mj(zj(bk(k,6304)|0)|0)|0);Id(p,Fj(bk(o,5216)|0)|0);if(((ak(r)|0)+1|0)>>>0>1>>>0){o=1;do{k=wj(_j(r,o-1|0)|0)|0;d=mj(zj(bk(k,6304)|0)|0)|0;s=+Gj(bk(k,4128)|0);k=ae(p,d)|0;if((k|0)==0){t=Kd(p,1)|0;Md(p,t,d);Od(p,t,5,1.7976931348623157e+308,-1.7976931348623157e+308);u=t}else{u=k}Od(p,u,2,0.0,0.0);Pd(p,u,s);o=o+1|0;}while(o>>>0<((ak(r)|0)+1|0)>>>0)}if(((ak(q)|0)+1|0)>>>0>1>>>0){r=1;do{o=wj(_j(q,r-1|0)|0)|0;u=yj(bk(o,14920)|0)|0;k=wj(bk(o,3368)|0)|0;t=ak(u)|0;d=t+1|0;v=Db()|0;w=i;i=i+(d*4|0)|0;i=i+7&-8;x=i;i=i+(d*8|0)|0;i=i+7&-8;if((t|0)>0){y=1;do{z=wj(_j(u,y-1|0)|0)|0;A=mj(zj(bk(z,6304)|0)|0)|0;s=+Gj(bk(z,4128)|0);z=ae(p,A)|0;if((z|0)==0){B=Kd(p,1)|0;Md(p,B,A);Od(p,B,5,1.7976931348623157e+308,-1.7976931348623157e+308);C=B}else{C=z}c[w+(y<<2)>>2]=C;h[x+(y<<3)>>3]=s;y=y+1|0;}while((y|0)<(d|0))}d=mj(zj(bk(o,6304)|0)|0)|0;y=Fj(bk(k,2488)|0)|0;s=+Gj(bk(k,21856)|0);D=+Gj(bk(k,20944)|0);u=Jd(p,1)|0;Ld(p,u,d);Qd(p,u,t,w,x);Nd(p,u,y,s,D);Ma(v|0);r=r+1|0;}while(r>>>0<((ak(q)|0)+1|0)>>>0)}q=p+52|0;if((c[q>>2]|0)>=1){r=1;do{D=+Zd(p,r);s=+_d(p,r);E=D==1.7976931348623157e+308?0.0:D;D=s==-1.7976931348623157e+308?1.7976931348623157e+308:s;C=E==-1.7976931348623157e+308;y=D==1.7976931348623157e+308;do{if(C&y){F=1}else{if(y|C){F=y?2:3;break}F=E!=D?4:5}}while(0);Od(p,r,F,E,D);r=r+1|0;}while((r|0)<=(c[q>>2]|0))}be(p);Sd(p);le(m);c[m+72>>2]=1;c[m>>2]=f;ke(p,m)|0;s=+se(p);m=vj()|0;f=vj()|0;ik(m,14920,tk(f)|0)|0;ik(m,19688,Uj(s)|0)|0;q=Fi()|0;ik(m,18576,Xj(q,Lu(q|0)|0)|0)|0;ik(m,17080,Sj(pe(p)|0,0)|0)|0;if((Xd(p)|0)>0){q=1;do{r=Uj(+te(p,q))|0;ik(f,Yd(p,q)|0,r)|0;q=q+1|0;}while((q|0)<((Xd(p)|0)+1|0))}q=n;a[q]=0;f=n+1|0;a[f]=0;r=tk(m)|0;a[j+4|0]=1;a[j|0]=2;a[j+5|0]=1;b[j+2>>1]=25;F=nk(r,54,q,j)|0;if((F|0)==0){Vd(p);Gi()|0;nj(c[l>>2]|0);uk(m);if((a[q]&1)==0){G=f}else{G=c[n+8>>2]|0}Gc[e&127](0,G)}else{G=kj(F)|0;Gc[e&127](F,G)}if((a[q]&1)==0){i=g;return}tu(c[n+8>>2]|0);i=g;return}function nd(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=yi(1,24)|0;c[e>>2]=Ri()|0;c[e+4>>2]=0;c[e+8>>2]=a;c[e+12>>2]=b;c[e+16>>2]=0;c[e+20>>2]=0;i=d;return e|0}function od(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=i;e=a;if((e|0)==(e|0)){f=1}else{Ji(16560,19944,92);f=1}f=Ju(b,c)|0;i=d;return f|0}function pd(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=a;a=d;d=0;g=c[f+4>>2]|0;while(1){if((g|0)==0){break}d=g;if((Ic[c[f+8>>2]&127](c[f+12>>2]|0,a,c[d>>2]|0)|0)<=0){h=0;g=c[d+24>>2]|0;j=d+4|0;c[j>>2]=(c[j>>2]|0)+1}else{h=1;g=c[d+28>>2]|0}}g=Si(c[f>>2]|0,32)|0;c[g>>2]=a;c[g+8>>2]=0;c[g+12>>2]=0;c[g+4>>2]=1;c[g+16>>2]=d;if((d|0)==0){k=0}else{k=h<<16>>16}b[g+20>>1]=k;b[g+22>>1]=0;c[g+24>>2]=0;c[g+28>>2]=0;k=f+16|0;c[k>>2]=(c[k>>2]|0)+1;if((d|0)==0){c[f+4>>2]=g}else{if((h<<16>>16|0)==0){c[d+24>>2]=g}else{c[d+28>>2]=g}}while(1){if((d|0)==0){break}if((h<<16>>16|0)==0){if((b[d+22>>1]|0)>0){l=20;break}if((b[d+22>>1]|0)<0){l=22;break}b[d+22>>1]=-1;h=b[d+20>>1]|0;d=c[d+16>>2]|0}else{if((b[d+22>>1]|0)<0){l=25;break}if((b[d+22>>1]|0)>0){l=27;break}b[d+22>>1]=1;h=b[d+20>>1]|0;d=c[d+16>>2]|0}}if((l|0)==20){b[d+22>>1]=0}else if((l|0)==22){qd(f,d)|0}else if((l|0)==25){b[d+22>>1]=0}else if((l|0)==27){qd(f,d)|0}if((d|0)!=0){m=g;i=e;return m|0}d=f+20|0;c[d>>2]=(c[d>>2]|0)+1;m=g;i=e;return m|0}function qd(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=a;a=d;if((a|0)!=0){g=1}else{Ji(14112,19944,322);g=1}g=a;if((b[g+22>>1]|0)<0){h=c[g+16>>2]|0;j=c[g+24>>2]|0;k=c[j+28>>2]|0;if((b[j+22>>1]|0)<=0){if((h|0)==0){c[f+4>>2]=j}else{if((b[g+20>>1]|0)==0){c[h+24>>2]=j}else{c[h+28>>2]=j}}d=g+4|0;c[d>>2]=(c[d>>2]|0)-(c[j+4>>2]|0);c[j+16>>2]=h;b[j+20>>1]=b[g+20>>1]|0;d=j+22|0;b[d>>1]=(b[d>>1]|0)+1;c[j+28>>2]=g;c[g+16>>2]=j;b[g+20>>1]=1;b[g+22>>1]=-(b[j+22>>1]|0);c[g+24>>2]=k;if((k|0)!=0){c[k+16>>2]=g;b[k+20>>1]=0}a=j}else{l=c[k+24>>2]|0;m=c[k+28>>2]|0;if((h|0)==0){c[f+4>>2]=k}else{if((b[g+20>>1]|0)==0){c[h+24>>2]=k}else{c[h+28>>2]=k}}d=g+4|0;c[d>>2]=(c[d>>2]|0)-((c[j+4>>2]|0)+(c[k+4>>2]|0));d=k+4|0;c[d>>2]=(c[d>>2]|0)+(c[j+4>>2]|0);b[g+22>>1]=(b[k+22>>1]|0)>=0?0:1;b[j+22>>1]=(b[k+22>>1]|0)<=0?0:-1;c[k+16>>2]=h;b[k+20>>1]=b[g+20>>1]|0;b[k+22>>1]=0;c[k+24>>2]=j;c[k+28>>2]=g;c[g+16>>2]=k;b[g+20>>1]=1;c[g+24>>2]=m;c[j+16>>2]=k;b[j+20>>1]=0;c[j+28>>2]=l;if((l|0)!=0){c[l+16>>2]=j;b[l+20>>1]=1}if((m|0)!=0){c[m+16>>2]=g;b[m+20>>1]=0}a=k}n=a;i=e;return n|0}else{h=c[g+16>>2]|0;j=c[g+28>>2]|0;k=c[j+24>>2]|0;if((b[j+22>>1]|0)>=0){if((h|0)==0){c[f+4>>2]=j}else{if((b[g+20>>1]|0)==0){c[h+24>>2]=j}else{c[h+28>>2]=j}}d=j+4|0;c[d>>2]=(c[d>>2]|0)+(c[g+4>>2]|0);c[j+16>>2]=h;b[j+20>>1]=b[g+20>>1]|0;d=j+22|0;b[d>>1]=(b[d>>1]|0)-1;c[j+24>>2]=g;c[g+16>>2]=j;b[g+20>>1]=0;b[g+22>>1]=-(b[j+22>>1]|0);c[g+28>>2]=k;if((k|0)!=0){c[k+16>>2]=g;b[k+20>>1]=1}a=j}else{l=c[k+24>>2]|0;m=c[k+28>>2]|0;if((h|0)==0){c[f+4>>2]=k}else{if((b[g+20>>1]|0)==0){c[h+24>>2]=k}else{c[h+28>>2]=k}}f=j+4|0;c[f>>2]=(c[f>>2]|0)-(c[k+4>>2]|0);f=k+4|0;c[f>>2]=(c[f>>2]|0)+(c[g+4>>2]|0);b[g+22>>1]=(b[k+22>>1]|0)<=0?0:-1;b[j+22>>1]=(b[k+22>>1]|0)>=0?0:1;c[k+16>>2]=h;b[k+20>>1]=b[g+20>>1]|0;b[k+22>>1]=0;c[k+24>>2]=g;c[k+28>>2]=j;c[g+16>>2]=k;b[g+20>>1]=0;c[g+28>>2]=l;c[j+16>>2]=k;b[j+20>>1]=1;c[j+24>>2]=m;if((l|0)!=0){c[l+16>>2]=g;b[l+20>>1]=1}if((m|0)!=0){c[m+16>>2]=j;b[m+20>>1]=0}a=k}n=a;i=e;return n|0}return 0}function rd(a,b){a=a|0;b=b|0;c[a+12>>2]=b;i=i;return}function sd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a;a=b;b=c[e+4>>2]|0;while(1){if((b|0)==0){f=9;break}g=Ic[c[e+8>>2]&127](c[e+12>>2]|0,a,c[b>>2]|0)|0;if((g|0)==0){break}if((g|0)<0){h=c[b+24>>2]|0}else{h=c[b+28>>2]|0}b=h}if((f|0)==9){j=b;i=d;return j|0}j=b;i=d;return j|0}function td(a){a=a|0;i=i;return c[a+12>>2]|0}function ud(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;f=a;a=d;do{if((c[a+24>>2]|0)==0){g=3}else{if((c[a+28>>2]|0)==0){g=3;break}h=c[a+16>>2]|0;j=c[a+24>>2]|0;d=vd(f,a)|0;k=c[d+28>>2]|0;if((c[a+28>>2]|0)==(d|0)){if((h|0)==0){c[f+4>>2]=d}else{if((b[a+20>>1]|0)==0){c[h+24>>2]=d}else{c[h+28>>2]=d}}c[d+4>>2]=c[a+4>>2];c[d+16>>2]=h;b[d+20>>1]=b[a+20>>1]|0;b[d+22>>1]=b[a+22>>1]|0;c[d+24>>2]=j;c[d+28>>2]=a;c[j+16>>2]=d;c[a+4>>2]=1;c[a+16>>2]=d;b[a+20>>1]=1;b[a+22>>1]=(k|0)==0?0:1;c[a+24>>2]=0;c[a+28>>2]=k;if((k|0)!=0){c[k+16>>2]=a}}else{l=c[a+28>>2]|0;m=c[d+16>>2]|0;if((h|0)==0){c[f+4>>2]=d}else{if((b[a+20>>1]|0)==0){c[h+24>>2]=d}else{c[h+28>>2]=d}}c[d+4>>2]=c[a+4>>2];c[d+16>>2]=h;b[d+20>>1]=b[a+20>>1]|0;b[d+22>>1]=b[a+22>>1]|0;c[d+24>>2]=j;c[d+28>>2]=l;c[j+16>>2]=d;c[l+16>>2]=d;c[m+24>>2]=a;c[a+4>>2]=1;c[a+16>>2]=m;b[a+20>>1]=0;b[a+22>>1]=(k|0)==0?0:1;c[a+24>>2]=0;c[a+28>>2]=k;if((k|0)!=0){c[k+16>>2]=a}}}}while(0);j=a;h=c[j+16>>2]|0;while(1){if((h|0)==0){break}if((b[j+20>>1]|0)==0){k=h+4|0;c[k>>2]=(c[k>>2]|0)-1}j=h;h=c[j+16>>2]|0}h=c[a+16>>2]|0;k=b[a+20>>1]|0;if((c[a+24>>2]|0)!=0){n=c[a+24>>2]|0}else{n=c[a+28>>2]|0}j=n;if((h|0)==0){c[f+4>>2]=j}else{if((k<<16>>16|0)==0){c[h+24>>2]=j}else{c[h+28>>2]=j}}if((j|0)!=0){c[j+16>>2]=h;b[j+20>>1]=k}j=f+16|0;c[j>>2]=(c[j>>2]|0)-1;while(1){if((h|0)==0){break}if((k<<16>>16|0)==0){if((b[h+22>>1]|0)==0){g=44;break}if((b[h+22>>1]|0)<0){b[h+22>>1]=0}else{h=qd(f,h)|0;if((b[h+22>>1]|0)<0){g=48;break}}k=b[h+20>>1]|0;h=c[h+16>>2]|0}else{if((b[h+22>>1]|0)==0){g=52;break}if((b[h+22>>1]|0)>0){b[h+22>>1]=0}else{h=qd(f,h)|0;if((b[h+22>>1]|0)>0){g=56;break}}k=b[h+20>>1]|0;h=c[h+16>>2]|0}}if((g|0)==44){b[h+22>>1]=1}else if((g|0)!=48)if((g|0)==52){b[h+22>>1]=-1}if((h|0)!=0){o=f;p=o|0;q=c[p>>2]|0;r=a;s=r;Ti(q,s,32);i=e;return}h=f+20|0;c[h>>2]=(c[h>>2]|0)-1;o=f;p=o|0;q=c[p>>2]|0;r=a;s=r;Ti(q,s,32);i=e;return}function vd(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=a;if((c[f+4>>2]|0)==0){g=0;h=g;i=e;return h|0}a=d;if((a|0)==0){j=c[f+4>>2]|0}else{j=c[a+28>>2]|0}f=j;if((f|0)==0){while(1){f=c[a+16>>2]|0;if((f|0)==0){k=9;break}if((b[a+20>>1]|0)==0){k=11;break}a=f}}else{while(1){a=c[f+24>>2]|0;if((a|0)==0){break}f=a}}g=f;h=g;i=e;return h|0}function wd(a){a=a|0;var b=0,d=0;b=i;d=a;Ui(c[d>>2]|0);Bi(d);i=b;return}function xd(){var a=0,b=0;a=i;b=yi(1,88)|0;c[b>>2]=0;c[b+4>>2]=1;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;h[b+24>>3]=.1;c[b+32>>2]=4;c[b+36>>2]=1;h[b+40>>3]=1.0e-15;h[b+48>>3]=1.0e10;c[b+56>>2]=100;h[b+64>>3]=1.0e-6;c[b+72>>2]=100;c[b+76>>2]=1e3;c[b+80>>2]=-1;c[b+84>>2]=0;i=a;return b|0}function yd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if((e|0)!=0){f=1}else{Ji(10544,16864,124);f=1}c[e+4>>2]=c[a+4>>2];c[e+16>>2]=c[a+8>>2];h[e+24>>3]=+h[a+16>>3];c[e+32>>2]=c[a+24>>2];c[e+36>>2]=c[a+28>>2];h[e+40>>3]=+h[a+32>>3];h[e+48>>3]=+h[a+40>>3];c[e+56>>2]=c[a+48>>2];h[e+64>>3]=+h[a+56>>3];c[e+72>>2]=c[a+64>>2];c[e+76>>2]=c[a+68>>2];i=d;return}function zd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;h=a;a=b;b=d;d=e;e=f;if((h|0)!=0){j=1}else{Ji(10544,16864,194);j=1}if(1<=(a|0)){if((a|0)<=1e8){k=1}else{l=5}}else{l=5}if((l|0)==5){Ji(12624,16864,195);k=1}c[h>>2]=0;k=0;l=c[h+4>>2]|0;if((l|0)==1){if((c[h+12>>2]|0)!=0){Ne(c[h+12>>2]|0);c[h+12>>2]=0}if((c[h+8>>2]|0)==0){c[h+8>>2]=Nh()|0;k=1}}else if((l|0)==2|(l|0)==3){if((c[h+8>>2]|0)!=0){Sh(c[h+8>>2]|0);c[h+8>>2]=0}if((c[h+12>>2]|0)==0){c[h+12>>2]=De()|0;k=1}}else{if((h|0)!=(h|0)){m=1}else{Ji(8888,16864,225);m=1}}if((c[h+12>>2]|0)!=0){if((k|0)!=0){c[(c[h+12>>2]|0)+24>>2]=c[h+72>>2]}if((k|0)!=0){c[(c[h+12>>2]|0)+84>>2]=c[h+76>>2]}}do{if((c[h+8>>2]|0)!=0){if((Oh(c[h+8>>2]|0,a,d,e)|0)==0){break}n=1;o=n;i=g;return o|0}else{if((c[h+12>>2]|0)!=0){k=Ee(c[h+12>>2]|0,a,b,d,e)|0;if((k|0)==1){n=1;o=n;i=g;return o|0}else if((k|0)==2){n=2;o=n;i=g;return o|0}else if((k|0)==0){k=c[h+4>>2]|0;if((k|0)==2){c[(c[h+12>>2]|0)+64>>2]=1}else if((k|0)==3){c[(c[h+12>>2]|0)+64>>2]=2}else{if((h|0)!=(h|0)){p=1}else{Ji(8888,16864,308);p=1}}}else{if((h|0)!=(h|0)){q=1}else{Ji(8888,16864,318);q=1}}}else{if((h|0)!=(h|0)){r=1}else{Ji(8888,16864,322);r=1}}}}while(0);c[h>>2]=1;c[h+84>>2]=0;n=0;o=n;i=g;return o|0}function Ad(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;a=b;if((e|0)!=0){f=1}else{Ji(10544,16864,352);f=1}if((c[e>>2]|0)!=0){g=1}else{Ji(7288,16864,353);g=1}if((c[e+8>>2]|0)!=0){Qh(c[e+8>>2]|0,a);i=d;return}if((c[e+12>>2]|0)!=0){Fe(c[e+12>>2]|0,a)}else{if((e|0)!=(e|0)){h=1}else{Ji(8888,16864,364);h=1}}i=d;return}function Bd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;a=b;if((e|0)!=0){f=1}else{Ji(10544,16864,390);f=1}if((c[e>>2]|0)!=0){g=1}else{Ji(7288,16864,391);g=1}if((c[e+8>>2]|0)!=0){Rh(c[e+8>>2]|0,a);i=d;return}if((c[e+12>>2]|0)!=0){Ie(c[e+12>>2]|0,a)}else{if((e|0)!=(e|0)){h=1}else{Ji(8888,16864,402);h=1}}i=d;return}function Cd(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;j=a;a=b;b=d;d=e;e=f;f=g;if((j|0)!=0){k=1}else{Ji(10544,16864,457);k=1}if((c[j>>2]|0)!=0){l=1}else{Ji(7288,16864,458);l=1}if((c[j+8>>2]|0)!=0){switch(Ph(c[j+8>>2]|0,a,d,e,f)|0){case 1:{c[j>>2]=0;m=1;n=m;i=h;return n|0};case 4:{c[j>>2]=0;m=4;n=m;i=h;return n|0};case 0:{break};case 2:case 3:case 5:{c[j>>2]=0;m=3;n=m;i=h;return n|0};default:{if((j|0)!=(j|0)){o=1}else{Ji(8888,16864,506);o=1}}}}else{if((c[j+12>>2]|0)!=0){o=Le(c[j+12>>2]|0,a,b,d,e,f)|0;if((o|0)!=0)if((o|0)==1){c[j>>2]=0;m=1;n=m;i=h;return n|0}else if((o|0)==3){c[j>>2]=0;m=4;n=m;i=h;return n|0}else{if((j|0)!=(j|0)){p=1}else{Ji(8888,16864,523);p=1}}}else{if((j|0)!=(j|0)){q=1}else{Ji(8888,16864,527);q=1}}}q=j+84|0;c[q>>2]=(c[q>>2]|0)+1;m=0;n=m;i=h;return n|0}function Dd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;if((d|0)!=0){e=1}else{Ji(10544,16864,562);e=1}if((c[d+8>>2]|0)!=0){Sh(c[d+8>>2]|0)}if((c[d+12>>2]|0)==0){f=d;g=f;Bi(g);i=b;return}Ne(c[d+12>>2]|0);f=d;g=f;Bi(g);i=b;return}function Ed(){var a=0,b=0;a=i;b=yi(1,152)|0;Fd(b);i=a;return b|0}function Fd(a){a=a|0;var b=0,d=0;b=i;d=a;c[d>>2]=-673589566;c[d+4>>2]=Ri()|0;c[d+12>>2]=0;c[d+8>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=1;h[d+32>>3]=0.0;c[d+40>>2]=100;c[d+44>>2]=200;c[d+52>>2]=0;c[d+48>>2]=0;c[d+56>>2]=0;c[d+60>>2]=yi((c[d+40>>2]|0)+1|0,4)|0;c[d+64>>2]=yi((c[d+44>>2]|0)+1|0,4)|0;c[d+72>>2]=0;c[d+68>>2]=0;c[d+76>>2]=0;c[d+80>>2]=yi((c[d+40>>2]|0)+1|0,4)|0;c[d+84>>2]=0;c[d+88>>2]=0;c[d+96>>2]=1;c[d+92>>2]=1;h[d+104>>3]=0.0;c[d+112>>2]=0;c[d+116>>2]=0;c[d+120>>2]=1;h[d+128>>3]=0.0;c[d+136>>2]=1;h[d+144>>3]=0.0;i=b;return}function Gd(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=b;b=e;e=c[g+8>>2]|0;do{if((e|0)!=0){if((c[e+204>>2]|0)==0){break}Gc[(Hi(19416,130)|0)&127](20344,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h}}while(0);if((c[g+16>>2]|0)!=0){e=c[g+4>>2]|0;j=c[g+16>>2]|0;Ti(e,j,(Lu(c[g+16>>2]|0)|0)+1|0);c[g+16>>2]=0}if((b|0)==0){i=f;return}if((a[b|0]|0)==0){i=f;return}j=0;while(1){if((a[b+j|0]|0)==0){break}if((j|0)==256){Gc[(Hi(19416,139)|0)&127](14128,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h}if((Ac(d[b+j|0]|0)|0)!=0){Gc[(Hi(19416,141)|0)&127](10640,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h}j=j+1|0}j=c[g+4>>2]|0;c[g+16>>2]=Si(j,(Lu(b|0)|0)+1|0)|0;Mu(c[g+16>>2]|0,b|0)|0;i=f;return}function Hd(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=b;b=e;e=c[g+8>>2]|0;do{if((e|0)!=0){if((c[e+204>>2]|0)==0){break}Gc[(Hi(19416,171)|0)&127](7360,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h}}while(0);if((c[g+20>>2]|0)!=0){e=c[g+4>>2]|0;j=c[g+20>>2]|0;Ti(e,j,(Lu(c[g+20>>2]|0)|0)+1|0);c[g+20>>2]=0}if((b|0)==0){i=f;return}if((a[b|0]|0)==0){i=f;return}j=0;while(1){if((a[b+j|0]|0)==0){break}if((j|0)==256){Gc[(Hi(19416,180)|0)&127](6e3,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h}if((Ac(d[b+j|0]|0)|0)!=0){Gc[(Hi(19416,182)|0)&127](4872,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h}j=j+1|0}j=c[g+4>>2]|0;c[g+20>>2]=Si(j,(Lu(b|0)|0)+1|0)|0;Mu(c[g+20>>2]|0,b|0)|0;i=f;return}function Id(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;b=c[e+8>>2]|0;do{if((b|0)!=0){if((c[b+204>>2]|0)==0){break}Gc[(Hi(19416,212)|0)&127](4008,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f}}while(0);do{if((a|0)!=1){if((a|0)==2){break}Gc[(Hi(19416,214)|0)&127](3080,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}}while(0);c[e+24>>2]=a;i=d;return}function Jd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;f=b;b=d;d=c[f+8>>2]|0;if((b|0)<1){Gc[(Hi(19416,249)|0)&127](2256,(g=i,i=i+8|0,c[g>>2]=b,g)|0);i=g}if((b|0)>(1e8-(c[f+48>>2]|0)|0)){Gc[(Hi(19416,252)|0)&127](21648,(g=i,i=i+8|0,c[g>>2]=b,g)|0);i=g}g=(c[f+48>>2]|0)+b|0;if((c[f+40>>2]|0)<(g|0)){j=c[f+60>>2]|0;while(1){if((c[f+40>>2]|0)>=(g|0)){break}k=f+40|0;c[k>>2]=(c[k>>2]|0)+(c[f+40>>2]|0);if((c[f+40>>2]|0)>0){l=1}else{Ji(20424,19416,259);l=1}}c[f+60>>2]=yi((c[f+40>>2]|0)+1|0,4)|0;Ku((c[f+60>>2]|0)+4|0,j+4|0,c[f+48>>2]<<2)|0;Bi(j);Bi(c[f+80>>2]|0);c[f+80>>2]=yi((c[f+40>>2]|0)+1|0,4)|0}j=(c[f+48>>2]|0)+1|0;while(1){if((j|0)>(g|0)){break}l=Si(c[f+4>>2]|0,104)|0;k=l;c[(c[f+60>>2]|0)+(j<<2)>>2]=l;c[k>>2]=j;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;a[k+16|0]=0;a[k+17|0]=0;if((d|0)!=0){l=c[d+204>>2]|0;if((l|0)==4){if((c[d+100>>2]|0)!=0){m=1}else{Ji(19448,19416,289);m=1}c[k+12>>2]=c[(c[d+100>>2]|0)+8>>2];a[k+16|0]=2}else if((l|0)!=0)if((l|0)==1){if((c[d+100>>2]|0)!=0){n=1}else{Ji(19448,19416,284);n=1}c[k+12>>2]=c[(c[d+100>>2]|0)+8>>2];a[k+16|0]=1}else{if((d|0)!=(d|0)){o=1}else{Ji(18064,19416,294);o=1}}}c[k+20>>2]=1;h[k+32>>3]=0.0;h[k+24>>3]=0.0;c[k+40>>2]=0;h[k+48>>3]=1.0;c[k+56>>2]=1;c[k+60>>2]=0;h[k+72>>3]=0.0;h[k+64>>3]=0.0;h[k+88>>3]=0.0;h[k+80>>3]=0.0;h[k+96>>3]=0.0;j=j+1|0}c[f+48>>2]=g;c[f+76>>2]=0;if((d|0)==0){p=g;q=b;r=p-q|0;s=r+1|0;i=e;return s|0}if((c[d+204>>2]|0)==0){p=g;q=b;r=p-q|0;s=r+1|0;i=e;return s|0}c[d+216>>2]=1;p=g;q=b;r=p-q|0;s=r+1|0;i=e;return s|0}function Kd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0;d=i;e=a;a=b;b=c[e+8>>2]|0;do{if((b|0)!=0){if((c[b+204>>2]|0)==0){break}Gc[(Hi(19416,352)|0)&127](16824,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f}}while(0);if((a|0)<1){Gc[(Hi(19416,355)|0)&127](16352,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}if((a|0)>(1e8-(c[e+52>>2]|0)|0)){Gc[(Hi(19416,358)|0)&127](16016,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}f=(c[e+52>>2]|0)+a|0;if((c[e+44>>2]|0)<(f|0)){b=c[e+64>>2]|0;while(1){if((c[e+44>>2]|0)>=(f|0)){break}g=e+44|0;c[g>>2]=(c[g>>2]|0)+(c[e+44>>2]|0);if((c[e+44>>2]|0)>0){j=1}else{Ji(15792,19416,365);j=1}}c[e+64>>2]=yi((c[e+44>>2]|0)+1|0,4)|0;Ku((c[e+64>>2]|0)+4|0,b+4|0,c[e+52>>2]<<2)|0;Bi(b)}b=(c[e+52>>2]|0)+1|0;while(1){if((b|0)>(f|0)){break}j=Si(c[e+4>>2]|0,112)|0;g=j;c[(c[e+64>>2]|0)+(b<<2)>>2]=j;c[g>>2]=b;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=1;c[g+16>>2]=5;h[g+32>>3]=0.0;h[g+24>>3]=0.0;h[g+40>>3]=0.0;c[g+48>>2]=0;h[g+56>>3]=1.0;c[g+64>>2]=5;c[g+68>>2]=0;h[g+80>>3]=0.0;h[g+72>>3]=0.0;h[g+96>>3]=0.0;h[g+88>>3]=0.0;h[g+104>>3]=0.0;b=b+1|0}c[e+52>>2]=f;i=d;return f-a+1|0}function Ld(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=b;b=e;e=f;f=c[h+8>>2]|0;if(1<=(b|0)){if((b|0)>(c[h+48>>2]|0)){j=3}}else{j=3}if((j|0)==3){Gc[(Hi(19416,422)|0)&127](15360,(k=i,i=i+8|0,c[k>>2]=b,k)|0);i=k}j=c[(c[h+60>>2]|0)+(b<<2)>>2]|0;do{if((f|0)!=0){if((c[f+204>>2]|0)==0){break}if((c[f+100>>2]|0)!=0){l=1}else{Ji(19448,19416,426);l=1}if((c[j+12>>2]|0)==(c[(c[f+100>>2]|0)+8>>2]|0)){m=1}else{Ji(15128,19416,427);m=1}}}while(0);if((c[j+4>>2]|0)!=0){if((c[j+8>>2]|0)!=0){if((c[h+68>>2]|0)!=0){n=1}else{Ji(14896,19416,431);n=1}ud(c[h+68>>2]|0,c[j+8>>2]|0);c[j+8>>2]=0}n=c[h+4>>2]|0;m=c[j+4>>2]|0;Ti(n,m,(Lu(c[j+4>>2]|0)|0)+1|0);c[j+4>>2]=0}if((e|0)==0){i=g;return}if((a[e|0]|0)==0){i=g;return}m=0;while(1){if((a[e+m|0]|0)==0){break}if((m|0)==256){Gc[(Hi(19416,442)|0)&127](14672,(k=i,i=i+8|0,c[k>>2]=b,k)|0);i=k}if((Ac(d[e+m|0]|0)|0)!=0){Gc[(Hi(19416,445)|0)&127](13976,(k=i,i=i+8|0,c[k>>2]=b,k)|0);i=k}m=m+1|0}m=c[h+4>>2]|0;c[j+4>>2]=Si(m,(Lu(e|0)|0)+1|0)|0;Mu(c[j+4>>2]|0,e|0)|0;if((c[h+68>>2]|0)!=0){if((c[j+8>>2]|0)==0){o=1}else{Ji(13576,19416,451);o=1}c[j+8>>2]=pd(c[h+68>>2]|0,c[j+4>>2]|0)|0;rd(c[j+8>>2]|0,j)}i=g;return}function Md(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;h=b;b=e;e=f;f=c[h+8>>2]|0;do{if((f|0)!=0){if((c[f+204>>2]|0)==0){break}Gc[(Hi(19416,481)|0)&127](12880,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}}while(0);if(1<=(b|0)){if((b|0)>(c[h+52>>2]|0)){k=6}}else{k=6}if((k|0)==6){Gc[(Hi(19416,483)|0)&127](12568,(j=i,i=i+8|0,c[j>>2]=b,j)|0);i=j}k=c[(c[h+64>>2]|0)+(b<<2)>>2]|0;if((c[k+4>>2]|0)!=0){if((c[k+8>>2]|0)!=0){if((c[h+72>>2]|0)!=0){l=1}else{Ji(12416,19416,488);l=1}ud(c[h+72>>2]|0,c[k+8>>2]|0);c[k+8>>2]=0}l=c[h+4>>2]|0;f=c[k+4>>2]|0;Ti(l,f,(Lu(c[k+4>>2]|0)|0)+1|0);c[k+4>>2]=0}if((e|0)==0){i=g;return}if((a[e|0]|0)==0){i=g;return}f=0;while(1){if((a[e+f|0]|0)==0){break}if((f|0)==256){Gc[(Hi(19416,499)|0)&127](12112,(j=i,i=i+8|0,c[j>>2]=b,j)|0);i=j}if((Ac(d[e+f|0]|0)|0)!=0){Gc[(Hi(19416,502)|0)&127](11856,(j=i,i=i+8|0,c[j>>2]=b,j)|0);i=j}f=f+1|0}f=c[h+4>>2]|0;c[k+4>>2]=Si(f,(Lu(e|0)|0)+1|0)|0;Mu(c[k+4>>2]|0,e|0)|0;do{if((c[h+72>>2]|0)!=0){if((c[k+4>>2]|0)==0){break}if((c[k+8>>2]|0)==0){m=1}else{Ji(11584,19416,508);m=1}c[k+8>>2]=pd(c[h+72>>2]|0,c[k+4>>2]|0)|0;rd(c[k+8>>2]|0,k)}}while(0);i=g;return}function Nd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=+e;f=+f;var g=0,j=0,k=0.0,l=0,m=0;g=i;j=a;a=b;b=d;k=e;e=f;if(1<=(a|0)){if((a|0)>(c[j+48>>2]|0)){l=3}}else{l=3}if((l|0)==3){Gc[(Hi(19416,554)|0)&127](11344,(m=i,i=i+8|0,c[m>>2]=a,m)|0);i=m}l=c[(c[j+60>>2]|0)+(a<<2)>>2]|0;c[l+20>>2]=b;switch(b|0){case 5:{f=k;h[l+32>>3]=f;h[l+24>>3]=f;if((c[l+56>>2]|0)!=1){c[l+56>>2]=5}i=g;return};case 2:{h[l+24>>3]=k;h[l+32>>3]=0.0;if((c[l+56>>2]|0)!=1){c[l+56>>2]=2}i=g;return};case 3:{h[l+24>>3]=0.0;h[l+32>>3]=e;if((c[l+56>>2]|0)!=1){c[l+56>>2]=3}i=g;return};case 1:{h[l+32>>3]=0.0;h[l+24>>3]=0.0;if((c[l+56>>2]|0)!=1){c[l+56>>2]=4}i=g;return};case 4:{h[l+24>>3]=k;h[l+32>>3]=e;do{if((c[l+56>>2]|0)!=1){if((c[l+56>>2]|0)==2){break}if((c[l+56>>2]|0)==3){break}j=+U(+k)<=+U(+e);c[l+56>>2]=j?2:3}}while(0);i=g;return};default:{Gc[(Hi(19416,582)|0)&127](11056,(m=i,i=i+16|0,c[m>>2]=a,c[m+8>>2]=b,m)|0);i=m;i=g;return}}}function Od(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=+e;f=+f;var g=0,j=0,k=0.0,l=0,m=0;g=i;j=a;a=b;b=d;k=e;e=f;if(1<=(a|0)){if((a|0)>(c[j+52>>2]|0)){l=3}}else{l=3}if((l|0)==3){Gc[(Hi(19416,625)|0)&127](10488,(m=i,i=i+8|0,c[m>>2]=a,m)|0);i=m}l=c[(c[j+64>>2]|0)+(a<<2)>>2]|0;c[l+16>>2]=b;switch(b|0){case 5:{f=k;h[l+32>>3]=f;h[l+24>>3]=f;if((c[l+64>>2]|0)!=1){c[l+64>>2]=5}i=g;return};case 1:{h[l+32>>3]=0.0;h[l+24>>3]=0.0;if((c[l+64>>2]|0)!=1){c[l+64>>2]=4}i=g;return};case 3:{h[l+24>>3]=0.0;h[l+32>>3]=e;if((c[l+64>>2]|0)!=1){c[l+64>>2]=3}i=g;return};case 2:{h[l+24>>3]=k;h[l+32>>3]=0.0;if((c[l+64>>2]|0)!=1){c[l+64>>2]=2}i=g;return};case 4:{h[l+24>>3]=k;h[l+32>>3]=e;do{if((c[l+64>>2]|0)!=1){if((c[l+64>>2]|0)==2){break}if((c[l+64>>2]|0)==3){break}j=+U(+k)<=+U(+e);c[l+64>>2]=j?2:3}}while(0);i=g;return};default:{Gc[(Hi(19416,653)|0)&127](10112,(m=i,i=i+16|0,c[m>>2]=a,c[m+8>>2]=b,m)|0);i=m;i=g;return}}}function Pd(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0;e=i;f=a;a=b;g=d;b=c[f+8>>2]|0;do{if((b|0)!=0){if((c[b+204>>2]|0)==0){break}Gc[(Hi(19416,679)|0)&127](9472,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}}while(0);if(0<=(a|0)){if((a|0)>(c[f+52>>2]|0)){k=6}}else{k=6}if((k|0)==6){Gc[(Hi(19416,681)|0)&127](9168,(j=i,i=i+8|0,c[j>>2]=a,j)|0);i=j}if((a|0)==0){h[f+32>>3]=g;i=e;return}else{h[(c[(c[f+64>>2]|0)+(a<<2)>>2]|0)+40>>3]=g;i=e;return}}function Qd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;j=a;a=b;b=d;d=e;e=f;f=c[j+8>>2]|0;if(1<=(a|0)){if((a|0)>(c[j+48>>2]|0)){k=3}}else{k=3}if((k|0)==3){Gc[(Hi(19416,724)|0)&127](8792,(l=i,i=i+8|0,c[l>>2]=a,l)|0);i=l}m=c[(c[j+60>>2]|0)+(a<<2)>>2]|0;do{if((f|0)!=0){if((c[f+204>>2]|0)==0){break}if((c[f+100>>2]|0)!=0){n=1}else{Ji(19448,19416,728);n=1}if((c[m+12>>2]|0)==(c[(c[f+100>>2]|0)+8>>2]|0)){o=1}else{Ji(15128,19416,729);o=1}}}while(0);while(1){if((c[m+40>>2]|0)==0){break}p=c[m+40>>2]|0;c[m+40>>2]=c[p+20>>2];q=c[p+4>>2]|0;if((c[p+24>>2]|0)==0){c[q+48>>2]=c[p+28>>2]}else{c[(c[p+24>>2]|0)+28>>2]=c[p+28>>2]}if((c[p+28>>2]|0)!=0){c[(c[p+28>>2]|0)+24>>2]=c[p+24>>2]}Ti(c[j+4>>2]|0,p,32);o=j+56|0;c[o>>2]=(c[o>>2]|0)-1;if((c[q+64>>2]|0)==1){c[j+76>>2]=0}}if(0<=(b|0)){if((b|0)>(c[j+52>>2]|0)){k=24}}else{k=24}if((k|0)==24){Gc[(Hi(19416,756)|0)&127](8584,(l=i,i=i+16|0,c[l>>2]=a,c[l+8>>2]=b,l)|0);i=l}if((b|0)>(5e8-(c[j+56>>2]|0)|0)){Gc[(Hi(19416,759)|0)&127](8368,(l=i,i=i+16|0,c[l>>2]=a,c[l+8>>2]=b,l)|0);i=l}o=1;while(1){if((o|0)>(b|0)){break}f=c[d+(o<<2)>>2]|0;if(1<=(f|0)){if((f|0)>(c[j+52>>2]|0)){k=31}}else{k=31}if((k|0)==31){k=0;Gc[(Hi(19416,766)|0)&127](8088,(l=i,i=i+24|0,c[l>>2]=a,c[l+8>>2]=o,c[l+16>>2]=f,l)|0);i=l}q=c[(c[j+64>>2]|0)+(f<<2)>>2]|0;do{if((c[q+48>>2]|0)!=0){if((c[c[c[q+48>>2]>>2]>>2]|0)!=(a|0)){break}Gc[(Hi(19416,772)|0)&127](7848,(l=i,i=i+24|0,c[l>>2]=a,c[l+8>>2]=o,c[l+16>>2]=f,l)|0);i=l}}while(0);p=Si(c[j+4>>2]|0,32)|0;f=j+56|0;c[f>>2]=(c[f>>2]|0)+1;c[p>>2]=m;c[p+4>>2]=q;h[p+8>>3]=+h[e+(o<<3)>>3];c[p+16>>2]=0;c[p+20>>2]=c[m+40>>2];c[p+24>>2]=0;c[p+28>>2]=c[q+48>>2];if((c[p+20>>2]|0)!=0){c[(c[p+20>>2]|0)+16>>2]=p}if((c[p+28>>2]|0)!=0){c[(c[p+28>>2]|0)+24>>2]=p}f=p;c[q+48>>2]=f;c[m+40>>2]=f;do{if((c[q+64>>2]|0)==1){if(!(+h[p+8>>3]!=0.0)){break}c[j+76>>2]=0}}while(0);o=o+1|0}p=c[m+40>>2]|0;while(1){if((p|0)==0){break}o=c[p+20>>2]|0;if(+h[p+8>>3]==0.0){if((c[p+16>>2]|0)==0){c[m+40>>2]=o}else{c[(c[p+16>>2]|0)+20>>2]=o}if((o|0)!=0){c[o+16>>2]=c[p+16>>2]}if((c[p+24>>2]|0)==0){r=1}else{Ji(7704,19416,806);r=1}c[(c[p+4>>2]|0)+48>>2]=c[p+28>>2];if((c[p+28>>2]|0)!=0){c[(c[p+28>>2]|0)+24>>2]=0}Ti(c[j+4>>2]|0,p,32);q=j+56|0;c[q>>2]=(c[q>>2]|0)-1}p=o}i=g;return}function Rd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;j=a;a=b;b=d;d=e;e=f;f=c[j+8>>2]|0;do{if((f|0)!=0){if((c[f+204>>2]|0)==0){break}Gc[(Hi(19416,849)|0)&127](7304,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k}}while(0);if(1<=(a|0)){if((a|0)>(c[j+52>>2]|0)){l=6}}else{l=6}if((l|0)==6){Gc[(Hi(19416,852)|0)&127](7120,(k=i,i=i+8|0,c[k>>2]=a,k)|0);i=k}f=c[(c[j+64>>2]|0)+(a<<2)>>2]|0;while(1){if((c[f+48>>2]|0)==0){break}m=c[f+48>>2]|0;c[f+48>>2]=c[m+28>>2];n=c[m>>2]|0;if((c[m+16>>2]|0)==0){c[n+40>>2]=c[m+20>>2]}else{c[(c[m+16>>2]|0)+20>>2]=c[m+20>>2]}if((c[m+20>>2]|0)!=0){c[(c[m+20>>2]|0)+16>>2]=c[m+16>>2]}Ti(c[j+4>>2]|0,m,32);o=j+56|0;c[o>>2]=(c[o>>2]|0)-1}if(0<=(b|0)){if((b|0)>(c[j+48>>2]|0)){l=18}}else{l=18}if((l|0)==18){Gc[(Hi(19416,877)|0)&127](6744,(k=i,i=i+16|0,c[k>>2]=a,c[k+8>>2]=b,k)|0);i=k}if((b|0)>(5e8-(c[j+56>>2]|0)|0)){Gc[(Hi(19416,880)|0)&127](6568,(k=i,i=i+16|0,c[k>>2]=a,c[k+8>>2]=b,k)|0);i=k}o=1;while(1){if((o|0)>(b|0)){break}p=c[d+(o<<2)>>2]|0;if(1<=(p|0)){if((p|0)>(c[j+48>>2]|0)){l=25}}else{l=25}if((l|0)==25){l=0;Gc[(Hi(19416,887)|0)&127](6488,(k=i,i=i+24|0,c[k>>2]=a,c[k+8>>2]=o,c[k+16>>2]=p,k)|0);i=k}n=c[(c[j+60>>2]|0)+(p<<2)>>2]|0;do{if((c[n+40>>2]|0)!=0){if((c[c[(c[n+40>>2]|0)+4>>2]>>2]|0)!=(a|0)){break}Gc[(Hi(19416,893)|0)&127](6384,(k=i,i=i+24|0,c[k>>2]=a,c[k+8>>2]=o,c[k+16>>2]=p,k)|0);i=k}}while(0);m=Si(c[j+4>>2]|0,32)|0;p=j+56|0;c[p>>2]=(c[p>>2]|0)+1;c[m>>2]=n;c[m+4>>2]=f;h[m+8>>3]=+h[e+(o<<3)>>3];c[m+16>>2]=0;c[m+20>>2]=c[n+40>>2];c[m+24>>2]=0;c[m+28>>2]=c[f+48>>2];if((c[m+20>>2]|0)!=0){c[(c[m+20>>2]|0)+16>>2]=m}if((c[m+28>>2]|0)!=0){c[(c[m+28>>2]|0)+24>>2]=m}p=m;c[f+48>>2]=p;c[n+40>>2]=p;o=o+1|0}m=c[f+48>>2]|0;while(1){if((m|0)==0){break}o=c[m+28>>2]|0;if(+h[m+8>>3]==0.0){if((c[m+16>>2]|0)==0){q=1}else{Ji(6344,19416,915);q=1}c[(c[m>>2]|0)+40>>2]=c[m+20>>2];if((c[m+20>>2]|0)!=0){c[(c[m+20>>2]|0)+16>>2]=0}if((c[m+24>>2]|0)==0){c[f+48>>2]=o}else{c[(c[m+24>>2]|0)+28>>2]=o}if((o|0)!=0){c[o+24>>2]=c[m+24>>2]}Ti(c[j+4>>2]|0,m,32);n=j+56|0;c[n>>2]=(c[n>>2]|0)-1}m=o}if((c[f+64>>2]|0)!=1){i=g;return}c[j+76>>2]=0;i=g;return}function Sd(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;if((d|0)==0){e=3}else{if((c[d>>2]|0)!=-673589566){e=3}}if((e|0)==3){Gc[(Hi(19416,1203)|0)&127](4776,(e=i,i=i+8|0,c[e>>2]=d,e)|0);i=e}e=c[d+48>>2]|0;while(1){if((e|0)<1){break}c[(c[(c[d+60>>2]|0)+(e<<2)>>2]|0)+40>>2]=0;e=e-1|0}a=c[d+52>>2]|0;while(1){if((a|0)<1){break}f=c[(c[(c[d+64>>2]|0)+(a<<2)>>2]|0)+48>>2]|0;while(1){if((f|0)==0){break}e=c[c[f>>2]>>2]|0;c[f+16>>2]=0;c[f+20>>2]=c[(c[(c[d+60>>2]|0)+(e<<2)>>2]|0)+40>>2];if((c[f+20>>2]|0)!=0){c[(c[f+20>>2]|0)+16>>2]=f}c[(c[(c[d+60>>2]|0)+(e<<2)>>2]|0)+40>>2]=f;f=c[f+28>>2]|0}a=a-1|0}a=c[d+52>>2]|0;while(1){if((a|0)<1){break}c[(c[(c[d+64>>2]|0)+(a<<2)>>2]|0)+48>>2]=0;a=a-1|0}e=c[d+48>>2]|0;while(1){if((e|0)<1){break}f=c[(c[(c[d+60>>2]|0)+(e<<2)>>2]|0)+40>>2]|0;while(1){if((f|0)==0){break}a=c[c[f+4>>2]>>2]|0;c[f+24>>2]=0;c[f+28>>2]=c[(c[(c[d+64>>2]|0)+(a<<2)>>2]|0)+48>>2];if((c[f+28>>2]|0)!=0){c[(c[f+28>>2]|0)+24>>2]=f}c[(c[(c[d+64>>2]|0)+(a<<2)>>2]|0)+48>>2]=f;f=c[f+20>>2]|0}e=e-1|0}i=b;return}function Td(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;a=c[d+8>>2]|0;do{if((a|0)!=0){if((c[a+204>>2]|0)==0){break}Gc[(Hi(19416,1520)|0)&127](3328,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e}}while(0);Ud(d);Fd(d);i=b;return}function Ud(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;c[d>>2]=1061109567;Ui(c[d+4>>2]|0);if((c[d+12>>2]|0)!=0){Bi(c[d+12>>2]|0)}if((c[d+8>>2]|0)==0){e=1}else{Ji(3160,19416,1548);e=1}Bi(c[d+60>>2]|0);Bi(c[d+64>>2]|0);if((c[d+68>>2]|0)!=0){wd(c[d+68>>2]|0)}if((c[d+72>>2]|0)!=0){wd(c[d+72>>2]|0)}Bi(c[d+80>>2]|0);if((c[d+84>>2]|0)!=0){Bi(c[d+84>>2]|0)}if((c[d+88>>2]|0)==0){i=b;return}Dd(c[d+88>>2]|0);i=b;return}function Vd(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;a=c[d+8>>2]|0;do{if((a|0)!=0){if((c[a+204>>2]|0)==0){break}Gc[(Hi(19416,1565)|0)&127](3264,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e}}while(0);Ud(d);Bi(d);i=b;return}function Wd(a){a=a|0;i=i;return c[a+48>>2]|0}function Xd(a){a=a|0;i=i;return c[a+52>>2]|0}function Yd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if(1<=(a|0)){if((a|0)>(c[e+52>>2]|0)){f=3}}else{f=3}if((f|0)==3){Gc[(Hi(3024,173)|0)&127](11656,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}i=d;return c[(c[(c[e+64>>2]|0)+(a<<2)>>2]|0)+4>>2]|0}function Zd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0,j=0.0,k=0;d=i;e=a;a=b;if(1<=(a|0)){if((a|0)>(c[e+52>>2]|0)){f=3}}else{f=3}if((f|0)==3){Gc[(Hi(3024,317)|0)&127](2512,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}switch(c[(c[(c[e+64>>2]|0)+(a<<2)>>2]|0)+16>>2]|0){case 1:case 3:{g=-1.7976931348623157e+308;j=g;i=d;return+j};case 2:case 4:case 5:{g=+h[(c[(c[e+64>>2]|0)+(a<<2)>>2]|0)+24>>3];j=g;i=d;return+j};default:{if((e|0)!=(e|0)){k=1}else{Ji(5280,3024,328);k=1}j=g;i=d;return+j}}return 0.0}function _d(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0,j=0.0,k=0;d=i;e=a;a=b;if(1<=(a|0)){if((a|0)>(c[e+52>>2]|0)){f=3}}else{f=3}if((f|0)==3){Gc[(Hi(3024,351)|0)&127](1712,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}switch(c[(c[(c[e+64>>2]|0)+(a<<2)>>2]|0)+16>>2]|0){case 1:case 2:{g=1.7976931348623157e+308;j=g;i=d;return+j};case 3:case 4:case 5:{g=+h[(c[(c[e+64>>2]|0)+(a<<2)>>2]|0)+32>>3];j=g;i=d;return+j};default:{if((e|0)!=(e|0)){k=1}else{Ji(5280,3024,362);k=1}j=g;i=d;return+j}}return 0.0}function $d(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;if((c[d+68>>2]|0)==0){c[d+68>>2]=nd(90,0)|0;a=1;while(1){if((a|0)>(c[d+48>>2]|0)){break}e=c[(c[d+60>>2]|0)+(a<<2)>>2]|0;if((c[e+8>>2]|0)==0){f=1}else{Ji(21832,20912,56);f=1}if((c[e+4>>2]|0)!=0){c[e+8>>2]=pd(c[d+68>>2]|0,c[e+4>>2]|0)|0;rd(c[e+8>>2]|0,e)}a=a+1|0}}if((c[d+72>>2]|0)!=0){i=b;return}c[d+72>>2]=nd(90,0)|0;a=1;while(1){if((a|0)>(c[d+52>>2]|0)){break}f=c[(c[d+64>>2]|0)+(a<<2)>>2]|0;if((c[f+8>>2]|0)==0){g=1}else{Ji(14616,20912,68);g=1}if((c[f+4>>2]|0)!=0){c[f+8>>2]=pd(c[d+72>>2]|0,c[f+4>>2]|0)|0;rd(c[f+8>>2]|0,f)}a=a+1|0}i=b;return}function ae(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;b=d;d=0;if((c[f+72>>2]|0)==0){Gc[(Hi(20912,125)|0)&127](7656,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}if((b|0)==0){h=d;i=e;return h|0}if((a[b|0]|0)==0){h=d;i=e;return h|0}if((Lu(b|0)|0)>>>0>255>>>0){h=d;i=e;return h|0}g=sd(c[f+72>>2]|0,b)|0;if((g|0)!=0){d=c[(td(g)|0)>>2]|0}h=d;i=e;return h|0}function be(a){a=a|0;var b=0,d=0;b=i;d=a;if((c[d+68>>2]|0)!=0){a=1;while(1){if((a|0)>(c[d+48>>2]|0)){break}c[(c[(c[d+60>>2]|0)+(a<<2)>>2]|0)+8>>2]=0;a=a+1|0}wd(c[d+68>>2]|0);c[d+68>>2]=0}if((c[d+72>>2]|0)==0){i=b;return}a=1;while(1){if((a|0)>(c[d+52>>2]|0)){break}c[(c[(c[d+64>>2]|0)+(a<<2)>>2]|0)+8>>2]=0;a=a+1|0}wd(c[d+72>>2]|0);c[d+72>>2]=0;i=b;return}function ce(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0;e=i;f=a;a=b;g=d;if(1<=(a|0)){if((a|0)>(c[f+48>>2]|0)){j=3}}else{j=3}if((j|0)==3){Gc[(Hi(21224,44)|0)&127](20832,(k=i,i=i+8|0,c[k>>2]=a,k)|0);i=k}if(g<=0.0){Gc[(Hi(21224,46)|0)&127](14560,(k=i,i=i+16|0,c[k>>2]=a,h[k+8>>3]=g,k)|0);i=k}do{if((c[f+76>>2]|0)!=0){if(!(+h[(c[(c[f+60>>2]|0)+(a<<2)>>2]|0)+48>>3]!=g)){break}k=c[(c[(c[f+60>>2]|0)+(a<<2)>>2]|0)+40>>2]|0;while(1){if((k|0)==0){break}if((c[(c[k+4>>2]|0)+64>>2]|0)==1){j=11;break}k=c[k+20>>2]|0}if((j|0)==11){c[f+76>>2]=0}}}while(0);h[(c[(c[f+60>>2]|0)+(a<<2)>>2]|0)+48>>3]=g;i=e;return}function de(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0;e=i;f=a;a=b;g=d;if(1<=(a|0)){if((a|0)>(c[f+52>>2]|0)){j=3}}else{j=3}if((j|0)==3){Gc[(Hi(21224,78)|0)&127](10984,(k=i,i=i+8|0,c[k>>2]=a,k)|0);i=k}if(g<=0.0){Gc[(Hi(21224,80)|0)&127](7600,(k=i,i=i+16|0,c[k>>2]=a,h[k+8>>3]=g,k)|0);i=k}do{if((c[f+76>>2]|0)!=0){if(!(+h[(c[(c[f+64>>2]|0)+(a<<2)>>2]|0)+56>>3]!=g)){break}if((c[(c[(c[f+64>>2]|0)+(a<<2)>>2]|0)+64>>2]|0)!=1){break}c[f+76>>2]=0}}while(0);h[(c[(c[f+64>>2]|0)+(a<<2)>>2]|0)+56>>3]=g;i=e;return}function ee(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if(1<=(a|0)){if((a|0)>(c[e+48>>2]|0)){f=3}}else{f=3}if((f|0)==3){Gc[(Hi(21224,107)|0)&127](6216,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}i=d;return+(+h[(c[(c[e+60>>2]|0)+(a<<2)>>2]|0)+48>>3])}function fe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if(1<=(a|0)){if((a|0)>(c[e+52>>2]|0)){f=3}}else{f=3}if((f|0)==3){Gc[(Hi(21224,127)|0)&127](5088,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}i=d;return+(+h[(c[(c[e+64>>2]|0)+(a<<2)>>2]|0)+56>>3])}function ge(a){a=a|0;var b=0,c=0,d=0,e=0;b=i;c=a;a=Wd(c)|0;d=Xd(c)|0;e=1;while(1){if((e|0)>(a|0)){break}ce(c,e,1.0);e=e+1|0}e=1;while(1){if((e|0)>(d|0)){break}de(c,e,1.0);e=e+1|0}i=b;return}function he(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=a;a=b;b=d;if(1<=(a|0)){if((a|0)>(c[f+48>>2]|0)){g=3}}else{g=3}if((g|0)==3){Gc[(Hi(20544,56)|0)&127](20736,(h=i,i=i+8|0,c[h>>2]=a,h)|0);i=h}do{if((b|0)!=1){if((b|0)==2){break}if((b|0)==3){break}if((b|0)==4){break}if((b|0)==5){break}Gc[(Hi(20544,60)|0)&127](14504,(h=i,i=i+16|0,c[h>>2]=a,c[h+8>>2]=b,h)|0);i=h}}while(0);h=c[(c[f+60>>2]|0)+(a<<2)>>2]|0;if((b|0)!=1){switch(c[h+20>>2]|0){case 5:{b=5;break};case 4:{if((b|0)!=3){b=2}break};case 1:{b=4;break};case 2:{b=2;break};case 3:{b=3;break};default:{if((h|0)!=(h|0)){j=1}else{Ji(10968,20544,70);j=1}}}}if((c[h+56>>2]|0)==1){if((b|0)==1){g=25}}else{g=25}do{if((g|0)==25){if((c[h+56>>2]|0)==1){k=b;l=h;m=l+56|0;c[m>>2]=k;i=e;return}if((b|0)==1){break}k=b;l=h;m=l+56|0;c[m>>2]=k;i=e;return}}while(0);c[f+76>>2]=0;k=b;l=h;m=l+56|0;c[m>>2]=k;i=e;return}function ie(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=a;a=b;b=d;if(1<=(a|0)){if((a|0)>(c[f+52>>2]|0)){g=3}}else{g=3}if((g|0)==3){Gc[(Hi(20544,110)|0)&127](7544,(h=i,i=i+8|0,c[h>>2]=a,h)|0);i=h}do{if((b|0)!=1){if((b|0)==2){break}if((b|0)==3){break}if((b|0)==4){break}if((b|0)==5){break}Gc[(Hi(20544,114)|0)&127](6160,(h=i,i=i+16|0,c[h>>2]=a,c[h+8>>2]=b,h)|0);i=h}}while(0);h=c[(c[f+64>>2]|0)+(a<<2)>>2]|0;if((b|0)!=1){switch(c[h+16>>2]|0){case 2:{b=2;break};case 3:{b=3;break};case 4:{if((b|0)!=3){b=2}break};case 1:{b=4;break};case 5:{b=5;break};default:{if((h|0)!=(h|0)){j=1}else{Ji(5072,20544,124);j=1}}}}if((c[h+64>>2]|0)==1){if((b|0)==1){g=25}}else{g=25}do{if((g|0)==25){if((c[h+64>>2]|0)==1){k=b;l=h;m=l+64|0;c[m>>2]=k;i=e;return}if((b|0)==1){break}k=b;l=h;m=l+64|0;c[m>>2]=k;i=e;return}}while(0);c[f+76>>2]=0;k=b;l=h;m=l+64|0;c[m>>2]=k;i=e;return}function je(a){a=a|0;var b=0,d=0,e=0,f=0.0,g=0;b=i;d=a;a=1;while(1){if((a|0)>(c[d+48>>2]|0)){break}he(d,a,1);a=a+1|0}a=1;while(1){if((a|0)>(c[d+52>>2]|0)){break}e=c[(c[d+64>>2]|0)+(a<<2)>>2]|0;do{if((c[e+16>>2]|0)==4){f=+U(+(+h[e+24>>3]));if(!(f>+U(+(+h[e+32>>3])))){g=10;break}ie(d,a,3)}else{g=10}}while(0);if((g|0)==10){g=0;ie(d,a,2)}a=a+1|0}i=b;return}function ke(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0,p=0;d=i;i=i+368|0;e=d|0;f=a;a=b;if((f|0)==0){g=3}else{if((c[f>>2]|0)!=-673589566){g=3}}if((g|0)==3){Gc[(Hi(19728,368)|0)&127](20496,(j=i,i=i+8|0,c[j>>2]=f,j)|0);i=j}do{if((c[f+8>>2]|0)!=0){if((c[(c[f+8>>2]|0)+204>>2]|0)==0){break}Gc[(Hi(19728,370)|0)&127](14448,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}}while(0);if((a|0)==0){a=e;le(a)}do{if((c[a>>2]|0)!=0){if((c[a>>2]|0)==1){break}if((c[a>>2]|0)==2){break}if((c[a>>2]|0)==3){break}if((c[a>>2]|0)==4){break}e=Hi(19728,379)|0;Gc[e&127](10880,(j=i,i=i+8|0,c[j>>2]=c[a>>2],j)|0);i=j}}while(0);do{if((c[a+4>>2]|0)!=1){if((c[a+4>>2]|0)==2){break}if((c[a+4>>2]|0)==3){break}e=Hi(19728,384)|0;Gc[e&127](7456,(j=i,i=i+8|0,c[j>>2]=c[a+4>>2],j)|0);i=j}}while(0);do{if((c[a+8>>2]|0)!=17){if((c[a+8>>2]|0)==34){break}e=Hi(19728,388)|0;Gc[e&127](6112,(j=i,i=i+8|0,c[j>>2]=c[a+8>>2],j)|0);i=j}}while(0);do{if((c[a+12>>2]|0)!=17){if((c[a+12>>2]|0)==34){break}e=Hi(19728,392)|0;Gc[e&127](5024,(j=i,i=i+8|0,c[j>>2]=c[a+12>>2],j)|0);i=j}}while(0);if(0.0<+h[a+16>>3]){if(!(+h[a+16>>3]<1.0)){g=27}}else{g=27}if((g|0)==27){e=Hi(19728,395)|0;Gc[e&127](4064,(j=i,i=i+8|0,h[j>>3]=+h[a+16>>3],j)|0);i=j}if(0.0<+h[a+24>>3]){if(!(+h[a+24>>3]<1.0)){g=30}}else{g=30}if((g|0)==30){e=Hi(19728,398)|0;Gc[e&127](3216,(j=i,i=i+8|0,h[j>>3]=+h[a+24>>3],j)|0);i=j}if(0.0<+h[a+32>>3]){if(!(+h[a+32>>3]<1.0)){g=33}}else{g=33}if((g|0)==33){e=Hi(19728,401)|0;Gc[e&127](2424,(j=i,i=i+8|0,h[j>>3]=+h[a+32>>3],j)|0);i=j}if((c[a+56>>2]|0)<0){e=Hi(19728,404)|0;Gc[e&127](21768,(j=i,i=i+8|0,c[j>>2]=c[a+56>>2],j)|0);i=j}if((c[a+60>>2]|0)<0){e=Hi(19728,407)|0;Gc[e&127](20688,(j=i,i=i+8|0,c[j>>2]=c[a+60>>2],j)|0);i=j}if((c[a+64>>2]|0)<1){e=Hi(19728,410)|0;Gc[e&127](19560,(j=i,i=i+8|0,c[j>>2]=c[a+64>>2],j)|0);i=j}if((c[a+68>>2]|0)<0){e=Hi(19728,413)|0;Gc[e&127](18384,(j=i,i=i+8|0,c[j>>2]=c[a+68>>2],j)|0);i=j}do{if((c[a+72>>2]|0)!=1){if((c[a+72>>2]|0)==0){break}e=Hi(19728,416)|0;Gc[e&127](16952,(j=i,i=i+8|0,c[j>>2]=c[a+72>>2],j)|0);i=j}}while(0);c[f+96>>2]=1;c[f+92>>2]=1;h[f+104>>3]=0.0;c[f+116>>2]=0;e=1;while(1){if((e|0)>(c[f+48>>2]|0)){break}k=c[(c[f+60>>2]|0)+(e<<2)>>2]|0;if((c[k+20>>2]|0)==4){if(+h[k+24>>3]>=+h[k+32>>3]){g=49;break}}e=e+1|0}if((g|0)==49){if((c[a>>2]|0)>=1){l=+h[k+24>>3];m=+h[k+32>>3];Li(16496,(j=i,i=i+24|0,c[j>>2]=e,h[j+8>>3]=l,h[j+16>>3]=m,j)|0);i=j}n=4;o=n;i=d;return o|0}e=1;while(1){if((e|0)>(c[f+52>>2]|0)){break}p=c[(c[f+64>>2]|0)+(e<<2)>>2]|0;if((c[p+16>>2]|0)==4){if(+h[p+24>>3]>=+h[p+32>>3]){g=58;break}}e=e+1|0}if((g|0)==58){if((c[a>>2]|0)>=1){m=+h[p+24>>3];l=+h[p+32>>3];Li(16144,(j=i,i=i+24|0,c[j>>2]=e,h[j+8>>3]=m,h[j+16>>3]=l,j)|0);i=j}n=4;o=n;i=d;return o|0}if((c[a>>2]|0)>=3){e=Fi()|0;Li(15760,(j=i,i=i+8|0,c[j>>2]=e,j)|0);i=j;e=(c[f+48>>2]|0)==1?30896:14888;p=c[f+52>>2]|0;g=(c[f+52>>2]|0)==1?30896:14888;k=c[f+56>>2]|0;b=(c[f+56>>2]|0)==1?30896:14888;Li(15440,(j=i,i=i+48|0,c[j>>2]=c[f+48>>2],c[j+8>>2]=e,c[j+16>>2]=p,c[j+24>>2]=g,c[j+32>>2]=k,c[j+40>>2]=b,j)|0);i=j}if((c[f+56>>2]|0)==0){me(f,a);n=0}else{if((c[a+72>>2]|0)!=0){n=oe(f,a)|0}else{n=ne(f,a)|0}}o=n;i=d;return o|0}function le(a){a=a|0;var b=0;b=a;c[b>>2]=3;c[b+4>>2]=1;c[b+8>>2]=34;c[b+12>>2]=34;h[b+16>>3]=1.0e-7;h[b+24>>3]=1.0e-7;h[b+32>>3]=1.0e-10;h[b+40>>3]=-1.7976931348623157e+308;h[b+48>>3]=1.7976931348623157e+308;c[b+56>>2]=2147483647;c[b+60>>2]=2147483647;c[b+64>>2]=500;c[b+68>>2]=0;c[b+72>>2]=0;i=i;return}function me(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0.0,j=0,k=0,l=0.0,m=0,n=0.0,o=0.0,p=0;d=i;e=a;a=b;c[e+76>>2]=0;c[e+96>>2]=2;c[e+92>>2]=2;h[e+104>>3]=+h[e+32>>3];c[e+116>>2]=0;f=0.0;g=0.0;b=1;while(1){if((b|0)>(c[e+48>>2]|0)){break}j=c[(c[e+60>>2]|0)+(b<<2)>>2]|0;c[j+56>>2]=1;h[j+72>>3]=0.0;h[j+64>>3]=0.0;do{if((c[j+20>>2]|0)==2){k=6}else{if((c[j+20>>2]|0)==4){k=6;break}if((c[j+20>>2]|0)==5){k=6}}}while(0);if((k|0)==6){k=0;if(+h[j+24>>3]>+h[a+16>>3]){c[e+92>>2]=4;do{if((c[e+116>>2]|0)==0){if((c[a+4>>2]|0)==1){break}c[e+116>>2]=b}}while(0)}if(g<+h[j+24>>3]){g=+h[j+24>>3]}}do{if((c[j+20>>2]|0)==3){k=17}else{if((c[j+20>>2]|0)==4){k=17;break}if((c[j+20>>2]|0)==5){k=17}}}while(0);if((k|0)==17){k=0;if(+h[j+32>>3]<-0.0- +h[a+16>>3]){c[e+92>>2]=4;do{if((c[e+116>>2]|0)==0){if((c[a+4>>2]|0)==1){break}c[e+116>>2]=b}}while(0)}if(g<-0.0- +h[j+32>>3]){g=-0.0- +h[j+32>>3]}}b=b+1|0}l=1.0;b=1;while(1){if((b|0)>(c[e+52>>2]|0)){break}m=c[(c[e+64>>2]|0)+(b<<2)>>2]|0;if(l<+U(+(+h[m+40>>3]))){l=+U(+(+h[m+40>>3]))}b=b+1|0}l=((c[e+24>>2]|0)==1?1.0:-1.0)/l;b=1;while(1){if((b|0)>(c[e+52>>2]|0)){break}m=c[(c[e+64>>2]|0)+(b<<2)>>2]|0;if((c[m+16>>2]|0)==1){c[m+64>>2]=4;h[m+72>>3]=0.0}else{a:do{if((c[m+16>>2]|0)==2){k=39}else{do{if((c[m+16>>2]|0)==3){k=42}else{if((c[m+16>>2]|0)!=4){if((c[m+16>>2]|0)==5){c[m+64>>2]=5;h[m+72>>3]=+h[m+24>>3]}break}if(l*+h[m+40>>3]>0.0){k=39;break a}if(l*+h[m+40>>3]<0.0){k=42;break}n=+U(+(+h[m+24>>3]));if(n<=+U(+(+h[m+32>>3]))){k=39;break a}else{k=42;break}}}while(0);if((k|0)==42){k=0;c[m+64>>2]=3;h[m+72>>3]=+h[m+32>>3]}}}while(0);if((k|0)==39){k=0;c[m+64>>2]=2;h[m+72>>3]=+h[m+24>>3]}}h[m+80>>3]=+h[m+40>>3];j=e+104|0;h[j>>3]=+h[j>>3]+ +h[m+40>>3]*+h[m+72>>3];if((c[m+16>>2]|0)==1){k=59}else{if((c[m+16>>2]|0)==2){k=59}}if((k|0)==59){k=0;if(l*+h[m+80>>3]<-0.0- +h[a+24>>3]){c[e+96>>2]=4;do{if((c[e+116>>2]|0)==0){if((c[a+4>>2]|0)!=1){break}c[e+116>>2]=(c[e+48>>2]|0)+b}}while(0)}if(f<(-0.0-l)*+h[m+80>>3]){f=(-0.0-l)*+h[m+80>>3]}}if((c[m+16>>2]|0)==1){k=69}else{if((c[m+16>>2]|0)==3){k=69}}if((k|0)==69){k=0;if(l*+h[m+80>>3]>+h[a+24>>3]){c[e+96>>2]=4;do{if((c[e+116>>2]|0)==0){if((c[a+4>>2]|0)!=1){break}c[e+116>>2]=(c[e+48>>2]|0)+b}}while(0)}if(f<l*+h[m+80>>3]){f=l*+h[m+80>>3]}}b=b+1|0}do{if((c[a>>2]|0)>=2){if((c[a+68>>2]|0)!=0){break}l=+h[e+104>>3];if((c[a+4>>2]|0)==1){o=g}else{o=f}Li(9992,(p=i,i=i+24|0,c[p>>2]=c[e+112>>2],h[p+8>>3]=l,h[p+16>>3]=o,p)|0);i=p}}while(0);if((c[a>>2]|0)<3){i=d;return}if((c[a+68>>2]|0)!=0){i=d;return}do{if((c[e+92>>2]|0)==2){if((c[e+96>>2]|0)!=2){k=90;break}Li(7824,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p}else{k=90}}while(0);if((k|0)==90){if((c[e+92>>2]|0)==4){Li(7504,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p}else{if((c[a+4>>2]|0)==1){Li(7256,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p}else{Li(10928,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p}}}i=d;return}function ne(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;a=b;do{if((ve(e)|0)==0){f=we(e)|0;if((f|0)!=0){if((f|0)==1){if((c[a>>2]|0)>=1){Li(8848,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}}else{if((f|0)==2){if((c[a>>2]|0)>=1){Li(8544,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}}else{if((f|0)==3){if((c[a>>2]|0)>=1){Li(8288,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}}else{if((f|0)!=(f|0)){h=1}else{Ji(10440,19728,239);h=1}}}}}if((f|0)==0){break}j=f;i=d;return j|0}}while(0);if((c[a+4>>2]|0)==1){f=bg(e,a)|0}else{if((c[a+4>>2]|0)==2){f=Vg(e,a)|0;do{if((f|0)==5){if((c[e+76>>2]|0)==0){break}f=bg(e,a)|0}}while(0)}else{if((c[a+4>>2]|0)==3){f=Vg(e,a)|0}else{if((a|0)!=(a|0)){k=1}else{Ji(8064,19728,252);k=1}}}}j=f;i=d;return j|0}function oe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=i;i=i+376|0;e=d|0;f=a;a=b;b=0;if((c[a>>2]|0)>=3){Li(11608,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}j=Oe()|0;cf(j,f,0,1,0);k=Pf(j,a)|0;if((k|0)!=0){if((k|0)==10){if((c[a>>2]|0)>=3){Li(11296,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}}else{if((k|0)==11){if((c[a>>2]|0)>=3){Li(10928,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}}else{if((k|0)!=(k|0)){l=1}else{Ji(10440,19728,281);l=1}}}}a:do{if((k|0)==0){b=Ed()|0;df(j,b);do{if((c[b+48>>2]|0)==0){if((c[b+52>>2]|0)!=0){m=28;break}c[b+96>>2]=2;c[b+92>>2]=2;h[b+104>>3]=+h[b+32>>3];do{if((c[a>>2]|0)>=2){if((c[a+68>>2]|0)!=0){break}n=+h[b+104>>3];Li(9992,(g=i,i=i+24|0,c[g>>2]=c[f+112>>2],h[g+8>>3]=n,h[g+16>>3]=0.0,g)|0);i=g}}while(0);if((c[a>>2]|0)>=3){Li(9392,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}}else{m=28}}while(0);b:do{if((m|0)==28){if((c[a>>2]|0)>=3){l=(c[b+48>>2]|0)==1?30896:14888;o=c[b+52>>2]|0;p=(c[b+52>>2]|0)==1?30896:14888;q=c[b+56>>2]|0;r=(c[b+56>>2]|0)==1?30896:14888;Li(15440,(g=i,i=i+48|0,c[g>>2]=c[b+48>>2],c[g+8>>2]=l,c[g+16>>2]=o,c[g+24>>2]=p,c[g+32>>2]=q,c[g+40>>2]=r,g)|0);i=g}ze(f,e);Ae(b,e);r=Ei()|0;q=c[r+16>>2]|0;do{if((q|0)!=0){if((c[a>>2]|0)<3){m=32;break}c[r+16>>2]=1}else{m=32}}while(0);if((m|0)==32){c[r+16>>2]=0}Qf(b,128);c[r+16>>2]=q;p=Ei()|0;o=c[p+16>>2]|0;do{if((o|0)!=0){if((c[a>>2]|0)<3){m=36;break}c[p+16>>2]=1}else{m=36}}while(0);if((m|0)==36){c[p+16>>2]=0}Be(b,0);c[p+16>>2]=o;c[b+112>>2]=c[f+112>>2];k=ne(b,a)|0;c[f+112>>2]=c[b+112>>2];do{if((k|0)==0){if((c[b+92>>2]|0)!=2){break}if((c[b+96>>2]|0)!=2){break}break b}}while(0);if((c[a>>2]|0)>=1){Li(9096,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g}if((k|0)==0){if((c[b+92>>2]|0)==4){k=10}else{if((c[b+96>>2]|0)==4){k=11}else{if((b|0)!=(b|0)){s=1}else{Ji(14488,19728,343);s=1}}}}break a}}while(0);ef(j,b);Vd(b);b=0;ff(j,f);k=0}}while(0);if((b|0)==0){t=j;gf(t);u=k;i=d;return u|0}Vd(b);t=j;gf(t);u=k;i=d;return u|0}function pe(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=i;c=a;a=qe(c)|0;d=a;if((d|0)==2){e=re(c)|0;if((e|0)==2){a=5}else if((e|0)==4){a=6}else if((e|0)==1|(e|0)==3){a=a}else{if((c|0)!=(c|0)){f=1}else{Ji(14488,19728,533);f=1}}g=a;i=b;return g|0}else if((d|0)==1|(d|0)==3|(d|0)==4){a=a;g=a;i=b;return g|0}else{if((c|0)!=(c|0)){h=1}else{Ji(14488,19728,542);h=1}g=a;i=b;return g|0}return 0}function qe(a){a=a|0;i=i;return c[a+92>>2]|0}function re(a){a=a|0;i=i;return c[a+96>>2]|0}function se(a){a=a|0;i=i;return+(+h[a+104>>3])}function te(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if(1<=(a|0)){if((a|0)>(c[e+52>>2]|0)){f=3}}else{f=3}if((f|0)==3){Gc[(Hi(19728,739)|0)&127](12360,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}i=d;return+(+h[(c[(c[e+64>>2]|0)+(a<<2)>>2]|0)+72>>3])}function ue(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0;e=i;f=a;a=b;b=d;if(1<=(a|0)){if((a|0)>(c[f+52>>2]|0)){g=3}}else{g=3}if((g|0)==3){Gc[(Hi(14640,51)|0)&127](19608,(j=i,i=i+8|0,c[j>>2]=a,j)|0);i=j}d=c[(c[f+64>>2]|0)+(a<<2)>>2]|0;k=b;if((k|0)==1){c[d+12>>2]=1;i=e;return}else if((k|0)==2){c[d+12>>2]=2;i=e;return}else if((k|0)==3){c[d+12>>2]=2;do{if((c[d+16>>2]|0)==4){if(!(+h[d+24>>3]==0.0)){g=10;break}if(!(+h[d+32>>3]==1.0)){g=10}}else{g=10}}while(0);if((g|0)==10){Od(f,a,4,0.0,1.0)}i=e;return}else{Gc[(Hi(14640,67)|0)&127](13912,(j=i,i=i+16|0,c[j>>2]=a,c[j+8>>2]=b,j)|0);i=j;i=e;return}}function ve(a){a=a|0;var b=0,d=0;b=a;if((c[b+48>>2]|0)==0){d=1}else{d=(c[b+76>>2]|0)!=0}i=i;return d&1|0}function we(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;d=a;a=c[d+48>>2]|0;e=c[d+52>>2]|0;f=c[d+60>>2]|0;g=c[d+64>>2]|0;h=c[d+80>>2]|0;c[d+76>>2]=0;j=0;k=1;while(1){if((k|0)>(a+e|0)){break}if((k|0)<=(a|0)){l=c[(c[f+(k<<2)>>2]|0)+56>>2]|0;c[(c[f+(k<<2)>>2]|0)+60>>2]=0}else{l=c[(c[g+(k-a<<2)>>2]|0)+64>>2]|0;c[(c[g+(k-a<<2)>>2]|0)+68>>2]=0}if((l|0)==1){j=j+1|0;if((j|0)>(a|0)){m=8;break}c[h+(j<<2)>>2]=k;if((k|0)<=(a|0)){c[(c[f+(k<<2)>>2]|0)+60>>2]=j}else{c[(c[g+(k-a<<2)>>2]|0)+68>>2]=j}}k=k+1|0}if((m|0)==8){n=1;o=n;i=b;return o|0}if((j|0)<(a|0)){n=1;o=n;i=b;return o|0}if((a|0)>0){if((c[d+88>>2]|0)==0){c[d+88>>2]=xd()|0;xe(d)}j=zd(c[d+88>>2]|0,a,c[d+80>>2]|0,52,d)|0;if((j|0)!=0)if((j|0)==1){n=2;o=n;i=b;return o|0}else if((j|0)==2){n=3;o=n;i=b;return o|0}else{if((d|0)!=(d|0)){p=1}else{Ji(8640,17336,169);p=1}}c[d+76>>2]=1}n=0;o=n;i=b;return o|0}function xe(a){a=a|0;var b=0,d=0;b=i;i=i+376|0;d=a;a=b|0;ze(d,a);yd(c[d+88>>2]|0,a);i=b;return}function ye(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0;f=i;g=b;b=d;d=e;e=a;a=c[e+48>>2]|0;if(1<=(g|0)){if((g|0)<=(a|0)){j=1}else{k=3}}else{k=3}if((k|0)==3){Ji(2304,17336,85);j=1}j=c[(c[e+80>>2]|0)+(g<<2)>>2]|0;if((j|0)<=(a|0)){l=1;c[b+4>>2]=j;h[d+8>>3]=1.0;m=l;i=f;return m|0}l=0;g=c[(c[(c[e+64>>2]|0)+(j-a<<2)>>2]|0)+48>>2]|0;while(1){if((g|0)==0){break}l=l+1|0;c[b+(l<<2)>>2]=c[c[g>>2]>>2];h[d+(l<<3)>>3]=(-0.0- +h[(c[g>>2]|0)+48>>3])*+h[g+8>>3]*+h[(c[g+4>>2]|0)+56>>3];g=c[g+28>>2]|0}m=l;i=f;return m|0}function ze(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=b;b=c[a+84>>2]|0;if((b|0)==0){c[e+4>>2]=1;c[e+8>>2]=0;h[e+16>>3]=.1;c[e+24>>2]=4;c[e+28>>2]=1;h[e+32>>3]=1.0e-15;h[e+40>>3]=1.0e10;c[e+48>>2]=100;h[e+56>>3]=1.0e-6;c[e+64>>2]=100;c[e+68>>2]=0;i=d;return}else{Ku(e|0,b|0,376)|0;i=d;return}}function Ae(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0;d=i;e=a;a=b;b=c[e+84>>2]|0;if((a|0)==0){if((b|0)!=0){Bi(b);c[e+84>>2]=0}}else{if((b|0)==0){f=yi(1,376)|0;c[e+84>>2]=f;b=f}Ku(b|0,a|0,376)|0;do{if((c[b+4>>2]|0)!=1){if((c[b+4>>2]|0)==2){break}if((c[b+4>>2]|0)==3){break}a=Hi(17336,307)|0;Gc[a&127](9616,(g=i,i=i+8|0,c[g>>2]=c[b+4>>2],g)|0);i=g}}while(0);if((c[b+8>>2]|0)<0){a=Hi(17336,310)|0;Gc[a&127](6864,(g=i,i=i+8|0,c[g>>2]=c[b+8>>2],g)|0);i=g}if(0.0<+h[b+16>>3]){if(!(+h[b+16>>3]<1.0)){j=15}}else{j=15}if((j|0)==15){a=Hi(17336,313)|0;Gc[a&127](5568,(g=i,i=i+8|0,h[g>>3]=+h[b+16>>3],g)|0);i=g}if((c[b+24>>2]|0)<1){a=Hi(17336,316)|0;Gc[a&127](4432,(g=i,i=i+8|0,c[g>>2]=c[b+24>>2],g)|0);i=g}do{if((c[b+28>>2]|0)!=1){if((c[b+28>>2]|0)==0){break}a=Hi(17336,319)|0;Gc[a&127](3576,(g=i,i=i+8|0,c[g>>2]=c[b+28>>2],g)|0);i=g}}while(0);if(0.0<=+h[b+32>>3]){if(!(+h[b+32>>3]<=1.0e-6)){j=23}}else{j=23}if((j|0)==23){a=Hi(17336,322)|0;Gc[a&127](2728,(g=i,i=i+8|0,h[g>>3]=+h[b+32>>3],g)|0);i=g}if(+h[b+40>>3]<1.0){a=Hi(17336,325)|0;Gc[a&127](1944,(g=i,i=i+8|0,h[g>>3]=+h[b+40>>3],g)|0);i=g}if(1<=(c[b+48>>2]|0)){if((c[b+48>>2]|0)>32767){j=28}}else{j=28}if((j|0)==28){a=Hi(17336,328)|0;Gc[a&127](21344,(g=i,i=i+8|0,c[g>>2]=c[b+48>>2],g)|0);i=g}if(0.0<+h[b+56>>3]){if(!(+h[b+56>>3]<1.0)){j=31}}else{j=31}if((j|0)==31){a=Hi(17336,331)|0;Gc[a&127](20064,(g=i,i=i+8|0,h[g>>3]=+h[b+56>>3],g)|0);i=g}if(1<=(c[b+64>>2]|0)){if((c[b+64>>2]|0)>32767){j=34}}else{j=34}if((j|0)==34){j=Hi(17336,334)|0;Gc[j&127](19024,(g=i,i=i+8|0,c[g>>2]=c[b+64>>2],g)|0);i=g}if((c[b+68>>2]|0)<0){j=Hi(17336,337)|0;Gc[j&127](17728,(g=i,i=i+8|0,c[g>>2]=c[b+64>>2],g)|0);i=g}if((c[b+68>>2]|0)==0){c[b+68>>2]=(c[b+64>>2]|0)*20|0}}if((c[e+88>>2]|0)==0){i=d;return}xe(e);i=d;return}function Be(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;f=b;b=d;if((b|0)!=0){Gc[(Hi(18352,97)|0)&127](20256,(g=i,i=i+8|0,c[g>>2]=b,g)|0);i=g}b=c[f+48>>2]|0;d=c[f+52>>2]|0;do{if((b|0)!=0){if((d|0)==0){break}Li(14344,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;if((b|0)<(d|0)){h=b}else{h=d}j=h;k=yi(j+1|0,4)|0;l=yi(j+1|0,4)|0;m=yi(b+1|0,1)|0;n=1;while(1){if((n|0)>(b|0)){break}a[m+n|0]=0;he(f,n,5);n=n+1|0}o=1;while(1){if((o|0)>(d|0)){break}ie(f,o,5);o=o+1|0}p=Yi(b,d,56,f,.001,k,l)|0;if(0<=(p|0)){if((p|0)<=(j|0)){q=1}else{r=19}}else{r=19}if((r|0)==19){Ji(10800,18352,125);q=1}s=1;while(1){if((s|0)>(p|0)){break}n=c[k+(s<<2)>>2]|0;if(1<=(n|0)){if((n|0)<=(b|0)){t=1}else{r=24}}else{r=24}if((r|0)==24){r=0;Ji(7432,18352,130);t=1}a[m+n|0]=1;o=c[l+(s<<2)>>2]|0;if(1<=(o|0)){if((o|0)<=(d|0)){u=1}else{r=27}}else{r=27}if((r|0)==27){r=0;Ji(6088,18352,133);u=1}ie(f,o,1);s=s+1|0}n=1;while(1){if((n|0)>(b|0)){break}if((a[m+n|0]|0)==0){he(f,n,1);if((c[(c[(c[f+60>>2]|0)+(n<<2)>>2]|0)+20>>2]|0)!=5){p=p+1|0}}n=n+1|0}Li(4992,(g=i,i=i+8|0,c[g>>2]=p,g)|0);i=g;Bi(k);Bi(l);Bi(m);i=e;return}}while(0);je(f);i=e;return}function Ce(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;g=b;b=d;d=e;e=a;a=c[e+48>>2]|0;j=c[e+52>>2]|0;k=c[e+60>>2]|0;l=c[e+64>>2]|0;if((g|0)>0){m=g;if(1<=(m|0)){if((m|0)<=(a|0)){n=1}else{o=4}}else{o=4}if((o|0)==4){Ji(7432,18352,61);n=1}p=0;if((c[(c[k+(m<<2)>>2]|0)+20>>2]|0)==5){q=c[(c[k+(m<<2)>>2]|0)+40>>2]|0;while(1){if((q|0)==0){break}r=c[c[q+4>>2]>>2]|0;if((c[(c[l+(r<<2)>>2]|0)+16>>2]|0)!=5){p=p+1|0;c[b+(p<<2)>>2]=r;h[d+(p<<3)>>3]=+h[(c[q>>2]|0)+48>>3]*+h[q+8>>3]*+h[(c[q+4>>2]|0)+56>>3]}q=c[q+20>>2]|0}}s=p;i=f;return s|0}else{r=-g|0;if(1<=(r|0)){if((r|0)<=(j|0)){t=1}else{o=16}}else{o=16}if((o|0)==16){Ji(6088,18352,77);t=1}p=0;if((c[(c[l+(r<<2)>>2]|0)+16>>2]|0)!=5){q=c[(c[l+(r<<2)>>2]|0)+48>>2]|0;while(1){if((q|0)==0){break}m=c[c[q>>2]>>2]|0;if((c[(c[k+(m<<2)>>2]|0)+20>>2]|0)==5){p=p+1|0;c[b+(p<<2)>>2]=m;h[d+(p<<3)>>3]=+h[(c[q>>2]|0)+48>>3]*+h[q+8>>3]*+h[(c[q+4>>2]|0)+56>>3]}q=c[q+28>>2]|0}}s=p;i=f;return s|0}return 0}function De(){var a=0,b=0;a=i;b=yi(1,108)|0;c[b>>2]=0;c[b+8>>2]=0;c[b+4>>2]=0;c[b+12>>2]=ei()|0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=50;c[b+28>>2]=0;c[b+36>>2]=0;c[b+32>>2]=0;c[b+44>>2]=0;c[b+40>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;c[b+64>>2]=0;c[b+72>>2]=0;c[b+68>>2]=0;c[b+80>>2]=0;c[b+76>>2]=0;c[b+84>>2]=1e3;c[b+88>>2]=0;c[b+92>>2]=0;c[b+96>>2]=0;c[b+104>>2]=0;c[b+100>>2]=0;i=a;return b|0}function Ee(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;h=a;a=b;b=d;d=e;e=f;if((b|0)==(b|0)){j=1}else{Ji(15728,19872,148);j=1}if((a|0)<1){Gc[(Hi(19872,150)|0)&127](14064,(k=i,i=i+8|0,c[k>>2]=a,k)|0);i=k}if((a|0)>1e8){Gc[(Hi(19872,152)|0)&127](10560,(k=i,i=i+8|0,c[k>>2]=a,k)|0);i=k}k=a;c[h+16>>2]=k;c[h+8>>2]=k;c[h>>2]=0;if((c[h+32>>2]|0)==0){c[h+32>>2]=yi((c[h+24>>2]|0)+1|0,4)|0}if((c[h+36>>2]|0)==0){c[h+36>>2]=yi((c[h+24>>2]|0)+1|0,4)|0}if((c[h+40>>2]|0)==0){c[h+40>>2]=yi((c[h+24>>2]|0)+1|0,4)|0}if((c[h+44>>2]|0)==0){c[h+44>>2]=yi((c[h+24>>2]|0)+1|0,4)|0}if((c[h+48>>2]|0)==0){k=c[h+24>>2]|0;c[h+48>>2]=k;c[h+52>>2]=0;if((k|0)>0){l=1}else{Ji(7344,19872,173);l=1}if((c[h+56>>2]|0)==0){m=1}else{Ji(6048,19872,174);m=1}c[h+56>>2]=yi(fa(k,k)|0,8)|0;if((c[h+60>>2]|0)==0){n=1}else{Ji(4944,19872,176);n=1}c[h+60>>2]=yi(fa(k,k)|0,8)|0;c[h+64>>2]=0}if((c[h+92>>2]|0)==0){c[h+92>>2]=yi((c[h+84>>2]|0)+1|0,4)|0}if((c[h+96>>2]|0)==0){c[h+96>>2]=yi((c[h+84>>2]|0)+1|0,8)|0}if((c[h+4>>2]|0)<(a|0)){if((c[h+68>>2]|0)!=0){Bi(c[h+68>>2]|0)}if((c[h+72>>2]|0)!=0){Bi(c[h+72>>2]|0)}if((c[h+76>>2]|0)!=0){Bi(c[h+76>>2]|0)}if((c[h+80>>2]|0)!=0){Bi(c[h+80>>2]|0)}if((c[h+100>>2]|0)!=0){Bi(c[h+100>>2]|0)}if((c[h+104>>2]|0)!=0){Bi(c[h+104>>2]|0)}c[h+4>>2]=a+100;c[h+68>>2]=yi((c[h+4>>2]|0)+1+(c[h+24>>2]|0)|0,4)|0;c[h+72>>2]=yi((c[h+4>>2]|0)+1+(c[h+24>>2]|0)|0,4)|0;c[h+76>>2]=yi((c[h+4>>2]|0)+1+(c[h+24>>2]|0)|0,4)|0;c[h+80>>2]=yi((c[h+4>>2]|0)+1+(c[h+24>>2]|0)|0,4)|0;c[h+100>>2]=yi((c[h+4>>2]|0)+1+(c[h+24>>2]|0)|0,8)|0;c[h+104>>2]=yi((c[h+4>>2]|0)+1+(c[h+24>>2]|0)|0,8)|0}if((fi(c[h+12>>2]|0,a,d,e)|0)!=0){o=1;p=o;i=g;return p|0}c[h>>2]=1;c[h+28>>2]=0;c[h+52>>2]=0;e=1;while(1){if((e|0)>(a|0)){break}d=e;c[(c[h+72>>2]|0)+(e<<2)>>2]=d;c[(c[h+68>>2]|0)+(e<<2)>>2]=d;d=e;c[(c[h+80>>2]|0)+(e<<2)>>2]=d;c[(c[h+76>>2]|0)+(e<<2)>>2]=d;e=e+1|0}c[h+88>>2]=1;o=0;p=o;i=g;return p|0}function Fe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0;d=i;e=a;a=b;b=c[e+8>>2]|0;f=c[e+16>>2]|0;g=c[e+28>>2]|0;j=c[e+72>>2]|0;k=c[e+80>>2]|0;l=c[e+100>>2]|0;m=l;n=l+(b<<3)|0;if((c[e>>2]|0)==0){Gc[(Hi(19872,520)|0)&127](3960,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o}if(0<=(f|0)){if((f|0)<=(b+g|0)){p=1}else{q=5}}else{q=5}if((q|0)==5){Ji(3184,19872,521);p=1}p=1;while(1){if((p|0)>(b+g|0)){break}q=c[j+(p<<2)>>2]|0;if((q|0)<=(f|0)){r=+h[a+(q<<3)>>3]}else{r=0.0}h[l+(p<<3)>>3]=r;p=p+1|0}ai(c[(c[e+12>>2]|0)+12>>2]|0,m);Ge(e,n,-1.0,m);Xh(e+48|0,n,c[e+104>>2]|0);He(e,m,-1.0,n);n=c[(c[(c[e+12>>2]|0)+16>>2]|0)+36>>2]|0;ci(c[(c[e+12>>2]|0)+12>>2]|0,m,n);Ku(m+8|0,n+8|0,b<<3)|0;p=1;while(1){if((p|0)>(f|0)){break}h[a+(p<<3)>>3]=+h[l+(c[k+(p<<2)>>2]<<3)>>3];p=p+1|0}i=d;return}function Ge(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;g=a;a=b;j=d;b=e;e=c[g+28>>2]|0;k=c[g+40>>2]|0;l=c[g+44>>2]|0;m=c[g+92>>2]|0;n=c[g+96>>2]|0;g=1;while(1){if((g|0)>(e|0)){break}d=0.0;o=c[k+(g<<2)>>2]|0;p=o+(c[l+(g<<2)>>2]|0)|0;q=o;while(1){if((q|0)>=(p|0)){break}d=d+ +h[n+(q<<3)>>3]*+h[b+(c[m+(q<<2)>>2]<<3)>>3];q=q+1|0}q=a+(g<<3)|0;h[q>>3]=+h[q>>3]+j*d;g=g+1|0}i=f;return}function He(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;g=a;a=b;j=d;b=e;e=c[g+28>>2]|0;k=c[g+32>>2]|0;l=c[g+36>>2]|0;m=c[g+92>>2]|0;n=c[g+96>>2]|0;g=1;while(1){if((g|0)>(e|0)){break}if(!(+h[b+(g<<3)>>3]==0.0)){d=j*+h[b+(g<<3)>>3];o=c[k+(g<<2)>>2]|0;p=o+(c[l+(g<<2)>>2]|0)|0;q=o;while(1){if((q|0)>=(p|0)){break}o=a+(c[m+(q<<2)>>2]<<3)|0;h[o>>3]=+h[o>>3]+d*+h[n+(q<<3)>>3];q=q+1|0}}g=g+1|0}i=f;return}function Ie(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0;d=i;e=a;a=b;b=c[e+8>>2]|0;f=c[e+16>>2]|0;g=c[e+28>>2]|0;j=c[e+68>>2]|0;k=c[e+76>>2]|0;l=c[e+100>>2]|0;m=l;n=l+(b<<3)|0;if((c[e>>2]|0)==0){Gc[(Hi(19872,665)|0)&127](2336,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o}if(0<=(f|0)){if((f|0)<=(b+g|0)){p=1}else{q=5}}else{q=5}if((q|0)==5){Ji(3184,19872,666);p=1}p=1;while(1){if((p|0)>(b+g|0)){break}q=c[k+(p<<2)>>2]|0;if((q|0)<=(f|0)){r=+h[a+(q<<3)>>3]}else{r=0.0}h[l+(p<<3)>>3]=r;p=p+1|0}k=c[(c[(c[e+12>>2]|0)+16>>2]|0)+36>>2]|0;di(c[(c[e+12>>2]|0)+12>>2]|0,m,k);Ku(m+8|0,k+8|0,b<<3)|0;Je(e,n,-1.0,m);Yh(e+48|0,n,c[e+104>>2]|0);n=n;Ke(e,m,-1.0,n);bi(c[(c[e+12>>2]|0)+12>>2]|0,m);p=1;while(1){if((p|0)>(f|0)){break}h[a+(p<<3)>>3]=+h[l+(c[j+(p<<2)>>2]<<3)>>3];p=p+1|0}i=d;return}function Je(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;g=a;a=b;j=d;b=e;e=c[g+28>>2]|0;k=c[g+32>>2]|0;l=c[g+36>>2]|0;m=c[g+92>>2]|0;n=c[g+96>>2]|0;g=1;while(1){if((g|0)>(e|0)){break}d=0.0;o=c[k+(g<<2)>>2]|0;p=o+(c[l+(g<<2)>>2]|0)|0;q=o;while(1){if((q|0)>=(p|0)){break}d=d+ +h[n+(q<<3)>>3]*+h[b+(c[m+(q<<2)>>2]<<3)>>3];q=q+1|0}q=a+(g<<3)|0;h[q>>3]=+h[q>>3]+j*d;g=g+1|0}i=f;return}function Ke(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;g=a;a=b;j=d;b=e;e=c[g+28>>2]|0;k=c[g+40>>2]|0;l=c[g+44>>2]|0;m=c[g+92>>2]|0;n=c[g+96>>2]|0;g=1;while(1){if((g|0)>(e|0)){break}if(!(+h[b+(g<<3)>>3]==0.0)){d=j*+h[b+(g<<3)>>3];o=c[k+(g<<2)>>2]|0;p=o+(c[l+(g<<2)>>2]|0)|0;q=o;while(1){if((q|0)>=(p|0)){break}o=a+(c[m+(q<<2)>>2]<<3)|0;h[o>>3]=+h[o>>3]+d*+h[n+(q<<3)>>3];q=q+1|0}}g=g+1|0}i=f;return}function Le(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0,N=0.0,O=0,P=0;j=i;k=a;a=b;b=d;d=e;e=f;f=g;g=c[k+8>>2]|0;l=c[k+16>>2]|0;m=c[k+28>>2]|0;n=c[k+32>>2]|0;o=c[k+36>>2]|0;p=c[k+40>>2]|0;q=c[k+44>>2]|0;r=c[k+68>>2]|0;s=c[k+72>>2]|0;t=c[k+76>>2]|0;u=c[k+80>>2]|0;v=c[k+88>>2]|0;w=c[k+92>>2]|0;x=c[k+96>>2]|0;y=c[k+104>>2]|0;z=c[k+100>>2]|0;A=z;B=c[k+104>>2]|0;C=B;D=z+(g<<3)|0;E=B+(g<<3)|0;if((b|0)==(b|0)){F=1}else{Ji(15728,19872,902);F=1}if((c[k>>2]|0)==0){Gc[(Hi(19872,904)|0)&127](21704,(G=i,i=i+1|0,i=i+7&-8,c[G>>2]=0,G)|0);i=G}if(1<=(a|0)){if((a|0)>(l|0)){H=7}}else{H=7}if((H|0)==7){Gc[(Hi(19872,906)|0)&127](20576,(G=i,i=i+8|0,c[G>>2]=a,G)|0);i=G}if(0<=(l|0)){if((l|0)<=(g+m|0)){I=1}else{H=10}}else{H=10}if((H|0)==10){Ji(3184,19872,908);I=1}if((m|0)==(c[k+24>>2]|0)){c[k>>2]=0;J=3;K=J;i=j;return K|0}I=1;while(1){if((I|0)>(l|0)){break}h[y+(I<<3)>>3]=0.0;I=I+1|0}F=1;while(1){if((F|0)>(d|0)){break}I=c[e+(F<<2)>>2]|0;if(1<=(I|0)){if((I|0)>(l|0)){H=21}}else{H=21}if((H|0)==21){H=0;Gc[(Hi(19872,921)|0)&127](19472,(G=i,i=i+16|0,c[G>>2]=F,c[G+8>>2]=I,G)|0);i=G}if(+h[y+(I<<3)>>3]!=0.0){Gc[(Hi(19872,924)|0)&127](18240,(G=i,i=i+16|0,c[G>>2]=F,c[G+8>>2]=I,G)|0);i=G}if(+h[f+(F<<3)>>3]==0.0){b=Hi(19872,927)|0;L=+h[f+(F<<3)>>3];Gc[b&127](16896,(G=i,i=i+16|0,c[G>>2]=F,h[G+8>>3]=L,G)|0);i=G}h[y+(I<<3)>>3]=+h[f+(F<<3)>>3];F=F+1|0}I=1;while(1){if((I|0)>(g+m|0)){break}F=c[s+(I<<2)>>2]|0;M=F;if((F|0)<=(l|0)){N=+h[y+(M<<3)>>3]}else{N=0.0}h[z+(I<<3)>>3]=N;I=I+1|0}I=1;while(1){if((I|0)>(g+m|0)){break}h[B+(I<<3)>>3]=0.0;I=I+1|0}h[B+(c[u+(a<<2)>>2]<<3)>>3]=1.0;ai(c[(c[k+12>>2]|0)+12>>2]|0,A);B=c[(c[(c[k+12>>2]|0)+16>>2]|0)+36>>2]|0;di(c[(c[k+12>>2]|0)+12>>2]|0,C,B);Ku(C+8|0,B+8|0,g<<3)|0;if((c[k+84>>2]|0)<(v+g+g|0)){Me(k,v+g+g|0);w=c[k+92>>2]|0;x=c[k+96>>2]|0}c[n+(m+1<<2)>>2]=v;I=1;while(1){if((I|0)>(g|0)){break}if(+h[A+(I<<3)>>3]!=0.0){c[w+(v<<2)>>2]=I;h[x+(v<<3)>>3]=+h[A+(I<<3)>>3];v=v+1|0}I=I+1|0}c[o+(m+1<<2)>>2]=v-(c[k+88>>2]|0);c[k+88>>2]=v;c[p+(m+1<<2)>>2]=v;I=1;while(1){if((I|0)>(g|0)){break}if(+h[C+(I<<3)>>3]!=0.0){c[w+(v<<2)>>2]=I;h[x+(v<<3)>>3]=+h[C+(I<<3)>>3];v=v+1|0}I=I+1|0}c[q+(m+1<<2)>>2]=v-(c[k+88>>2]|0);c[k+88>>2]=v;Ge(k,D,-1.0,A);Je(k,E,-1.0,C);N=0.0;I=1;while(1){if((I|0)>(g|0)){break}N=N- +h[C+(I<<3)>>3]*+h[A+(I<<3)>>3];I=I+1|0}do{if((c[k+64>>2]|0)==1){if((Uh(k+48|0,D,E,N)|0)==0){break}c[k>>2]=0;J=1;K=J;i=j;return K|0}else{do{if((c[k+64>>2]|0)==2){if((Vh(k+48|0,D,E,N)|0)==0){break}c[k>>2]=0;J=1;K=J;i=j;return K|0}else{if((k|0)!=(k|0)){O=1}else{Ji(16480,19872,1029);O=1}}}while(0)}}while(0);O=g+m+1|0;c[s+(g+m+1<<2)>>2]=O;c[r+(g+m+1<<2)>>2]=O;O=g+m+1|0;c[u+(g+m+1<<2)>>2]=O;c[t+(g+m+1<<2)>>2]=O;I=c[u+(a<<2)>>2]|0;M=c[u+(g+m+1<<2)>>2]|0;c[t+(I<<2)>>2]=g+m+1;c[u+(g+m+1<<2)>>2]=I;c[t+(M<<2)>>2]=a;c[u+(a<<2)>>2]=M;M=k+28|0;c[M>>2]=(c[M>>2]|0)+1;if((c[k+28>>2]|0)<=(c[k+24>>2]|0)){P=1}else{Ji(16120,19872,1041);P=1}J=0;K=J;i=j;return K|0}function Me(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;a=b;b=c[e+84>>2]|0;f=(c[e+88>>2]|0)-1|0;g=c[e+92>>2]|0;h=c[e+96>>2]|0;if((b|0)<(a|0)){j=1}else{Ji(15416,19872,720);j=1}while(1){if((b|0)>=(a|0)){break}b=b+b|0}c[e+84>>2]=b;c[e+92>>2]=yi(b+1|0,4)|0;c[e+96>>2]=yi(b+1|0,8)|0;if((f|0)>=0){k=1}else{Ji(15112,19872,725);k=1}Ku((c[e+92>>2]|0)+4|0,g+4|0,f<<2)|0;Ku((c[e+96>>2]|0)+8|0,h+8|0,f<<3)|0;Bi(g);Bi(h);i=d;return}function Ne(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;hi(c[d+12>>2]|0);if((c[d+20>>2]|0)==0){e=1}else{Ji(15744,19872,1073);e=1}if((c[d+32>>2]|0)!=0){Bi(c[d+32>>2]|0)}if((c[d+36>>2]|0)!=0){Bi(c[d+36>>2]|0)}if((c[d+40>>2]|0)!=0){Bi(c[d+40>>2]|0)}if((c[d+44>>2]|0)!=0){Bi(c[d+44>>2]|0)}if((c[d+56>>2]|0)!=0){Bi(c[d+56>>2]|0)}if((c[d+60>>2]|0)!=0){Bi(c[d+60>>2]|0)}if((c[d+68>>2]|0)!=0){Bi(c[d+68>>2]|0)}if((c[d+72>>2]|0)!=0){Bi(c[d+72>>2]|0)}if((c[d+76>>2]|0)!=0){Bi(c[d+76>>2]|0)}if((c[d+80>>2]|0)!=0){Bi(c[d+80>>2]|0)}if((c[d+92>>2]|0)!=0){Bi(c[d+92>>2]|0)}if((c[d+96>>2]|0)!=0){Bi(c[d+96>>2]|0)}if((c[d+100>>2]|0)!=0){Bi(c[d+100>>2]|0)}if((c[d+104>>2]|0)==0){f=d;g=f;Bi(g);i=b;return}Bi(c[d+104>>2]|0);f=d;g=f;Bi(g);i=b;return}function Oe(){var a=0,b=0;a=i;b=yi(1,136)|0;c[b>>2]=0;c[b+12>>2]=0;c[b+8>>2]=0;c[b+4>>2]=0;c[b+16>>2]=Ri()|0;c[b+24>>2]=0;c[b+20>>2]=0;h[b+32>>3]=0.0;c[b+44>>2]=0;c[b+40>>2]=0;c[b+52>>2]=0;c[b+48>>2]=0;c[b+60>>2]=0;c[b+56>>2]=0;c[b+64>>2]=Ri()|0;c[b+68>>2]=0;c[b+80>>2]=0;c[b+76>>2]=0;c[b+72>>2]=0;c[b+88>>2]=0;c[b+84>>2]=0;c[b+96>>2]=0;c[b+92>>2]=0;c[b+112>>2]=0;c[b+108>>2]=0;c[b+104>>2]=0;c[b+100>>2]=0;c[b+116>>2]=0;c[b+124>>2]=0;c[b+120>>2]=0;c[b+128>>2]=0;i=a;return b|0}function Pe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=a;a=b;if((d|0)==0){c[a+32>>2]=0;c[a+36>>2]=c[f+48>>2];if((c[a+36>>2]|0)==0){c[f+52>>2]=a}else{c[(c[a+36>>2]|0)+32>>2]=a}c[f+48>>2]=a;i=e;return}else{c[a+32>>2]=c[f+52>>2];c[a+36>>2]=0;if((c[a+32>>2]|0)==0){c[f+48>>2]=a}else{c[(c[a+32>>2]|0)+36>>2]=a}c[f+52>>2]=a;i=e;return}}function Qe(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=b;if((c[a+32>>2]|0)==0){c[e+48>>2]=c[a+36>>2]}else{c[(c[a+32>>2]|0)+36>>2]=c[a+36>>2]}if((c[a+36>>2]|0)==0){c[e+52>>2]=c[a+32>>2];i=d;return}else{c[(c[a+36>>2]|0)+32>>2]=c[a+32>>2];i=d;return}}function Re(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=b;if((c[a+28>>2]|0)!=0){i=d;return}c[a+28>>2]=1;Qe(e,a);Pe(e,a,0);i=d;return}function Se(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=b;if((c[a+28>>2]|0)==0){i=d;return}c[a+28>>2]=0;Qe(e,a);Pe(e,a,1);i=d;return}function Te(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=a;a=b;if((d|0)==0){c[a+64>>2]=0;c[a+68>>2]=c[f+56>>2];if((c[a+68>>2]|0)==0){c[f+60>>2]=a}else{c[(c[a+68>>2]|0)+64>>2]=a}c[f+56>>2]=a;i=e;return}else{c[a+64>>2]=c[f+60>>2];c[a+68>>2]=0;if((c[a+64>>2]|0)==0){c[f+56>>2]=a}else{c[(c[a+64>>2]|0)+68>>2]=a}c[f+60>>2]=a;i=e;return}}function Ue(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=b;if((c[a+64>>2]|0)==0){c[e+56>>2]=c[a+68>>2]}else{c[(c[a+64>>2]|0)+68>>2]=c[a+68>>2]}if((c[a+68>>2]|0)==0){c[e+60>>2]=c[a+64>>2];i=d;return}else{c[(c[a+68>>2]|0)+64>>2]=c[a+64>>2];i=d;return}}function Ve(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=b;if((c[a+44>>2]|0)!=0){i=d;return}c[a+44>>2]=1;Ue(e,a);Te(e,a,0);i=d;return}function We(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=b;if((c[a+44>>2]|0)==0){i=d;return}c[a+44>>2]=0;Ue(e,a);Te(e,a,1);i=d;return}function Xe(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;a=Si(c[d+16>>2]|0,40)|0;e=d+40|0;f=(c[e>>2]|0)+1|0;c[e>>2]=f;c[a>>2]=f;c[a+4>>2]=0;h[a+8>>3]=-1.7976931348623157e+308;h[a+16>>3]=1.7976931348623157e+308;c[a+24>>2]=0;c[a+28>>2]=0;Pe(d,a,1);i=b;return a|0}function Ye(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;e=b;b=Si(c[e+16>>2]|0,72)|0;f=e+44|0;g=(c[f>>2]|0)+1|0;c[f>>2]=g;c[b>>2]=g;c[b+4>>2]=0;a[b+8|0]=0;h[b+32>>3]=0.0;h[b+24>>3]=0.0;h[b+16>>3]=0.0;c[b+40>>2]=0;c[b+44>>2]=0;Te(e,b,1);i=d;return b|0}function Ze(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=b;b=d;d=Si(c[a+16>>2]|0,32)|0;c[d>>2]=g;c[d+4>>2]=b;h[d+8>>3]=e;c[d+16>>2]=0;c[d+20>>2]=c[g+24>>2];c[d+24>>2]=0;c[d+28>>2]=c[b+40>>2];if((c[d+20>>2]|0)!=0){c[(c[d+20>>2]|0)+16>>2]=d}if((c[d+28>>2]|0)==0){j=d;k=b;l=k+40|0;c[l>>2]=j;m=g;n=m+24|0;c[n>>2]=j;o=d;i=f;return o|0}c[(c[d+28>>2]|0)+24>>2]=d;j=d;k=b;l=k+40|0;c[l>>2]=j;m=g;n=m+24|0;c[n>>2]=j;o=d;i=f;return o|0}function _e(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=a;a=Si(c[f+64>>2]|0,12)|0;c[a>>2]=b;c[a+4>>2]=Si(c[f+64>>2]|0,d)|0;c[a+8>>2]=c[f+68>>2];c[f+68>>2]=a;i=e;return c[a+4>>2]|0}function $e(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=b;while(1){if((c[a+24>>2]|0)==0){break}b=c[a+24>>2]|0;c[a+24>>2]=c[b+20>>2];if((c[b+24>>2]|0)==0){c[(c[b+4>>2]|0)+40>>2]=c[b+28>>2]}else{c[(c[b+24>>2]|0)+28>>2]=c[b+28>>2]}if((c[b+28>>2]|0)!=0){c[(c[b+28>>2]|0)+24>>2]=c[b+24>>2]}Ti(c[e+16>>2]|0,b,32)}i=d;return}function af(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if((c[a+4>>2]|0)!=0){b=c[e+16>>2]|0;f=c[a+4>>2]|0;Ti(b,f,(Lu(c[a+4>>2]|0)|0)+1|0)}$e(e,a);Qe(e,a);Ti(c[e+16>>2]|0,a,40);i=d;return}function bf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=b;if((c[a+4>>2]|0)!=0){b=c[e+16>>2]|0;f=c[a+4>>2]|0;Ti(b,f,(Lu(c[a+4>>2]|0)|0)+1|0)}while(1){if((c[a+40>>2]|0)==0){break}f=c[a+40>>2]|0;c[a+40>>2]=c[f+28>>2];if((c[f+16>>2]|0)==0){c[(c[f>>2]|0)+24>>2]=c[f+20>>2]}else{c[(c[f+16>>2]|0)+20>>2]=c[f+20>>2]}if((c[f+20>>2]|0)!=0){c[(c[f+20>>2]|0)+16>>2]=c[f+16>>2]}Ti(c[e+16>>2]|0,f,32)}Ue(e,a);Ti(c[e+16>>2]|0,a,72);i=d;return}function cf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;k=b;b=d;d=e;e=f;f=g;g=c[b+48>>2]|0;l=c[b+52>>2]|0;do{if((d|0)==0){m=1}else{if((d|0)==1){m=1;break}Ji(13624,18632,363);m=1}}while(0);do{if((e|0)==1){n=1}else{if((e|0)==2){n=1;break}if((e|0)==3){n=1;break}Ji(10192,18632,364);n=1}}while(0);do{if((f|0)==0){o=1}else{if((f|0)==1){o=1;break}Ji(7200,18632,365);o=1}}while(0);if((e|0)==3){if((f|0)!=0){Ji(5920,18632,366);p=1}else{p=1}}c[k>>2]=c[b+24>>2];if((c[k>>2]|0)==1){q=1.0}else{if((c[k>>2]|0)==2){q=-1.0}else{if((k|0)!=(k|0)){r=1}else{Ji(4832,18632,373);r=1}}}c[k+4>>2]=g;c[k+8>>2]=l;c[k+12>>2]=c[b+56>>2];do{if((d|0)!=0){if((c[b+16>>2]|0)==0){break}r=c[k+16>>2]|0;c[k+20>>2]=Si(r,(Lu(c[b+16>>2]|0)|0)+1|0)|0;Mu(c[k+20>>2]|0,c[b+16>>2]|0)|0}}while(0);do{if((d|0)!=0){if((c[b+20>>2]|0)==0){break}r=c[k+16>>2]|0;c[k+24>>2]=Si(r,(Lu(c[b+20>>2]|0)|0)+1|0)|0;Mu(c[k+24>>2]|0,c[b+20>>2]|0)|0}}while(0);h[k+32>>3]=q*+h[b+32>>3];r=yi(g+1|0,4)|0;p=1;while(1){if((p|0)>(g|0)){break}o=c[(c[b+60>>2]|0)+(p<<2)>>2]|0;n=Xe(k)|0;m=n;c[r+(p<<2)>>2]=n;if((c[m>>2]|0)==(p|0)){s=1}else{Ji(3928,18632,392);s=1}do{if((d|0)!=0){if((c[o+4>>2]|0)==0){break}n=c[k+16>>2]|0;c[m+4>>2]=Si(n,(Lu(c[o+4>>2]|0)|0)+1|0)|0;Mu(c[m+4>>2]|0,c[o+4>>2]|0)|0}}while(0);if((f|0)!=0){t=+h[o+48>>3];if((c[o+20>>2]|0)==1){h[m+8>>3]=-1.7976931348623157e+308;h[m+16>>3]=1.7976931348623157e+308}else{if((c[o+20>>2]|0)==2){h[m+8>>3]=+h[o+24>>3]*t;h[m+16>>3]=1.7976931348623157e+308}else{if((c[o+20>>2]|0)==3){h[m+8>>3]=-1.7976931348623157e+308;h[m+16>>3]=+h[o+32>>3]*t}else{if((c[o+20>>2]|0)==4){h[m+8>>3]=+h[o+24>>3]*t;h[m+16>>3]=+h[o+32>>3]*t}else{if((c[o+20>>2]|0)==5){u=+h[o+24>>3]*t;h[m+16>>3]=u;h[m+8>>3]=u}else{if((o|0)!=(o|0)){v=1}else{Ji(3056,18632,424);v=1}}}}}}}else{if((c[o+20>>2]|0)==1){h[m+8>>3]=-1.7976931348623157e+308;h[m+16>>3]=1.7976931348623157e+308}else{if((c[o+20>>2]|0)==2){h[m+8>>3]=+h[o+24>>3];h[m+16>>3]=1.7976931348623157e+308}else{if((c[o+20>>2]|0)==3){h[m+8>>3]=-1.7976931348623157e+308;h[m+16>>3]=+h[o+32>>3]}else{if((c[o+20>>2]|0)==4){h[m+8>>3]=+h[o+24>>3];h[m+16>>3]=+h[o+32>>3]}else{if((c[o+20>>2]|0)==5){u=+h[o+24>>3];h[m+16>>3]=u;h[m+8>>3]=u}else{if((o|0)!=(o|0)){w=1}else{Ji(3056,18632,409);w=1}}}}}}}p=p+1|0}p=1;while(1){if((p|0)>(l|0)){break}w=c[(c[b+64>>2]|0)+(p<<2)>>2]|0;v=Ye(k)|0;if((c[v>>2]|0)==(p|0)){x=1}else{Ji(2224,18632,433);x=1}do{if((d|0)!=0){if((c[w+4>>2]|0)==0){break}s=c[k+16>>2]|0;c[v+4>>2]=Si(s,(Lu(c[w+4>>2]|0)|0)+1|0)|0;Mu(c[v+4>>2]|0,c[w+4>>2]|0)|0}}while(0);if((e|0)==3){a[v+8|0]=(c[w+12>>2]|0)==2}if((f|0)!=0){u=+h[w+56>>3];if((c[w+16>>2]|0)==1){h[v+16>>3]=-1.7976931348623157e+308;h[v+24>>3]=1.7976931348623157e+308}else{if((c[w+16>>2]|0)==2){h[v+16>>3]=+h[w+24>>3]/u;h[v+24>>3]=1.7976931348623157e+308}else{if((c[w+16>>2]|0)==3){h[v+16>>3]=-1.7976931348623157e+308;h[v+24>>3]=+h[w+32>>3]/u}else{if((c[w+16>>2]|0)==4){h[v+16>>3]=+h[w+24>>3]/u;h[v+24>>3]=+h[w+32>>3]/u}else{if((c[w+16>>2]|0)==5){t=+h[w+24>>3]/u;h[v+24>>3]=t;h[v+16>>3]=t}else{if((w|0)!=(w|0)){y=1}else{Ji(21632,18632,474);y=1}}}}}}h[v+32>>3]=q*+h[w+40>>3]*u;z=c[w+48>>2]|0;while(1){if((z|0)==0){break}Ze(k,c[r+(c[c[z>>2]>>2]<<2)>>2]|0,v,+h[(c[z>>2]|0)+48>>3]*+h[z+8>>3]*u)|0;z=c[z+28>>2]|0}}else{if((c[w+16>>2]|0)==1){h[v+16>>3]=-1.7976931348623157e+308;h[v+24>>3]=1.7976931348623157e+308}else{if((c[w+16>>2]|0)==2){h[v+16>>3]=+h[w+24>>3];h[v+24>>3]=1.7976931348623157e+308}else{if((c[w+16>>2]|0)==3){h[v+16>>3]=-1.7976931348623157e+308;h[v+24>>3]=+h[w+32>>3]}else{if((c[w+16>>2]|0)==4){h[v+16>>3]=+h[w+24>>3];h[v+24>>3]=+h[w+32>>3]}else{if((c[w+16>>2]|0)==5){u=+h[w+24>>3];h[v+24>>3]=u;h[v+16>>3]=u}else{if((w|0)!=(w|0)){A=1}else{Ji(21632,18632,456);A=1}}}}}}h[v+32>>3]=q*+h[w+40>>3];z=c[w+48>>2]|0;while(1){if((z|0)==0){break}Ze(k,c[r+(c[c[z>>2]>>2]<<2)>>2]|0,v,+h[z+8>>3])|0;z=c[z+28>>2]|0}}p=p+1|0}Bi(r);c[k+92>>2]=e;c[k+96>>2]=f;i=j;return}function df(b,d){b=b|0;d=d|0;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;f=b;b=d;Td(b);Gd(b,c[f+20>>2]|0);Hd(b,c[f+24>>2]|0);Id(b,c[f>>2]|0);if((c[f>>2]|0)==1){g=1.0}else{if((c[f>>2]|0)==2){g=-1.0}else{if((f|0)!=(f|0)){j=1}else{Ji(4832,18632,504);j=1}}}Pd(b,0,g*+h[f+32>>3]);j=c[f+48>>2]|0;while(1){if((j|0)==0){break}d=Jd(b,1)|0;k=d;c[j+28>>2]=d;Ld(b,k,c[j+4>>2]|0);do{if(+h[j+8>>3]==-1.7976931348623157e+308){if(!(+h[j+16>>3]==1.7976931348623157e+308)){l=14;break}m=1}else{l=14}}while(0);if((l|0)==14){l=0;if(+h[j+16>>3]==1.7976931348623157e+308){m=2}else{if(+h[j+8>>3]==-1.7976931348623157e+308){m=3}else{if(+h[j+8>>3]!=+h[j+16>>3]){m=4}else{m=5}}}}Nd(b,k,m,+h[j+8>>3],+h[j+16>>3]);j=c[j+36>>2]|0}d=yi((c[b+48>>2]|0)+1|0,4)|0;n=yi((c[b+48>>2]|0)+1|0,8)|0;o=c[f+56>>2]|0;while(1){if((o|0)==0){break}p=Kd(b,1)|0;Md(b,p,c[o+4>>2]|0);ue(b,p,(a[o+8|0]|0)!=0?2:1);do{if(+h[o+16>>3]==-1.7976931348623157e+308){if(!(+h[o+24>>3]==1.7976931348623157e+308)){l=31;break}m=1}else{l=31}}while(0);if((l|0)==31){l=0;if(+h[o+24>>3]==1.7976931348623157e+308){m=2}else{if(+h[o+16>>3]==-1.7976931348623157e+308){m=3}else{if(+h[o+16>>3]!=+h[o+24>>3]){m=4}else{m=5}}}}Od(b,p,m,+h[o+16>>3],+h[o+24>>3]);Pd(b,p,g*+h[o+32>>3]);q=0;r=c[o+40>>2]|0;while(1){if((r|0)==0){break}q=q+1|0;c[d+(q<<2)>>2]=c[(c[r>>2]|0)+28>>2];h[n+(q<<3)>>3]=+h[r+8>>3];r=c[r+28>>2]|0}Rd(b,p,q,d,n);o=c[o+68>>2]|0}Bi(d);Bi(n);c[f+72>>2]=c[b+48>>2];c[f+76>>2]=c[b+52>>2];c[f+80>>2]=c[b+56>>2];c[f+84>>2]=yi((c[f+72>>2]|0)+1|0,4)|0;c[f+88>>2]=yi((c[f+76>>2]|0)+1|0,4)|0;j=c[f+48>>2]|0;k=0;while(1){if((j|0)==0){break}b=k+1|0;k=b;c[(c[f+84>>2]|0)+(b<<2)>>2]=c[j>>2];j=c[j+36>>2]|0}o=c[f+56>>2]|0;p=0;while(1){if((o|0)==0){break}j=p+1|0;p=j;c[(c[f+88>>2]|0)+(j<<2)>>2]=c[o>>2];o=c[o+68>>2]|0}Ui(c[f+16>>2]|0);c[f+16>>2]=0;c[f+24>>2]=0;c[f+20>>2]=0;h[f+32>>3]=0.0;c[f+52>>2]=0;c[f+48>>2]=0;c[f+60>>2]=0;c[f+56>>2]=0;i=e;return}function ef(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;f=b;b=d;if((c[f>>2]|0)==(c[b+24>>2]|0)){g=1}else{Ji(20392,18632,581);g=1}if((c[f>>2]|0)==1){j=1.0}else{if((c[f>>2]|0)==2){j=-1.0}else{if((f|0)!=(f|0)){k=1}else{Ji(4832,18632,587);k=1}}}if((c[f+92>>2]|0)!=3){if((c[f+72>>2]|0)==(c[b+48>>2]|0)){l=1}else{Ji(19336,18632,592);l=1}}if((c[f+76>>2]|0)==(c[b+52>>2]|0)){m=1}else{Ji(18040,18632,594);m=1}if((c[f+92>>2]|0)!=3){if((c[f+80>>2]|0)==(c[b+56>>2]|0)){n=1}else{Ji(16800,18632,599);n=1}}if((c[f+92>>2]|0)==1){c[f+100>>2]=c[b+92>>2];c[f+104>>2]=c[b+96>>2]}else{if((c[f+92>>2]|0)==2){c[f+108>>2]=c[b+120>>2]}else{if((c[f+92>>2]|0)==3){c[f+112>>2]=c[b+136>>2]}else{if((f|0)!=(f|0)){o=1}else{Ji(4832,18632,611);o=1}}}}if((c[f+92>>2]|0)==1){if((c[f+116>>2]|0)==0){c[f+116>>2]=yi((c[f+40>>2]|0)+1|0,1)|0}p=1;while(1){if((p|0)>(c[f+40>>2]|0)){break}a[(c[f+116>>2]|0)+p|0]=0;p=p+1|0}if((c[f+120>>2]|0)==0){c[f+120>>2]=yi((c[f+44>>2]|0)+1|0,1)|0}q=1;while(1){if((q|0)>(c[f+44>>2]|0)){break}a[(c[f+120>>2]|0)+q|0]=0;q=q+1|0}}if((c[f+128>>2]|0)==0){c[f+128>>2]=yi((c[f+44>>2]|0)+1|0,8)|0}q=1;while(1){if((q|0)>(c[f+44>>2]|0)){break}h[(c[f+128>>2]|0)+(q<<3)>>3]=1.7976931348623157e+308;q=q+1|0}if((c[f+92>>2]|0)!=3){if((c[f+124>>2]|0)==0){c[f+124>>2]=yi((c[f+40>>2]|0)+1|0,8)|0}p=1;while(1){if((p|0)>(c[f+40>>2]|0)){break}h[(c[f+124>>2]|0)+(p<<3)>>3]=1.7976931348623157e+308;p=p+1|0}}if((c[f+92>>2]|0)==1){p=1;while(1){if((p|0)>(c[f+72>>2]|0)){break}r=c[(c[b+60>>2]|0)+(p<<2)>>2]|0;s=c[(c[f+84>>2]|0)+(p<<2)>>2]|0;a[(c[f+116>>2]|0)+s|0]=c[r+56>>2];h[(c[f+124>>2]|0)+(s<<3)>>3]=j*+h[r+72>>3];p=p+1|0}q=1;while(1){if((q|0)>(c[f+76>>2]|0)){break}t=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;s=c[(c[f+88>>2]|0)+(q<<2)>>2]|0;a[(c[f+120>>2]|0)+s|0]=c[t+64>>2];h[(c[f+128>>2]|0)+(s<<3)>>3]=+h[t+72>>3];q=q+1|0}}else{if((c[f+92>>2]|0)==2){p=1;while(1){if((p|0)>(c[f+72>>2]|0)){break}r=c[(c[b+60>>2]|0)+(p<<2)>>2]|0;s=c[(c[f+84>>2]|0)+(p<<2)>>2]|0;h[(c[f+124>>2]|0)+(s<<3)>>3]=j*+h[r+88>>3];p=p+1|0}q=1;while(1){if((q|0)>(c[f+76>>2]|0)){break}t=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;s=c[(c[f+88>>2]|0)+(q<<2)>>2]|0;h[(c[f+128>>2]|0)+(s<<3)>>3]=+h[t+88>>3];q=q+1|0}}else{if((c[f+92>>2]|0)==3){q=1;while(1){if((q|0)>(c[f+76>>2]|0)){break}t=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;s=c[(c[f+88>>2]|0)+(q<<2)>>2]|0;h[(c[f+128>>2]|0)+(s<<3)>>3]=+h[t+104>>3];q=q+1|0}}else{if((f|0)!=(f|0)){u=1}else{Ji(4832,18632,692);u=1}}}}u=c[f+68>>2]|0;while(1){if((u|0)==0){break}if((c[u>>2]|0)!=0){v=1}else{Ji(16456,18632,696);v=1}if((Hc[c[u>>2]&127](f,c[u+4>>2]|0)|0)==0){w=1}else{Ji(16088,18632,697);w=1}u=c[u+8>>2]|0}i=e;return}function ff(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;f=b;b=d;if((c[f>>2]|0)==(c[b+24>>2]|0)){g=1}else{Ji(15696,18632,708);g=1}if((c[f>>2]|0)==1){j=1.0}else{if((c[f>>2]|0)==2){j=-1.0}else{if((f|0)!=(f|0)){k=1}else{Ji(4832,18632,714);k=1}}}if((c[f+4>>2]|0)==(c[b+48>>2]|0)){l=1}else{Ji(15336,18632,715);l=1}if((c[f+8>>2]|0)==(c[b+52>>2]|0)){m=1}else{Ji(15088,18632,716);m=1}if((c[f+12>>2]|0)==(c[b+56>>2]|0)){n=1}else{Ji(14856,18632,717);n=1}if((c[f+92>>2]|0)!=1){if((c[f+92>>2]|0)==2){c[b+120>>2]=c[f+108>>2];h[b+128>>3]=+h[b+32>>3];o=1;while(1){if((o|0)>(c[b+48>>2]|0)){break}p=c[(c[b+60>>2]|0)+(o<<2)>>2]|0;if((c[f+96>>2]|0)!=0){h[p+88>>3]=j*+h[(c[f+124>>2]|0)+(o<<3)>>3]*+h[p+48>>3]}else{h[p+88>>3]=j*+h[(c[f+124>>2]|0)+(o<<3)>>3]}o=o+1|0}q=1;while(1){if((q|0)>(c[b+52>>2]|0)){break}r=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;if((c[f+96>>2]|0)!=0){h[r+88>>3]=+h[(c[f+128>>2]|0)+(q<<3)>>3]*+h[r+56>>3]}else{h[r+88>>3]=+h[(c[f+128>>2]|0)+(q<<3)>>3]}n=b+128|0;h[n>>3]=+h[n>>3]+ +h[r+40>>3]*+h[r+88>>3];q=q+1|0}o=1;while(1){if((o|0)>(c[b+48>>2]|0)){break}p=c[(c[b+60>>2]|0)+(o<<2)>>2]|0;s=0.0;n=c[p+40>>2]|0;while(1){if((n|0)==0){break}s=s+ +h[n+8>>3]*+h[(c[n+4>>2]|0)+88>>3];n=c[n+20>>2]|0}h[p+80>>3]=s;o=o+1|0}q=1;while(1){if((q|0)>(c[b+52>>2]|0)){break}r=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;t=+h[r+40>>3];n=c[r+48>>2]|0;while(1){if((n|0)==0){break}t=t- +h[n+8>>3]*+h[(c[n>>2]|0)+88>>3];n=c[n+28>>2]|0}h[r+96>>3]=t;q=q+1|0}}else{if((c[f+92>>2]|0)==3){if((c[f+96>>2]|0)!=0){Ji(10832,18632,873);u=1}else{u=1}c[b+136>>2]=c[f+112>>2];h[b+144>>3]=+h[b+32>>3];q=1;while(1){if((q|0)>(c[b+52>>2]|0)){break}r=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;h[r+104>>3]=+h[(c[f+128>>2]|0)+(q<<3)>>3];if((c[r+12>>2]|0)==2){if(+h[r+104>>3]==+T(+h[r+104>>3])){v=1}else{Ji(10408,18632,886);v=1}}u=b+144|0;h[u>>3]=+h[u>>3]+ +h[r+40>>3]*+h[r+104>>3];q=q+1|0}o=1;while(1){if((o|0)>(c[b+48>>2]|0)){break}p=c[(c[b+60>>2]|0)+(o<<2)>>2]|0;s=0.0;v=c[p+40>>2]|0;while(1){if((v|0)==0){break}s=s+ +h[v+8>>3]*+h[(c[v+4>>2]|0)+104>>3];v=c[v+20>>2]|0}h[p+96>>3]=s;o=o+1|0}}else{if((f|0)!=(f|0)){w=1}else{Ji(4832,18632,904);w=1}}}i=e;return}c[b+76>>2]=0;c[b+92>>2]=c[f+100>>2];c[b+96>>2]=c[f+104>>2];h[b+104>>3]=+h[b+32>>3];c[b+116>>2]=0;o=1;while(1){if((o|0)>(c[b+48>>2]|0)){break}p=c[(c[b+60>>2]|0)+(o<<2)>>2]|0;c[p+56>>2]=a[(c[f+116>>2]|0)+o|0]|0;if((c[f+96>>2]|0)!=0){h[p+72>>3]=j*+h[(c[f+124>>2]|0)+(o<<3)>>3]*+h[p+48>>3]}else{h[p+72>>3]=j*+h[(c[f+124>>2]|0)+(o<<3)>>3]}if((c[p+56>>2]|0)==1){h[p+72>>3]=0.0}else{if((c[p+56>>2]|0)==2){do{if((c[p+20>>2]|0)==2){x=1}else{if((c[p+20>>2]|0)==4){x=1;break}Ji(14400,18632,739);x=1}}while(0);h[p+64>>3]=+h[p+24>>3]}else{if((c[p+56>>2]|0)==3){do{if((c[p+20>>2]|0)==3){y=1}else{if((c[p+20>>2]|0)==4){y=1;break}Ji(13864,18632,743);y=1}}while(0);h[p+64>>3]=+h[p+32>>3]}else{if((c[p+56>>2]|0)==4){if((c[p+20>>2]|0)==1){z=1}else{Ji(13344,18632,747);z=1}h[p+64>>3]=0.0}else{if((c[p+56>>2]|0)==5){if((c[p+20>>2]|0)==5){A=1}else{Ji(12832,18632,751);A=1}h[p+64>>3]=+h[p+24>>3]}else{if((p|0)!=(p|0)){B=1}else{Ji(12552,18632,755);B=1}}}}}}o=o+1|0}q=1;while(1){if((q|0)>(c[b+52>>2]|0)){break}r=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;c[r+64>>2]=a[(c[f+120>>2]|0)+q|0]|0;if((c[f+96>>2]|0)!=0){h[r+72>>3]=+h[(c[f+128>>2]|0)+(q<<3)>>3]*+h[r+56>>3]}else{h[r+72>>3]=+h[(c[f+128>>2]|0)+(q<<3)>>3]}if((c[r+64>>2]|0)==1){h[r+80>>3]=0.0}else{if((c[r+64>>2]|0)==2){do{if((c[r+16>>2]|0)==2){C=1}else{if((c[r+16>>2]|0)==4){C=1;break}Ji(12312,18632,772);C=1}}while(0);h[r+72>>3]=+h[r+24>>3]}else{if((c[r+64>>2]|0)==3){do{if((c[r+16>>2]|0)==3){D=1}else{if((c[r+16>>2]|0)==4){D=1;break}Ji(12064,18632,776);D=1}}while(0);h[r+72>>3]=+h[r+32>>3]}else{if((c[r+64>>2]|0)==4){if((c[r+16>>2]|0)==1){E=1}else{Ji(11832,18632,780);E=1}h[r+72>>3]=0.0}else{if((c[r+64>>2]|0)==5){if((c[r+16>>2]|0)==5){F=1}else{Ji(11560,18632,784);F=1}h[r+72>>3]=+h[r+24>>3]}else{if((r|0)!=(r|0)){G=1}else{Ji(11264,18632,788);G=1}}}}}}B=b+104|0;h[B>>3]=+h[B>>3]+ +h[r+40>>3]*+h[r+72>>3];q=q+1|0}o=1;while(1){if((o|0)>(c[b+48>>2]|0)){break}p=c[(c[b+60>>2]|0)+(o<<2)>>2]|0;if((c[p+56>>2]|0)==1){j=0.0;G=c[p+40>>2]|0;while(1){if((G|0)==0){break}j=j+ +h[G+8>>3]*+h[(c[G+4>>2]|0)+72>>3];G=c[G+20>>2]|0}h[p+64>>3]=j}o=o+1|0}q=1;while(1){if((q|0)>(c[b+52>>2]|0)){break}r=c[(c[b+64>>2]|0)+(q<<2)>>2]|0;if((c[r+64>>2]|0)!=1){s=+h[r+40>>3];o=c[r+48>>2]|0;while(1){if((o|0)==0){break}s=s- +h[o+8>>3]*+h[(c[o>>2]|0)+72>>3];o=c[o+28>>2]|0}h[r+80>>3]=s}q=q+1|0}i=e;return}function gf(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;if((c[d+16>>2]|0)!=0){Ui(c[d+16>>2]|0)}if((c[d+64>>2]|0)!=0){Ui(c[d+64>>2]|0)}if((c[d+84>>2]|0)!=0){Bi(c[d+84>>2]|0)}if((c[d+88>>2]|0)!=0){Bi(c[d+88>>2]|0)}if((c[d+116>>2]|0)!=0){Bi(c[d+116>>2]|0)}if((c[d+124>>2]|0)!=0){Bi(c[d+124>>2]|0)}if((c[d+120>>2]|0)!=0){Bi(c[d+120>>2]|0)}if((c[d+128>>2]|0)==0){e=d;f=e;Bi(f);i=b;return}Bi(c[d+128>>2]|0);e=d;f=e;Bi(f);i=b;return}function hf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if(+h[a+8>>3]==-1.7976931348623157e+308){if(+h[a+16>>3]==1.7976931348623157e+308){f=1}else{g=3}}else{g=3}if((g|0)==3){Ji(11416,18592,82);f=1}f=_e(e,48,4)|0;c[f>>2]=c[a>>2];af(e,a);i=d;return}function jf(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;f=b;b=d;if((c[f+92>>2]|0)==1){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=1}if((c[f+92>>2]|0)==3){i=e;return 0}h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=0.0;i=e;return 0}function kf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0.0;d=i;e=a;a=b;if(+h[a+16>>3]==+h[a+24>>3]){f=1}else{Ji(19320,18592,1113);f=1}f=_e(e,80,16)|0;c[f>>2]=c[a>>2];h[f+8>>3]=+h[a+16>>3];f=e+32|0;h[f>>3]=+h[f>>3]+ +h[a+32>>3]*+h[a+16>>3];f=c[a+40>>2]|0;while(1){if((f|0)==0){break}b=c[f>>2]|0;if(+h[b+8>>3]==+h[b+16>>3]){g=b+8|0;j=+h[g>>3]- +h[f+8>>3]*+h[a+16>>3];h[g>>3]=j;h[b+16>>3]=j}else{if(+h[b+8>>3]!=-1.7976931348623157e+308){g=b+8|0;h[g>>3]=+h[g>>3]- +h[f+8>>3]*+h[a+16>>3]}if(+h[b+16>>3]!=1.7976931348623157e+308){g=b+16|0;h[g>>3]=+h[g>>3]- +h[f+8>>3]*+h[a+16>>3]}}f=c[f+28>>2]|0}bf(e,a);i=d;return}function lf(b,d){b=b|0;d=d|0;var e=0;e=b;b=d;if((c[e+92>>2]|0)==1){a[(c[e+120>>2]|0)+(c[b>>2]|0)|0]=5}h[(c[e+128>>2]|0)+(c[b>>2]<<3)>>3]=+h[b+8>>3];i=i;return 0}function mf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0,l=0,m=0,n=0.0,o=0.0;d=i;e=b;if(+h[e+8>>3]!=-1.7976931348623157e+308){f=1}else{Ji(13600,18592,1232);f=1}if(+h[e+16>>3]!=1.7976931348623157e+308){g=1}else{Ji(7176,18592,1233);g=1}if(+h[e+8>>3]<+h[e+16>>3]){j=1}else{Ji(10176,18592,1234);j=1}k=+U(+(+h[e+8>>3]))*1.0e-12+1.0e-9;if(+h[e+16>>3]- +h[e+8>>3]>k){l=0;m=l;i=d;return m|0}j=_e(a,78,4)|0;c[j>>2]=c[e>>2];n=(+h[e+16>>3]+ +h[e+8>>3])*.5;o=+T(n+.5);if(+U(+(n-o))<=k){n=o}o=n;h[e+16>>3]=o;h[e+8>>3]=o;l=1;m=l;i=d;return m|0}function nf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0;e=i;f=b;b=d;if((c[f+92>>2]|0)==1){if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)==1){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=1}else{if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)!=5){g=1;j=g;i=e;return j|0}if(+h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]>=0.0){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=2}else{a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=3}}}g=0;j=g;i=e;return j|0}function of(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0,l=0,m=0,n=0.0,o=0.0;d=i;e=a;a=b;if(+h[a+16>>3]!=-1.7976931348623157e+308){f=1}else{Ji(3904,18592,1374);f=1}if(+h[a+24>>3]!=1.7976931348623157e+308){g=1}else{Ji(2200,18592,1375);g=1}if(+h[a+16>>3]<+h[a+24>>3]){j=1}else{Ji(3008,18592,1376);j=1}k=+U(+(+h[a+16>>3]))*1.0e-12+1.0e-9;if(+h[a+24>>3]- +h[a+16>>3]>k){l=0;m=l;i=d;return m|0}j=_e(e,88,24)|0;c[j>>2]=c[a>>2];h[j+8>>3]=+h[a+32>>3];c[j+16>>2]=0;if((c[e+92>>2]|0)==1){g=c[a+40>>2]|0;while(1){if((g|0)==0){break}f=Si(c[e+64>>2]|0,24)|0;c[f>>2]=c[c[g>>2]>>2];h[f+8>>3]=+h[g+8>>3];c[f+16>>2]=c[j+16>>2];c[j+16>>2]=f;g=c[g+28>>2]|0}}n=(+h[a+24>>3]+ +h[a+16>>3])*.5;o=+T(n+.5);if(+U(+(n-o))<=k){n=o}o=n;h[a+24>>3]=o;h[a+16>>3]=o;l=1;m=l;i=d;return m|0}function pf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0;e=i;f=b;b=d;if((c[f+92>>2]|0)==1){if((a[(c[f+120>>2]|0)+(c[b>>2]|0)|0]|0)==1){a[(c[f+120>>2]|0)+(c[b>>2]|0)|0]=1}else{if((a[(c[f+120>>2]|0)+(c[b>>2]|0)|0]|0)!=5){g=1;j=g;i=e;return j|0}k=+h[b+8>>3];d=c[b+16>>2]|0;while(1){if((d|0)==0){break}k=k- +h[d+8>>3]*+h[(c[f+124>>2]|0)+(c[d>>2]<<3)>>3];d=c[d+16>>2]|0}if(k>=0.0){a[(c[f+120>>2]|0)+(c[b>>2]|0)|0]=2}else{a[(c[f+120>>2]|0)+(c[b>>2]|0)|0]=3}}}g=0;j=g;i=e;return j|0}function qf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0,j=0,k=0;d=i;e=a;a=b;f=.001;if((c[a+24>>2]|0)==0){g=1}else{Ji(11280,18544,81);g=1}do{if(!(+h[a+8>>3]>f)){if(+h[a+16>>3]<-0.0-f){break}h[a+8>>3]=-1.7976931348623157e+308;h[a+16>>3]=1.7976931348623157e+308;hf(e,a);j=0;k=j;i=d;return k|0}}while(0);j=1;k=j;i=d;return k|0}function rf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0;e=i;f=b;b=d;g=.001;if((c[b+40>>2]|0)==0){j=1}else{Ji(13560,18544,189);j=1}do{if(+h[b+32>>3]>g){if(!(+h[b+16>>3]==-1.7976931348623157e+308)){break}k=1;l=k;i=e;return l|0}}while(0);do{if(+h[b+32>>3]<-0.0-g){if(!(+h[b+24>>3]==1.7976931348623157e+308)){break}k=1;l=k;i=e;return l|0}}while(0);j=_e(f,82,8)|0;c[j>>2]=c[b>>2];do{if(+h[b+16>>3]==-1.7976931348623157e+308){if(!(+h[b+24>>3]==1.7976931348623157e+308)){m=12;break}a[j+4|0]=4;h[b+24>>3]=0.0;h[b+16>>3]=0.0}else{m=12}}while(0);if((m|0)==12){a:do{if(+h[b+24>>3]==1.7976931348623157e+308){m=14}else{do{if(+h[b+16>>3]==-1.7976931348623157e+308){m=17}else{if(!(+h[b+16>>3]!=+h[b+24>>3])){a[j+4|0]=5;break}if(+h[b+32>>3]>=2.220446049250313e-16){m=14;break a}if(+h[b+32>>3]<=-2.220446049250313e-16){m=17;break}g=+U(+(+h[b+16>>3]));if(g<=+U(+(+h[b+24>>3]))){m=14;break a}else{m=17;break}}}while(0);if((m|0)==17){a[j+4|0]=3;h[b+16>>3]=+h[b+24>>3]}}}while(0);if((m|0)==14){a[j+4|0]=2;h[b+24>>3]=+h[b+16>>3]}}kf(f,b);k=0;l=k;i=e;return l|0}function sf(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;f=b;b=d;if((c[f+92>>2]|0)!=1){i=e;return 0}a[(c[f+120>>2]|0)+(c[b>>2]|0)|0]=a[b+4|0]|0;i=e;return 0}function tf(b,c,d){b=b|0;c=c|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0;e=i;f=b;b=c;g=d;if((f|0)==(f|0)){j=1}else{Ji(10096,18544,294);j=1}if(+h[b+16>>3]<+h[b+24>>3]){k=1}else{Ji(7104,18544,296);k=1}do{if((a[b+8|0]|0)!=0){d=+T(g+.5);if(+U(+(g-d))<=1.0e-5){g=d;break}else{l=2;m=l;i=e;return m|0}}}while(0);do{if(+h[b+16>>3]!=-1.7976931348623157e+308){if((a[b+8|0]|0)!=0){n=1.0e-5}else{n=+U(+(+h[b+16>>3]))*1.0e-8+1.0e-5}o=n;if(g<+h[b+16>>3]-o){l=1;m=l;i=e;return m|0}if(!(g<+h[b+16>>3]+.001*o)){break}h[b+24>>3]=+h[b+16>>3];l=0;m=l;i=e;return m|0}}while(0);do{if(+h[b+24>>3]!=1.7976931348623157e+308){if((a[b+8|0]|0)!=0){p=1.0e-5}else{p=+U(+(+h[b+24>>3]))*1.0e-8+1.0e-5}o=p;if(g>+h[b+24>>3]+o){l=1;m=l;i=e;return m|0}if(!(g>+h[b+24>>3]-.001*o)){break}h[b+16>>3]=+h[b+24>>3];l=0;m=l;i=e;return m|0}}while(0);o=g;h[b+24>>3]=o;h[b+16>>3]=o;l=0;m=l;i=e;return m|0}function uf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0;d=i;e=a;a=b;if(+h[a+8>>3]==+h[a+16>>3]){f=1}else{Ji(5904,18544,433);f=1}if((c[a+24>>2]|0)!=0){if((c[(c[a+24>>2]|0)+20>>2]|0)==0){g=1}else{j=5}}else{j=5}if((j|0)==5){Ji(4728,18544,434);g=1}g=c[a+24>>2]|0;f=c[g+4>>2]|0;b=tf(e,f,+h[a+8>>3]/+h[g+8>>3])|0;if(0<=(b|0)){if((b|0)<=2){k=1}else{j=8}}else{j=8}if((j|0)==8){Ji(3880,18544,440);k=1}if((b|0)!=0){l=b;m=l;i=d;return m|0}b=_e(e,46,32)|0;c[b>>2]=c[a>>2];c[b+4>>2]=c[f>>2];h[b+8>>3]=+h[g+8>>3];h[b+16>>3]=+h[f+32>>3];c[b+24>>2]=0;if((c[e+92>>2]|0)!=3){g=c[f+40>>2]|0;while(1){if((g|0)==0){break}if((c[g>>2]|0)!=(a|0)){f=Si(c[e+64>>2]|0,24)|0;c[f>>2]=c[c[g>>2]>>2];h[f+8>>3]=+h[g+8>>3];c[f+16>>2]=c[b+24>>2];c[b+24>>2]=f}g=c[g+28>>2]|0}}af(e,a);l=0;m=l;i=d;return m|0}function vf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0;e=i;f=b;b=d;do{if((c[f+92>>2]|0)==1){if((a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]|0)==5){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=5;a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=1;break}g=1;j=g;i=e;return j|0}}while(0);if((c[f+92>>2]|0)!=3){k=+h[b+16>>3];d=c[b+24>>2]|0;while(1){if((d|0)==0){break}k=k- +h[d+8>>3]*+h[(c[f+124>>2]|0)+(c[d>>2]<<3)>>3];d=c[d+16>>2]|0}h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=k/+h[b+8>>3]}g=0;j=g;i=e;return j|0}function wf(b,c,d){b=b|0;c=c|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0;e=i;f=b;b=c;g=d;if((f|0)==(f|0)){j=1}else{Ji(10096,18544,555);j=1}if(+h[b+16>>3]<+h[b+24>>3]){k=1}else{Ji(7104,18544,557);k=1}if(g!=-1.7976931348623157e+308){l=1}else{Ji(2992,18544,559);l=1}if((a[b+8|0]|0)!=0){d=+T(g+.5);if(+U(+(g-d))<=1.0e-5){g=d}else{g=+ea(g)}}do{if(+h[b+16>>3]!=-1.7976931348623157e+308){if((a[b+8|0]|0)!=0){m=.001}else{m=+U(+(+h[b+16>>3]))*1.0e-6+.001}n=m;if(!(g<+h[b+16>>3]+n)){break}o=0;p=o;i=e;return p|0}}while(0);do{if(+h[b+24>>3]!=1.7976931348623157e+308){if((a[b+8|0]|0)!=0){q=1.0e-5}else{q=+U(+(+h[b+24>>3]))*1.0e-8+1.0e-5}n=q;if(g>+h[b+24>>3]+n){o=4;p=o;i=e;return p|0}if(!(g>+h[b+24>>3]-.001*n)){break}h[b+16>>3]=+h[b+24>>3];o=3;p=o;i=e;return p|0}}while(0);if(+h[b+16>>3]==-1.7976931348623157e+308){o=2}else{do{if((a[b+8|0]|0)!=0){if(!(g>+h[b+16>>3]+.5)){r=33;break}o=2}else{r=33}}while(0);if((r|0)==33){if(g>+h[b+16>>3]+(+U(+(+h[b+16>>3]))+1.0)*.3){o=2}else{o=1}}}h[b+16>>3]=g;p=o;i=e;return p|0}function xf(b,c,d){b=b|0;c=c|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0;e=i;f=b;b=c;g=d;if((f|0)==(f|0)){j=1}else{Ji(10096,18544,667);j=1}if(+h[b+16>>3]<+h[b+24>>3]){k=1}else{Ji(7104,18544,669);k=1}if(g!=1.7976931348623157e+308){l=1}else{Ji(2184,18544,671);l=1}if((a[b+8|0]|0)!=0){d=+T(g+.5);if(+U(+(g-d))<=1.0e-5){g=d}else{g=+T(g)}}do{if(+h[b+24>>3]!=1.7976931348623157e+308){if((a[b+8|0]|0)!=0){m=.001}else{m=+U(+(+h[b+24>>3]))*1.0e-6+.001}n=m;if(!(g>+h[b+24>>3]-n)){break}o=0;p=o;i=e;return p|0}}while(0);do{if(+h[b+16>>3]!=-1.7976931348623157e+308){if((a[b+8|0]|0)!=0){q=1.0e-5}else{q=+U(+(+h[b+16>>3]))*1.0e-8+1.0e-5}n=q;if(g<+h[b+16>>3]-n){o=4;p=o;i=e;return p|0}if(!(g<+h[b+16>>3]+.001*n)){break}h[b+24>>3]=+h[b+16>>3];o=3;p=o;i=e;return p|0}}while(0);if(+h[b+24>>3]==1.7976931348623157e+308){o=2}else{do{if((a[b+8|0]|0)!=0){if(!(g<+h[b+24>>3]-.5)){r=33;break}o=2}else{r=33}}while(0);if((r|0)==33){if(g<+h[b+24>>3]-(+U(+(+h[b+24>>3]))+1.0)*.3){o=2}else{o=1}}}h[b+24>>3]=g;p=o;i=e;return p|0}function yf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;f=b;b=d;do{if(+h[b+8>>3]!=-1.7976931348623157e+308){g=1}else{if(+h[b+16>>3]!=1.7976931348623157e+308){g=1;break}Ji(21592,18544,894);g=1}}while(0);if(+h[b+8>>3]<+h[b+16>>3]){j=1}else{Ji(20328,18544,895);j=1}if((c[b+24>>2]|0)!=0){if((c[(c[b+24>>2]|0)+20>>2]|0)==0){k=1}else{l=8}}else{l=8}if((l|0)==8){Ji(4728,18544,896);k=1}k=c[b+24>>2]|0;j=c[k+4>>2]|0;if(+h[j+16>>3]<+h[j+24>>3]){m=1}else{Ji(7104,18544,900);m=1}if(+h[k+8>>3]>0.0){if(+h[b+8>>3]==-1.7976931348623157e+308){n=-1.7976931348623157e+308}else{n=+h[b+8>>3]/+h[k+8>>3]}o=n;if(+h[b+16>>3]==1.7976931348623157e+308){p=1.7976931348623157e+308}else{p=+h[b+16>>3]/+h[k+8>>3]}q=p}else{if(+h[b+16>>3]==1.7976931348623157e+308){r=-1.7976931348623157e+308}else{r=+h[b+16>>3]/+h[k+8>>3]}o=r;if(+h[b+8>>3]==-1.7976931348623157e+308){s=1.7976931348623157e+308}else{s=+h[b+8>>3]/+h[k+8>>3]}q=s}do{if(o==-1.7976931348623157e+308){t=0}else{t=wf(f,j,o)|0;if(0<=(t|0)){if((t|0)<=4){u=1}else{l=30}}else{l=30}if((l|0)==30){Ji(19280,18544,914);u=1}if((t|0)!=4){break}v=4;w=v;i=e;return w|0}}while(0);if(q==1.7976931348623157e+308){x=0}else{do{if((t|0)==3){x=0}else{x=xf(f,j,q)|0;if(0<=(x|0)){if((x|0)<=4){y=1}else{l=40}}else{l=40}if((l|0)==40){Ji(18e3,18544,927);y=1}if((x|0)!=4){break}v=4;w=v;i=e;return w|0}}while(0)}do{if((t|0)==0){if((x|0)!=0){break}h[b+8>>3]=-1.7976931348623157e+308;h[b+16>>3]=1.7976931348623157e+308;hf(f,b);v=0;w=v;i=e;return w|0}}while(0);y=_e(f,64,48)|0;c[y>>2]=c[b>>2];c[y+4>>2]=c[j>>2];h[y+8>>3]=+h[k+8>>3];h[y+16>>3]=+h[j+32>>3];h[y+24>>3]=+h[b+8>>3];h[y+32>>3]=+h[b+16>>3];a[y+40|0]=t;a[y+41|0]=x;c[y+44>>2]=0;if((c[f+92>>2]|0)!=3){l=c[j+40>>2]|0;while(1){if((l|0)==0){break}if((l|0)!=(k|0)){j=Si(c[f+64>>2]|0,24)|0;c[j>>2]=c[c[l>>2]>>2];h[j+8>>3]=+h[l+8>>3];c[j+16>>2]=c[y+44>>2];c[y+44>>2]=j}l=c[l+28>>2]|0}}af(f,b);if((t|0)>=(x|0)){z=t}else{z=x}v=z;w=v;i=e;return w|0}function zf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0.0,j=0,k=0,l=0;e=i;f=b;b=d;if((c[f+92>>2]|0)!=3){g=+h[b+16>>3];d=c[b+44>>2]|0;while(1){if((d|0)==0){break}g=g- +h[d+8>>3]*+h[(c[f+124>>2]|0)+(c[d>>2]<<3)>>3];d=c[d+16>>2]|0}if((c[f+92>>2]|0)==1){if((a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]|0)==1){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=1;h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=0.0}else{a:do{if((a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]|0)==2){j=12}else{b:do{if((a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]|0)==3){j=18}else{if((a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]|0)!=5){k=1;l=k;i=e;return l|0}c:do{if(g>1.0e-7){if(+h[b+8>>3]>0.0){if(!(+h[b+24>>3]!=-1.7976931348623157e+308)){j=26}}else{j=26}do{if((j|0)==26){if(+h[b+8>>3]<0.0){if(+h[b+32>>3]!=1.7976931348623157e+308){break}}if((a[b+40|0]|0)==0){break}break c}}while(0);a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=2;j=12;break a}}while(0);d:do{if(g<-1.0e-7){if(+h[b+8>>3]>0.0){if(!(+h[b+32>>3]!=1.7976931348623157e+308)){j=34}}else{j=34}do{if((j|0)==34){if(+h[b+8>>3]<0.0){if(+h[b+24>>3]!=-1.7976931348623157e+308){break}}if((a[b+41|0]|0)==0){break}break d}}while(0);a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=3;j=18;break b}}while(0);do{if(+h[b+24>>3]!=-1.7976931348623157e+308){if(!(+h[b+32>>3]==1.7976931348623157e+308)){j=42;break}a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=2}else{j=42}}while(0);if((j|0)==42){do{if(+h[b+24>>3]==-1.7976931348623157e+308){if(!(+h[b+32>>3]!=1.7976931348623157e+308)){j=45;break}a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=3}else{j=45}}while(0);e:do{if((j|0)==45){do{if(+h[b+24>>3]!=-1.7976931348623157e+308){if(!(+h[b+32>>3]!=1.7976931348623157e+308)){break}if(+h[b+8>>3]*+h[(c[f+128>>2]|0)+(c[b+4>>2]<<3)>>3]<=(+h[b+24>>3]+ +h[b+32>>3])*.5){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=2}else{a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=3}break e}}while(0);k=1;l=k;i=e;return l|0}}while(0)}a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=1;h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=g/+h[b+8>>3]}}while(0);if((j|0)==18){if((a[b+41|0]|0)!=0){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=+h[b+8>>3]>0.0?3:2;a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=1;h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=g/+h[b+8>>3]}else{a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=1;h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=0.0}}}}while(0);if((j|0)==12){if((a[b+40|0]|0)!=0){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=+h[b+8>>3]>0.0?2:3;a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=1;h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=g/+h[b+8>>3]}else{a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=1;h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=0.0}}}}if((c[f+92>>2]|0)==2){if(g>2.220446049250313e-16){if((a[b+40|0]|0)!=0){j=65}else{j=63}}else{j=63}do{if((j|0)==63){if(g<-2.220446049250313e-16){if((a[b+41|0]|0)!=0){j=65;break}}h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=0.0}}while(0);if((j|0)==65){h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=g/+h[b+8>>3]}}}k=0;l=k;i=e;return l|0}function Af(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0.0;e=i;f=b;b=d;if((a[b+8|0]|0)!=0){Ji(16784,18544,1247);g=1}else{g=1}if(+h[b+16>>3]<+h[b+24>>3]){j=1}else{Ji(7104,18544,1248);j=1}if((c[b+40>>2]|0)!=0){if((c[(c[b+40>>2]|0)+28>>2]|0)==0){k=1}else{l=7}}else{l=7}if((l|0)==7){Ji(16408,18544,1249);k=1}k=c[b+40>>2]|0;l=c[k>>2]|0;if(+h[l+8>>3]==+h[l+16>>3]){m=1}else{Ji(5904,18544,1253);m=1}m=_e(f,68,40)|0;c[m>>2]=c[l>>2];c[m+4>>2]=c[b>>2];h[m+8>>3]=+h[k+8>>3];h[m+16>>3]=+h[l+8>>3];h[m+24>>3]=+h[b+32>>3];c[m+32>>2]=0;k=c[l+24>>2]|0;while(1){if((k|0)==0){break}if((c[k+4>>2]|0)!=(b|0)){j=Si(c[f+64>>2]|0,24)|0;c[j>>2]=c[c[k+4>>2]>>2];h[j+8>>3]=+h[k+8>>3];c[j+16>>2]=c[m+32>>2];c[m+32>>2]=j;j=(c[k+4>>2]|0)+32|0;h[j>>3]=+h[j>>3]- +h[m+24>>3]*(+h[k+8>>3]/+h[m+8>>3])}k=c[k+20>>2]|0}k=f+32|0;h[k>>3]=+h[k>>3]+ +h[m+24>>3]*(+h[m+16>>3]/+h[m+8>>3]);if(+h[m+8>>3]>0.0){if(+h[b+24>>3]==1.7976931348623157e+308){n=-1.7976931348623157e+308}else{n=+h[m+16>>3]- +h[m+8>>3]*+h[b+24>>3]}h[l+8>>3]=n;if(+h[b+16>>3]==-1.7976931348623157e+308){o=1.7976931348623157e+308}else{o=+h[m+16>>3]- +h[m+8>>3]*+h[b+16>>3]}h[l+16>>3]=o;p=f;q=b;bf(p,q);i=e;return}else{if(+h[b+16>>3]==-1.7976931348623157e+308){r=-1.7976931348623157e+308}else{r=+h[m+16>>3]- +h[m+8>>3]*+h[b+16>>3]}h[l+8>>3]=r;if(+h[b+24>>3]==1.7976931348623157e+308){s=1.7976931348623157e+308}else{s=+h[m+16>>3]- +h[m+8>>3]*+h[b+24>>3]}h[l+16>>3]=s;p=f;q=b;bf(p,q);i=e;return}}function Bf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0.0;e=i;f=b;b=d;if((c[f+92>>2]|0)==1){do{if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)==1){g=4}else{if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)==4){g=4;break}do{if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)==2){a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=+h[b+8>>3]>0.0?3:2}else{if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)==3){a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=+h[b+8>>3]>0.0?2:3;break}else{j=1;k=j;i=e;return k|0}}}while(0)}}while(0);if((g|0)==4){a[(c[f+120>>2]|0)+(c[b+4>>2]|0)|0]=a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0}a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=5}if((c[f+92>>2]|0)!=3){g=(c[f+124>>2]|0)+(c[b>>2]<<3)|0;h[g>>3]=+h[g>>3]+ +h[b+24>>3]/+h[b+8>>3]}l=+h[b+16>>3];g=c[b+32>>2]|0;while(1){if((g|0)==0){break}l=l- +h[g+8>>3]*+h[(c[f+128>>2]|0)+(c[g>>2]<<3)>>3];g=c[g+16>>2]|0}h[(c[f+128>>2]|0)+(c[b+4>>2]<<3)>>3]=l/+h[b+8>>3];j=0;k=j;i=e;return k|0}



function ss(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(!(l>>>0<f>>>0)){m=0;return m|0}d=i;i=l;a:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=26;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=26;break a}c[j>>2]=p+1;a[p]=l}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if(!((l&65535)>>>0<56320>>>0)){if((l&65535)>>>0<57344>>>0){m=2;o=26;break a}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((h-i|0)<4){m=1;o=26;break a}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=26;break a}if((d-(c[j>>2]|0)|0)<4){m=1;o=26;break a}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=26;break a}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=n>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=q&63|128}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=26;break}}if((o|0)==26){return m|0}return 0}function ts(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=us(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function us(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if(!((a[h]|0)==-17)){m=h;break}if(!((a[h+1|0]|0)==-69)){m=h;break}if(!((a[h+2|0]|0)==-65)){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);a:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;b:while(1){if(!(e>>>0<i>>>0)){o=n;break a}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=41;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=n+1}else{if((p&255)>>>0<194>>>0){r=2;s=41;break b}if((p&255)>>>0<224>>>0){if((h-n|0)<2){r=1;s=41;break b}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=41;break b}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=u;c[g>>2]=n+2;break}if((p&255)>>>0<240>>>0){if((h-n|0)<3){r=1;s=41;break b}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==237){if(!((u&-32)<<24>>24==-128)){r=2;s=41;break b}}else if((q|0)==224){if(!((u&-32)<<24>>24==-96)){r=2;s=41;break b}}else{if(!((u&-64)<<24>>24==-128)){r=2;s=41;break b}}v=t&255;if((v&192|0)!=128){r=2;s=41;break b}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=t;c[g>>2]=n+3;break}if(!((p&255)>>>0<245>>>0)){r=2;s=41;break b}if((h-n|0)<4){r=1;s=41;break b}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==240){if(!((t+112&255)>>>0<48>>>0)){r=2;s=41;break b}}else if((q|0)==244){if(!((t&-16)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((t&-64)<<24>>24==-128)){r=2;s=41;break b}}w=v&255;if((w&192|0)!=128){r=2;s=41;break b}v=u&255;if((v&192|0)!=128){r=2;s=41;break b}if((l-e|0)<4){r=1;s=41;break b}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=e+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break a}}if((s|0)==41){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function vs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function ws(a){a=a|0;return 0}function xs(a){a=a|0;return 0}function ys(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return zs(c,d,e,1114111,0)|0}function zs(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;b:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break a}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break a}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break a}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==224){if(!((p&-32)<<24>>24==-96)){s=21;break b}}else if((l|0)==237){if(!((p&-32)<<24>>24==-128)){s=23;break b}}else{if(!((p&-64)<<24>>24==-128)){s=25;break b}}t=r&255;if((t&192|0)!=128){m=j;break a}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break a}n=j+3|0;o=i;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}u=j;if((g-u|0)<4){m=j;break a}if((e-i|0)>>>0<2>>>0){m=j;break a}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==240){if(!((t+112&255)>>>0<48>>>0)){s=34;break b}}else if((l|0)==244){if(!((t&-16)<<24>>24==-128)){s=36;break b}}else{if(!((t&-64)<<24>>24==-128)){s=38;break b}}v=p&255;if((v&192|0)!=128){m=j;break a}p=r&255;if((p&192|0)!=128){m=j;break a}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break a}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break a}}if((s|0)==21){w=q-b|0;return w|0}else if((s|0)==23){w=q-b|0;return w|0}else if((s|0)==25){w=q-b|0;return w|0}else if((s|0)==34){w=u-b|0;return w|0}else if((s|0)==36){w=u-b|0;return w|0}else if((s|0)==38){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function As(a){a=a|0;return 4}function Bs(a){a=a|0;wl(a|0);tu(a);return}function Cs(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Ds(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Ds(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(!(f>>>0<d>>>0)){k=0;return k|0}j=g;g=f;a:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=19;break}do{if(f>>>0<128>>>0){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f}else{if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f&63|128;break}else{if((m|0)<4){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=19;break}}if((l|0)==19){return k|0}return 0}function Es(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Fs(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function Fs(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if(!((a[g]|0)==-17)){l=g;break}if(!((a[g+1|0]|0)==-69)){l=g;break}if(!((a[g+2|0]|0)==-65)){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);a:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;b:while(1){if(!(k>>>0<h>>>0)){m=b;break a}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=o;c[f>>2]=b+1}else{if((n&255)>>>0<194>>>0){p=2;q=40;break b}if((n&255)>>>0<224>>>0){if((g-b|0)<2){p=1;q=40;break b}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=40;break b}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+2;break}if((n&255)>>>0<240>>>0){if((g-b|0)<3){p=1;q=40;break b}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==237){if(!((s&-32)<<24>>24==-128)){p=2;q=40;break b}}else if((o|0)==224){if(!((s&-32)<<24>>24==-96)){p=2;q=40;break b}}else{if(!((s&-64)<<24>>24==-128)){p=2;q=40;break b}}t=r&255;if((t&192|0)!=128){p=2;q=40;break b}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=r;c[f>>2]=b+3;break}if(!((n&255)>>>0<245>>>0)){p=2;q=40;break b}if((g-b|0)<4){p=1;q=40;break b}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==244){if(!((r&-16)<<24>>24==-128)){p=2;q=40;break b}}else if((o|0)==240){if(!((r+112&255)>>>0<48>>>0)){p=2;q=40;break b}}else{if(!((r&-64)<<24>>24==-128)){p=2;q=40;break b}}u=t&255;if((u&192|0)!=128){p=2;q=40;break b}t=s&255;if((t&192|0)!=128){p=2;q=40;break b}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break a}}if((q|0)==40){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function Gs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Hs(a){a=a|0;return 0}function Is(a){a=a|0;return 0}function Js(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ks(c,d,e,1114111,0)|0}function Ks(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;b:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break a}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break a}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break a}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if(!((o&-32)<<24>>24==-96)){r=21;break b}}else if((l|0)==237){if(!((o&-32)<<24>>24==-128)){r=23;break b}}else{if(!((o&-64)<<24>>24==-128)){r=25;break b}}s=q&255;if((s&192|0)!=128){m=j;break a}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break a}n=j+3|0;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}t=j;if((g-t|0)<4){m=j;break a}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==244){if(!((s&-16)<<24>>24==-128)){r=35;break b}}else if((l|0)==240){if(!((s+112&255)>>>0<48>>>0)){r=33;break b}}else{if(!((s&-64)<<24>>24==-128)){r=37;break b}}u=o&255;if((u&192|0)!=128){m=j;break a}o=q&255;if((o&192|0)!=128){m=j;break a}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break a}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break a}i=i+1|0;j=n}if((r|0)==21){v=p-b|0;return v|0}else if((r|0)==23){v=p-b|0;return v|0}else if((r|0)==25){v=p-b|0;return v|0}else if((r|0)==33){v=t-b|0;return v|0}else if((r|0)==35){v=t-b|0;return v|0}else if((r|0)==37){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function Ls(a){a=a|0;return 4}function Ms(a){a=a|0;wl(a|0);tu(a);return}function Ns(a){a=a|0;wl(a|0);tu(a);return}function Os(a){a=a|0;c[a>>2]=23944;Xl(a+12|0);wl(a|0);tu(a);return}function Ps(a){a=a|0;c[a>>2]=23944;Xl(a+12|0);wl(a|0);return}function Qs(a){a=a|0;c[a>>2]=23896;Xl(a+16|0);wl(a|0);tu(a);return}function Rs(a){a=a|0;c[a>>2]=23896;Xl(a+16|0);wl(a|0);return}function Ss(b){b=b|0;return a[b+8|0]|0}function Ts(a){a=a|0;return c[a+8>>2]|0}function Us(b){b=b|0;return a[b+9|0]|0}function Vs(a){a=a|0;return c[a+12>>2]|0}function Ws(a,b){a=a|0;b=b|0;Ul(a,b+12|0);return}function Xs(a,b){a=a|0;b=b|0;Ul(a,b+16|0);return}function Ys(a,b){a=a|0;b=b|0;Vl(a,12480,4);return}function Zs(a,b){a=a|0;b=b|0;em(a,12200,Ot(12200)|0);return}function _s(a,b){a=a|0;b=b|0;Vl(a,11960,5);return}function $s(a,b){a=a|0;b=b|0;em(a,11632,Ot(11632)|0);return}function at(b){b=b|0;var d=0;if((a[34976]|0)!=0){d=c[8344]|0;return d|0}if((wb(34976)|0)==0){d=c[8344]|0;return d|0}do{if((a[34864]|0)==0){if((wb(34864)|0)==0){break}Nu(32416,0,168)|0;hb(306,0,t|0)|0}}while(0);Yl(32416,19528)|0;Yl(32428,19360)|0;Yl(32440,19184)|0;Yl(32452,18976)|0;Yl(32464,18936)|0;Yl(32476,18928)|0;Yl(32488,18872)|0;Yl(32500,18696)|0;Yl(32512,18624)|0;Yl(32524,18496)|0;Yl(32536,18304)|0;Yl(32548,18080)|0;Yl(32560,17800)|0;Yl(32572,17648)|0;c[8344]=32416;d=c[8344]|0;return d|0}function bt(b){b=b|0;var d=0;if((a[34920]|0)!=0){d=c[8322]|0;return d|0}if((wb(34920)|0)==0){d=c[8322]|0;return d|0}do{if((a[34840]|0)==0){if((wb(34840)|0)==0){break}Nu(31672,0,168)|0;hb(190,0,t|0)|0}}while(0);hm(31672,21152)|0;hm(31684,21088)|0;hm(31696,21056)|0;hm(31708,20952)|0;hm(31720,20792)|0;hm(31732,20632)|0;hm(31744,20440)|0;hm(31756,20168)|0;hm(31768,20008)|0;hm(31780,19976)|0;hm(31792,19904)|0;hm(31804,19832)|0;hm(31816,19800)|0;hm(31828,19696)|0;c[8322]=31672;d=c[8322]|0;return d|0}function ct(b){b=b|0;var d=0;if((a[34968]|0)!=0){d=c[8342]|0;return d|0}if((wb(34968)|0)==0){d=c[8342]|0;return d|0}do{if((a[34856]|0)==0){if((wb(34856)|0)==0){break}Nu(32128,0,288)|0;hb(208,0,t|0)|0}}while(0);Yl(32128,3072)|0;Yl(32140,2824)|0;Yl(32152,2640)|0;Yl(32164,2624)|0;Yl(32176,2608)|0;Yl(32188,2592)|0;Yl(32200,2568)|0;Yl(32212,2496)|0;Yl(32224,2472)|0;Yl(32236,2384)|0;Yl(32248,2240)|0;Yl(32260,2024)|0;Yl(32272,1888)|0;Yl(32284,1832)|0;Yl(32296,1808)|0;Yl(32308,1792)|0;Yl(32320,2608)|0;Yl(32332,1768)|0;Yl(32344,1696)|0;Yl(32356,21816)|0;Yl(32368,21760)|0;Yl(32380,21688)|0;Yl(32392,21440)|0;Yl(32404,21256)|0;c[8342]=32128;d=c[8342]|0;return d|0}function dt(b){b=b|0;var d=0;if((a[34912]|0)!=0){d=c[8320]|0;return d|0}if((wb(34912)|0)==0){d=c[8320]|0;return d|0}do{if((a[34832]|0)==0){if((wb(34832)|0)==0){break}Nu(31384,0,288)|0;hb(164,0,t|0)|0}}while(0);hm(31384,5352)|0;hm(31396,5296)|0;hm(31408,5232)|0;hm(31420,5160)|0;hm(31432,3680)|0;hm(31444,4848)|0;hm(31456,4552)|0;hm(31468,4352)|0;hm(31480,4312)|0;hm(31492,4256)|0;hm(31504,4192)|0;hm(31516,4152)|0;hm(31528,4136)|0;hm(31540,4112)|0;hm(31552,4048)|0;hm(31564,3944)|0;hm(31576,3680)|0;hm(31588,3504)|0;hm(31600,3488)|0;hm(31612,3472)|0;hm(31624,3448)|0;hm(31636,3400)|0;hm(31648,3376)|0;hm(31660,3304)|0;c[8320]=31384;d=c[8320]|0;return d|0}function et(b){b=b|0;var d=0;if((a[34984]|0)!=0){d=c[8346]|0;return d|0}if((wb(34984)|0)==0){d=c[8346]|0;return d|0}do{if((a[34872]|0)==0){if((wb(34872)|0)==0){break}Nu(32584,0,288)|0;hb(162,0,t|0)|0}}while(0);Yl(32584,5456)|0;Yl(32596,5432)|0;c[8346]=32584;d=c[8346]|0;return d|0}function ft(b){b=b|0;var d=0;if((a[34928]|0)!=0){d=c[8324]|0;return d|0}if((wb(34928)|0)==0){d=c[8324]|0;return d|0}do{if((a[34848]|0)==0){if((wb(34848)|0)==0){break}Nu(31840,0,288)|0;hb(280,0,t|0)|0}}while(0);hm(31840,6072)|0;hm(31852,5936)|0;c[8324]=31840;d=c[8324]|0;return d|0}function gt(b){b=b|0;if((a[34992]|0)!=0){return 33392}if((wb(34992)|0)==0){return 33392}Vl(33392,11128,8);hb(298,33392,t|0)|0;return 33392}function ht(b){b=b|0;if((a[34936]|0)!=0){return 33304}if((wb(34936)|0)==0){return 33304}em(33304,10600,Ot(10600)|0);hb(236,33304,t|0)|0;return 33304}function it(b){b=b|0;if((a[35016]|0)!=0){return 33440}if((wb(35016)|0)==0){return 33440}Vl(33440,10248,8);hb(298,33440,t|0)|0;return 33440}function jt(b){b=b|0;if((a[34960]|0)!=0){return 33352}if((wb(34960)|0)==0){return 33352}em(33352,9784,Ot(9784)|0);hb(236,33352,t|0)|0;return 33352}function kt(b){b=b|0;if((a[35008]|0)!=0){return 33424}if((wb(35008)|0)==0){return 33424}Vl(33424,9256,20);hb(298,33424,t|0)|0;return 33424}function lt(b){b=b|0;if((a[34952]|0)!=0){return 33336}if((wb(34952)|0)==0){return 33336}em(33336,8960,Ot(8960)|0);hb(236,33336,t|0)|0;return 33336}function mt(b){b=b|0;if((a[35e3]|0)!=0){return 33408}if((wb(35e3)|0)==0){return 33408}Vl(33408,8688,11);hb(298,33408,t|0)|0;return 33408}function nt(b){b=b|0;if((a[34944]|0)!=0){return 33320}if((wb(34944)|0)==0){return 33320}em(33320,8456,Ot(8456)|0);hb(236,33320,t|0)|0;return 33320}function ot(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Wb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=+Iu(b,g,c[8226]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function pt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Wb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=+Iu(b,g,c[8226]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function qt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Wb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);l=+Iu(b,g,c[8226]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function rt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=Wb()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);n=Jb(b|0,h|0,f|0,c[8226]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=J;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(J=j,k)|0}function st(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Wb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);m=Jb(b|0,h|0,f|0,c[8226]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function tt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Wb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);m=Jb(b|0,h|0,f|0,c[8226]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function ut(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Wb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);m=Jb(b|0,h|0,f|0,c[8226]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function vt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(J=j,k)|0}l=Wb()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);n=Mb(b|0,h|0,f|0,c[8226]|0)|0;f=J;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(J=j,k)|0}if((b|0)==34){c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;i=g;return(J=b?2147483647:-2147483648,b?-1:0)|0}else{j=f;k=n;i=g;return(J=j,k)|0}return 0}function wt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=Wb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);m=Mb(b|0,h|0,f|0,c[8226]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}do{if((b|0)==34){c[e>>2]=4;d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>0>>>0){j=2147483647}else{break}i=g;return j|0}else{d=-1;if((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0){c[e>>2]=4;break}d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>2147483647>>>0){c[e>>2]=4;j=2147483647;i=g;return j|0}else{j=m;i=g;return j|0}}}while(0);j=-2147483648;i=g;return j|0}function xt(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;Fc[f&511](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;Fc[f&511](a);return}}function yt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(!(h-i>>2>>>0<d>>>0)){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){sr(0)}m=h-l|0;do{if(m>>2>>>0<536870911>>>0){l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){n=0;o=0;break}l=b+128|0;if(!((a[l]|0)==0&h>>>0<29>>>0)){p=h;q=11;break}a[l]=1;n=j;o=h}else{p=1073741823;q=11}}while(0);if((q|0)==11){n=ru(p<<2)|0;o=p}p=d;d=n+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;p=p-1|0;}while((p|0)!=0);p=c[k>>2]|0;r=(c[f>>2]|0)-p|0;q=n+(g-(r>>2)<<2)|0;g=p;Ku(q|0,g|0,r)|0;c[k>>2]=q;c[f>>2]=d;c[e>>2]=n+(o<<2);if((p|0)==0){return}if((j|0)==(p|0)){a[b+128|0]=0;return}else{tu(g);return}}function zt(a){a=a|0;gm(32116);gm(32104);gm(32092);gm(32080);gm(32068);gm(32056);gm(32044);gm(32032);gm(32020);gm(32008);gm(31996);gm(31984);gm(31972);gm(31960);gm(31948);gm(31936);gm(31924);gm(31912);gm(31900);gm(31888);gm(31876);gm(31864);gm(31852);gm(31840);return}function At(a){a=a|0;Xl(32860);Xl(32848);Xl(32836);Xl(32824);Xl(32812);Xl(32800);Xl(32788);Xl(32776);Xl(32764);Xl(32752);Xl(32740);Xl(32728);Xl(32716);Xl(32704);Xl(32692);Xl(32680);Xl(32668);Xl(32656);Xl(32644);Xl(32632);Xl(32620);Xl(32608);Xl(32596);Xl(32584);return}function Bt(a){a=a|0;gm(31660);gm(31648);gm(31636);gm(31624);gm(31612);gm(31600);gm(31588);gm(31576);gm(31564);gm(31552);gm(31540);gm(31528);gm(31516);gm(31504);gm(31492);gm(31480);gm(31468);gm(31456);gm(31444);gm(31432);gm(31420);gm(31408);gm(31396);gm(31384);return}function Ct(a){a=a|0;Xl(32404);Xl(32392);Xl(32380);Xl(32368);Xl(32356);Xl(32344);Xl(32332);Xl(32320);Xl(32308);Xl(32296);Xl(32284);Xl(32272);Xl(32260);Xl(32248);Xl(32236);Xl(32224);Xl(32212);Xl(32200);Xl(32188);Xl(32176);Xl(32164);Xl(32152);Xl(32140);Xl(32128);return}function Dt(a){a=a|0;gm(31828);gm(31816);gm(31804);gm(31792);gm(31780);gm(31768);gm(31756);gm(31744);gm(31732);gm(31720);gm(31708);gm(31696);gm(31684);gm(31672);return}function Et(a){a=a|0;Xl(32572);Xl(32560);Xl(32548);Xl(32536);Xl(32524);Xl(32512);Xl(32500);Xl(32488);Xl(32476);Xl(32464);Xl(32452);Xl(32440);Xl(32428);Xl(32416);return}function Ft(a,b){a=+a;b=b|0;return+(+Du(a,b))}function Gt(a,b,c){a=a|0;b=b|0;c=c|0;return Ht(0,a,b,(c|0)!=0?c:30768)|0}function Ht(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?30760:f)|0;f=c[j>>2]|0;a:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break a}o=d+1|0;p=c[22688+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);b:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7>>>0){break a}else{s=o;t=p;u=q;v=l}while(1){s=s+1|0;t=(v&255)-128|t<<6;u=u-1|0;if((t|0)>=0){break}if((u|0)==0){r=t;break b}v=a[s]|0;if(((v&255)-128|0)>>>0>63>>>0){break a}}c[j>>2]=0;c[m>>2]=t;k=e-u|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(Wb()|0)>>2]=84;k=-1;i=g;return k|0}function It(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+1032|0;h=g|0;j=g+1024|0;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h|0;a:do{if((k|0)==0|(m|0)==0){n=0;o=d;p=m;q=e;r=k}else{a=h|0;s=m;t=d;u=0;v=e;w=k;while(1){x=t>>>2;y=x>>>0>=s>>>0;if(!(y|t>>>0>131>>>0)){n=u;o=t;p=s;q=v;r=w;break a}z=y?s:x;A=t-z|0;x=Jt(v,j,z,f)|0;if((x|0)==-1){break}if((v|0)==(a|0)){B=a;C=s}else{B=v+(x<<2)|0;C=s-x|0}z=x+u|0;x=c[j>>2]|0;if((x|0)==0|(C|0)==0){n=z;o=A;p=C;q=B;r=x;break a}else{s=C;t=A;u=z;v=B;w=x}}n=-1;o=A;p=0;q=v;r=c[j>>2]|0}}while(0);b:do{if((r|0)==0){D=n}else{if((p|0)==0|(o|0)==0){D=n;break}else{E=p;F=o;G=n;H=q;I=r}while(1){J=Ht(H,I,F,f)|0;if((J+2|0)>>>0<3>>>0){break}A=(c[j>>2]|0)+J|0;c[j>>2]=A;B=E-1|0;C=G+1|0;if((B|0)==0|(F|0)==(J|0)){D=C;break b}else{E=B;F=F-J|0;G=C;H=H+4|0;I=A}}if((J|0)==(-1|0)){D=-1;break}else if((J|0)==0){c[j>>2]=0;D=G;break}else{c[f>>2]=0;D=G;break}}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function Jt(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;h=c[e>>2]|0;do{if((g|0)==0){i=5}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=5;break}if((b|0)==0){l=k;m=h;n=f;i=16;break}c[j>>2]=0;o=k;p=h;q=b;r=f;i=36}}while(0);if((i|0)==5){if((b|0)==0){s=h;t=f;i=7}else{u=h;v=b;w=f;i=6}}a:while(1){if((i|0)==6){i=0;if((w|0)==0){x=f;i=53;break}else{y=w;z=v;A=u}while(1){h=a[A]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((A&3|0)==0&y>>>0>3>>>0){B=y;C=z;D=A}else{E=A;F=z;G=y;H=h;break}while(1){I=c[D>>2]|0;if(((I-16843009|I)&-2139062144|0)!=0){i=30;break}c[C>>2]=I&255;c[C+4>>2]=d[D+1|0]|0;c[C+8>>2]=d[D+2|0]|0;J=D+4|0;K=C+16|0;c[C+12>>2]=d[D+3|0]|0;L=B-4|0;if(L>>>0>3>>>0){B=L;C=K;D=J}else{i=31;break}}if((i|0)==30){i=0;E=D;F=C;G=B;H=I&255;break}else if((i|0)==31){i=0;E=J;F=K;G=L;H=a[J]|0;break}}else{E=A;F=z;G=y;H=h}}while(0);M=H&255;if(!((M-1|0)>>>0<127>>>0)){break}c[F>>2]=M;h=G-1|0;if((h|0)==0){x=f;i=53;break a}else{y=h;z=F+4|0;A=E+1|0}}h=M-194|0;if(h>>>0>50>>>0){N=G;O=F;P=E;i=47;break}o=c[22688+(h<<2)>>2]|0;p=E+1|0;q=F;r=G;i=36;continue}else if((i|0)==7){i=0;h=a[s]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((s&3|0)!=0){Q=s;R=t;S=h;break}g=c[s>>2]|0;if(((g-16843009|g)&-2139062144|0)==0){T=t;U=s}else{Q=s;R=t;S=g&255;break}do{U=U+4|0;T=T-4|0;V=c[U>>2]|0;}while(((V-16843009|V)&-2139062144|0)==0);Q=U;R=T;S=V&255}else{Q=s;R=t;S=h}}while(0);h=S&255;if((h-1|0)>>>0<127>>>0){s=Q+1|0;t=R-1|0;i=7;continue}g=h-194|0;if(g>>>0>50>>>0){N=R;O=b;P=Q;i=47;break}l=c[22688+(g<<2)>>2]|0;m=Q+1|0;n=R;i=16;continue}else if((i|0)==16){i=0;g=(d[m]|0)>>>3;if((g-16|g+(l>>26))>>>0>7>>>0){i=17;break}g=m+1|0;do{if((l&33554432|0)==0){W=g}else{if(((d[g]|0)-128|0)>>>0>63>>>0){i=20;break a}h=m+2|0;if((l&524288|0)==0){W=h;break}if(((d[h]|0)-128|0)>>>0>63>>>0){i=23;break a}W=m+3|0}}while(0);s=W;t=n-1|0;i=7;continue}else if((i|0)==36){i=0;g=d[p]|0;h=g>>>3;if((h-16|h+(o>>26))>>>0>7>>>0){i=37;break}h=p+1|0;X=g-128|o<<6;do{if((X|0)<0){g=(d[h]|0)-128|0;if(g>>>0>63>>>0){i=40;break a}k=p+2|0;Y=g|X<<6;if((Y|0)>=0){Z=Y;_=k;break}g=(d[k]|0)-128|0;if(g>>>0>63>>>0){i=43;break a}Z=g|Y<<6;_=p+3|0}else{Z=X;_=h}}while(0);c[q>>2]=Z;u=_;v=q+4|0;w=r-1|0;i=6;continue}}if((i|0)==17){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==20){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==23){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==37){$=o;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==40){$=X;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==43){$=Y;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==53){return x|0}if((i|0)==46){if(($|0)==0){N=ca;O=ba;P=aa;i=47}else{da=ba;ea=aa}}do{if((i|0)==47){if((a[P]|0)!=0){da=O;ea=P;break}if((O|0)!=0){c[O>>2]=0;c[e>>2]=0}x=f-N|0;return x|0}}while(0);c[(Wb()|0)>>2]=84;if((da|0)==0){x=-1;return x|0}c[e>>2]=ea;x=-1;return x|0}function Kt(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50>>>0){break}m=e+1|0;n=c[22688+(k<<2)>>2]|0;if(f>>>0<4>>>0){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7>>>0){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63>>>0){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63>>>0){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(Wb()|0)>>2]=84;j=-1;i=g;return j|0}function Lt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;return f|0}if(d>>>0<55296>>>0|(d-57344|0)>>>0<8192>>>0){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;return f|0}else{c[(Wb()|0)>>2]=84;f=-1;return f|0}return 0}function Mt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+264|0;g=f|0;h=f+256|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g|0;a:do{if((j|0)==0|(l|0)==0){m=0;n=d;o=l;p=e;q=j}else{a=g|0;r=l;s=d;t=0;u=e;v=j;while(1){w=s>>>0>=r>>>0;if(!(w|s>>>0>32>>>0)){m=t;n=s;o=r;p=u;q=v;break a}x=w?r:s;y=s-x|0;w=Nt(u,h,x,0)|0;if((w|0)==-1){break}if((u|0)==(a|0)){z=a;A=r}else{z=u+w|0;A=r-w|0}x=w+t|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){m=x;n=y;o=A;p=z;q=w;break a}else{r=A;s=y;t=x;u=z;v=w}}m=-1;n=y;o=0;p=u;q=c[h>>2]|0}}while(0);b:do{if((q|0)==0){B=m}else{if((o|0)==0|(n|0)==0){B=m;break}else{C=o;D=n;E=m;F=p;G=q}while(1){H=Lt(F,c[G>>2]|0,0)|0;if((H+1|0)>>>0<2>>>0){break}y=(c[h>>2]|0)+4|0;c[h>>2]=y;z=D-1|0;A=E+1|0;if((C|0)==(H|0)|(z|0)==0){B=A;break b}else{C=C-H|0;D=z;E=A;F=F+H|0;G=y}}if((H|0)!=0){B=-1;break}c[h>>2]=0;B=E}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function Nt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=Lt(j,o,0)|0;if((k|0)==-1){l=-1;p=26;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=26;break}else{m=k;n=h;o=r}}if((p|0)==26){i=f;return l|0}}a:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break a}if(q>>>0>127>>>0){j=Lt(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break a}}i=f;return l|0}else{s=e;t=b}}while(0);b:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=24;break}if(m>>>0>127>>>0){n=Lt(b,m,0)|0;if((n|0)==-1){l=-1;p=26;break}if(n>>>0>u>>>0){p=20;break}Lt(v,c[w>>2]|0,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break b}else{u=z;v=y;w=m}}if((p|0)==20){l=e-u|0;i=f;return l|0}else if((p|0)==24){a[v]=0;x=u;break}else if((p|0)==26){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function Ot(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function Pt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function Qt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function Rt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function St(a){a=a|0;return}function Tt(a){a=a|0;c[a>>2]=23352;return}function Ut(a){a=a|0;tu(a);return}function Vt(a){a=a|0;return}function Wt(a){a=a|0;return 3144}function Xt(a){a=a|0;St(a|0);return}function Yt(a){a=a|0;return}function Zt(a){a=a|0;return}function _t(a){a=a|0;St(a|0);tu(a);return}function $t(a){a=a|0;St(a|0);tu(a);return}function au(a){a=a|0;St(a|0);tu(a);return}function bu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=fu(b,30568,30552,-1)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}Nu(f|0,0,56)|0;c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;Uc[c[(c[h>>2]|0)+28>>2]&63](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function cu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function du(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;Uc[c[(c[g>>2]|0)+28>>2]&63](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function eu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;Uc[c[(c[j>>2]|0)+28>>2]&63](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;Uc[c[(c[j>>2]|0)+28>>2]&63](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]|0)!=0){m=16;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=16;break}}if((m|0)==16){return}}function fu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;Nu(e|0,0,39)|0;if((k|0)==(d|0)){c[g+48>>2]=1;Rc[c[(c[k>>2]|0)+20>>2]&127](h,g,j,j,1,0);i=f;return((c[a>>2]|0)==1?j:0)|0}Dc[c[(c[k>>2]|0)+24>>2]&63](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==0){if((c[n>>2]|0)!=1){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}o=(c[m>>2]|0)==1?c[b>>2]|0:0;i=f;return o|0}else if((j|0)==1){do{if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}if((c[m>>2]|0)==1){break}else{o=0}i=f;return o|0}}while(0);o=c[e>>2]|0;i=f;return o|0}else{o=0;i=f;return o|0}return 0}function gu(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;a:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;b:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;Rc[c[(c[v>>2]|0)+20>>2]&127](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]|0)!=0){x=t;y=r;break}do{if((a[m]|0)==0){z=t;A=r}else{if((a[l]|0)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break b}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=27;break a}if((c[o>>2]&2|0)==0){B=27;break a}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=26}else{D=x;B=23}}else{D=0;B=23}}while(0);do{if((B|0)==23){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=26;break}if((c[d+24>>2]|0)!=2){C=D;B=26;break}a[d+54|0]=1;if(D){B=27}else{B=28}}}while(0);if((B|0)==26){if(C){B=27}else{B=28}}if((B|0)==27){c[i>>2]=3;return}else if((B|0)==28){c[i>>2]=4;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;Dc[c[(c[y>>2]|0)+24>>2]&63](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]|0)!=0){B=53;break}if((c[b>>2]|0)==1){B=53;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;Dc[c[(c[w>>2]|0)+24>>2]&63](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=53;break}}if((B|0)==53){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]|0)!=0){B=53;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=53;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;Dc[c[(c[w>>2]|0)+24>>2]&63](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=53;break}}if((B|0)==53){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]|0)!=0){B=53;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;Dc[c[(c[i>>2]|0)+24>>2]&63](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=53;break}}if((B|0)==53){return}}function hu(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;Dc[c[(c[h>>2]|0)+24>>2]&63](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;Rc[c[(c[l>>2]|0)+20>>2]&127](l,d,e,e,1,g);if((a[k]|0)==0){m=0;n=13}else{if((a[j]|0)==0){m=1;n=13}}a:do{if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=16;break}a[d+54|0]=1;if(m){break a}}else{n=16}}while(0);if((n|0)==16){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function iu(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function ju(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]|0;k=d+53|0;l=a[k]|0;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;Rc[c[(c[p>>2]|0)+20>>2]&127](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);a:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]|0)!=0){break a}do{if((a[i]|0)==0){if((a[k]|0)==0){break}if((c[q>>2]&1|0)==0){break a}}else{if((c[o>>2]|0)==1){break a}if((c[q>>2]&2|0)==0){break a}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;Rc[c[(c[u>>2]|0)+20>>2]&127](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function ku(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;Rc[c[(c[i>>2]|0)+20>>2]&127](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function lu(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function mu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[7726]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=30944+(h<<2)|0;j=30944+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[7726]=e&~(1<<g)}else{if(l>>>0<(c[7730]|0)>>>0){ic();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{ic();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(!(b>>>0>(c[7728]|0)>>>0)){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=30944+(p<<2)|0;m=30944+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[7726]=e&~(1<<r)}else{if(l>>>0<(c[7730]|0)>>>0){ic();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{ic();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[7728]|0;if((l|0)!=0){q=c[7731]|0;d=l>>>3;l=d<<1;f=30944+(l<<2)|0;k=c[7726]|0;h=1<<d;do{if((k&h|0)==0){c[7726]=k|h;s=f;t=30944+(l+2<<2)|0}else{d=30944+(l+2<<2)|0;g=c[d>>2]|0;if(!(g>>>0<(c[7730]|0)>>>0)){s=g;t=d;break}ic();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[7728]=m;c[7731]=e;n=i;return n|0}l=c[7727]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[31208+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[7730]|0;if(r>>>0<i>>>0){ic();return 0}e=r+b|0;m=e;if(!(r>>>0<e>>>0)){ic();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){ic();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){ic();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){ic();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{ic();return 0}}}while(0);a:do{if((e|0)!=0){f=c[d+28>>2]|0;i=31208+(f<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[7727]=c[7727]&~(1<<f);break a}else{if(e>>>0<(c[7730]|0)>>>0){ic();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break a}}}while(0);if(v>>>0<(c[7730]|0)>>>0){ic();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16>>>0){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[7728]|0;if((f|0)!=0){e=c[7731]|0;i=f>>>3;f=i<<1;q=30944+(f<<2)|0;k=c[7726]|0;g=1<<i;do{if((k&g|0)==0){c[7726]=k|g;y=q;z=30944+(f+2<<2)|0}else{i=30944+(f+2<<2)|0;l=c[i>>2]|0;if(!(l>>>0<(c[7730]|0)>>>0)){y=l;z=i;break}ic();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[7728]=p;c[7731]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231>>>0){o=-1;break}f=a+11|0;g=f&-8;k=c[7727]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215>>>0){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[31208+(A<<2)>>2]|0;b:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break b}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[31208+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(!(J>>>0<((c[7728]|0)-g|0)>>>0)){o=g;break}q=K;m=c[7730]|0;if(q>>>0<m>>>0){ic();return 0}p=q+g|0;k=p;if(!(q>>>0<p>>>0)){ic();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){ic();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){ic();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){ic();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{ic();return 0}}}while(0);c:do{if((e|0)!=0){i=c[K+28>>2]|0;m=31208+(i<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[7727]=c[7727]&~(1<<i);break c}else{if(e>>>0<(c[7730]|0)>>>0){ic();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break c}}}while(0);if(L>>>0<(c[7730]|0)>>>0){ic();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16>>>0){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256>>>0){e=i<<1;m=30944+(e<<2)|0;r=c[7726]|0;j=1<<i;do{if((r&j|0)==0){c[7726]=r|j;O=m;P=30944+(e+2<<2)|0}else{i=30944+(e+2<<2)|0;d=c[i>>2]|0;if(!(d>>>0<(c[7730]|0)>>>0)){O=d;P=i;break}ic();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215>>>0){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=31208+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[7727]|0;l=1<<Q;if((m&l|0)==0){c[7727]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=151;break}else{l=l<<1;m=j}}if((T|0)==151){if(S>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[7730]|0;if(m>>>0<i>>>0){ic();return 0}if(j>>>0<i>>>0){ic();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[7728]|0;if(!(o>>>0>K>>>0)){S=K-o|0;J=c[7731]|0;if(S>>>0>15>>>0){R=J;c[7731]=R+o;c[7728]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[7728]=0;c[7731]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[7729]|0;if(o>>>0<J>>>0){S=J-o|0;c[7729]=S;J=c[7732]|0;K=J;c[7732]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[7684]|0)==0){J=Lb(30)|0;if((J-1&J|0)==0){c[7686]=J;c[7685]=J;c[7687]=-1;c[7688]=-1;c[7689]=0;c[7837]=0;c[7684]=(Bc(0)|0)&-16^1431655768;break}else{ic();return 0}}}while(0);J=o+48|0;S=c[7686]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(!(S>>>0>o>>>0)){n=0;return n|0}O=c[7836]|0;do{if((O|0)!=0){P=c[7834]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);d:do{if((c[7837]&4|0)==0){O=c[7732]|0;e:do{if((O|0)==0){T=181}else{L=O;P=31352;while(1){U=P|0;M=c[U>>2]|0;if(!(M>>>0>L>>>0)){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=181;break e}else{P=M}}if((P|0)==0){T=181;break}L=R-(c[7729]|0)&Q;if(!(L>>>0<2147483647>>>0)){W=0;break}m=Ub(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=190}}while(0);do{if((T|0)==181){O=Ub(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[7685]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[7834]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647>>>0)){W=0;break}m=c[7836]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=Ub($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=190}}while(0);f:do{if((T|0)==190){m=-_|0;if(!((X|0)==-1)){aa=Y;ba=X;T=201;break d}do{if((Z|0)!=-1&_>>>0<2147483647>>>0&_>>>0<J>>>0){g=c[7686]|0;O=K-_+g&-g;if(!(O>>>0<2147483647>>>0)){ca=_;break}if((Ub(O|0)|0)==-1){Ub(m|0)|0;W=Y;break f}else{ca=O+_|0;break}}else{ca=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ca;ba=Z;T=201;break d}}}while(0);c[7837]=c[7837]|4;da=W;T=198}else{da=0;T=198}}while(0);do{if((T|0)==198){if(!(S>>>0<2147483647>>>0)){break}W=Ub(S|0)|0;Z=Ub(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ca=Z-W|0;Z=ca>>>0>(o+40|0)>>>0;Y=Z?W:-1;if(!((Y|0)==-1)){aa=Z?ca:da;ba=Y;T=201}}}while(0);do{if((T|0)==201){da=(c[7834]|0)+aa|0;c[7834]=da;if(da>>>0>(c[7835]|0)>>>0){c[7835]=da}da=c[7732]|0;g:do{if((da|0)==0){S=c[7730]|0;if((S|0)==0|ba>>>0<S>>>0){c[7730]=ba}c[7838]=ba;c[7839]=aa;c[7841]=0;c[7735]=c[7684];c[7734]=-1;S=0;do{Y=S<<1;ca=30944+(Y<<2)|0;c[30944+(Y+3<<2)>>2]=ca;c[30944+(Y+2<<2)>>2]=ca;S=S+1|0;}while(S>>>0<32>>>0);S=ba+8|0;if((S&7|0)==0){ea=0}else{ea=-S&7}S=aa-40-ea|0;c[7732]=ba+ea;c[7729]=S;c[ba+(ea+4)>>2]=S|1;c[ba+(aa-36)>>2]=40;c[7733]=c[7688]}else{S=31352;while(1){fa=c[S>>2]|0;ga=S+4|0;ha=c[ga>>2]|0;if((ba|0)==(fa+ha|0)){T=213;break}ca=c[S+8>>2]|0;if((ca|0)==0){break}else{S=ca}}do{if((T|0)==213){if((c[S+12>>2]&8|0)!=0){break}ca=da;if(!(ca>>>0>=fa>>>0&ca>>>0<ba>>>0)){break}c[ga>>2]=ha+aa;Y=(c[7729]|0)+aa|0;Z=da+8|0;if((Z&7|0)==0){ia=0}else{ia=-Z&7}Z=Y-ia|0;c[7732]=ca+ia;c[7729]=Z;c[ca+(ia+4)>>2]=Z|1;c[ca+(Y+4)>>2]=40;c[7733]=c[7688];break g}}while(0);if(ba>>>0<(c[7730]|0)>>>0){c[7730]=ba}S=ba+aa|0;Y=31352;while(1){ja=Y|0;if((c[ja>>2]|0)==(S|0)){T=223;break}ca=c[Y+8>>2]|0;if((ca|0)==0){break}else{Y=ca}}do{if((T|0)==223){if((c[Y+12>>2]&8|0)!=0){break}c[ja>>2]=ba;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ba+8|0;if((S&7|0)==0){ka=0}else{ka=-S&7}S=ba+(aa+8)|0;if((S&7|0)==0){la=0}else{la=-S&7}S=ba+(la+aa)|0;ca=S;Z=ka+o|0;W=ba+Z|0;_=W;K=S-(ba+ka)-o|0;c[ba+(ka+4)>>2]=o|3;do{if((ca|0)==(c[7732]|0)){J=(c[7729]|0)+K|0;c[7729]=J;c[7732]=_;c[ba+(Z+4)>>2]=J|1}else{if((ca|0)==(c[7731]|0)){J=(c[7728]|0)+K|0;c[7728]=J;c[7731]=_;c[ba+(Z+4)>>2]=J|1;c[ba+(J+Z)>>2]=J;break}J=aa+4|0;X=c[ba+(J+la)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;h:do{if(X>>>0<256>>>0){U=c[ba+((la|8)+aa)>>2]|0;Q=c[ba+(aa+12+la)>>2]|0;R=30944+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[7730]|0)>>>0){ic();return 0}if((c[U+12>>2]|0)==(ca|0)){break}ic();return 0}}while(0);if((Q|0)==(U|0)){c[7726]=c[7726]&~(1<<V);break}do{if((Q|0)==(R|0)){ma=Q+8|0}else{if(Q>>>0<(c[7730]|0)>>>0){ic();return 0}m=Q+8|0;if((c[m>>2]|0)==(ca|0)){ma=m;break}ic();return 0}}while(0);c[U+12>>2]=Q;c[ma>>2]=U}else{R=S;m=c[ba+((la|24)+aa)>>2]|0;P=c[ba+(aa+12+la)>>2]|0;do{if((P|0)==(R|0)){O=la|16;g=ba+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ba+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){na=0;break}else{oa=O;pa=e}}else{oa=L;pa=g}while(1){g=oa+20|0;L=c[g>>2]|0;if((L|0)!=0){oa=L;pa=g;continue}g=oa+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{oa=L;pa=g}}if(pa>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[pa>>2]=0;na=oa;break}}else{g=c[ba+((la|8)+aa)>>2]|0;if(g>>>0<(c[7730]|0)>>>0){ic();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){ic();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;na=P;break}else{ic();return 0}}}while(0);if((m|0)==0){break}P=c[ba+(aa+28+la)>>2]|0;U=31208+(P<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=na;if((na|0)!=0){break}c[7727]=c[7727]&~(1<<P);break h}else{if(m>>>0<(c[7730]|0)>>>0){ic();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=na}else{c[m+20>>2]=na}if((na|0)==0){break h}}}while(0);if(na>>>0<(c[7730]|0)>>>0){ic();return 0}c[na+24>>2]=m;R=la|16;P=c[ba+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[na+16>>2]=P;c[P+24>>2]=na;break}}}while(0);P=c[ba+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[na+20>>2]=P;c[P+24>>2]=na;break}}}while(0);qa=ba+(($|la)+aa)|0;ra=$+K|0}else{qa=ca;ra=K}J=qa+4|0;c[J>>2]=c[J>>2]&-2;c[ba+(Z+4)>>2]=ra|1;c[ba+(ra+Z)>>2]=ra;J=ra>>>3;if(ra>>>0<256>>>0){V=J<<1;X=30944+(V<<2)|0;P=c[7726]|0;m=1<<J;do{if((P&m|0)==0){c[7726]=P|m;sa=X;ta=30944+(V+2<<2)|0}else{J=30944+(V+2<<2)|0;U=c[J>>2]|0;if(!(U>>>0<(c[7730]|0)>>>0)){sa=U;ta=J;break}ic();return 0}}while(0);c[ta>>2]=_;c[sa+12>>2]=_;c[ba+(Z+8)>>2]=sa;c[ba+(Z+12)>>2]=X;break}V=W;m=ra>>>8;do{if((m|0)==0){ua=0}else{if(ra>>>0>16777215>>>0){ua=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;ua=ra>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=31208+(ua<<2)|0;c[ba+(Z+28)>>2]=ua;c[ba+(Z+20)>>2]=0;c[ba+(Z+16)>>2]=0;X=c[7727]|0;Q=1<<ua;if((X&Q|0)==0){c[7727]=X|Q;c[m>>2]=V;c[ba+(Z+24)>>2]=m;c[ba+(Z+12)>>2]=V;c[ba+(Z+8)>>2]=V;break}if((ua|0)==31){va=0}else{va=25-(ua>>>1)|0}Q=ra<<va;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ra|0)){break}wa=X+16+(Q>>>31<<2)|0;m=c[wa>>2]|0;if((m|0)==0){T=296;break}else{Q=Q<<1;X=m}}if((T|0)==296){if(wa>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[wa>>2]=V;c[ba+(Z+24)>>2]=X;c[ba+(Z+12)>>2]=V;c[ba+(Z+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[7730]|0;if(X>>>0<$>>>0){ic();return 0}if(m>>>0<$>>>0){ic();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ba+(Z+8)>>2]=m;c[ba+(Z+12)>>2]=X;c[ba+(Z+24)>>2]=0;break}}}while(0);n=ba+(ka|8)|0;return n|0}}while(0);Y=da;Z=31352;while(1){xa=c[Z>>2]|0;if(!(xa>>>0>Y>>>0)){ya=c[Z+4>>2]|0;za=xa+ya|0;if(za>>>0>Y>>>0){break}}Z=c[Z+8>>2]|0}Z=xa+(ya-39)|0;if((Z&7|0)==0){Aa=0}else{Aa=-Z&7}Z=xa+(ya-47+Aa)|0;W=Z>>>0<(da+16|0)>>>0?Y:Z;Z=W+8|0;_=ba+8|0;if((_&7|0)==0){Ba=0}else{Ba=-_&7}_=aa-40-Ba|0;c[7732]=ba+Ba;c[7729]=_;c[ba+(Ba+4)>>2]=_|1;c[ba+(aa-36)>>2]=40;c[7733]=c[7688];c[W+4>>2]=27;c[Z>>2]=c[7838];c[Z+4>>2]=c[7839];c[Z+8>>2]=c[7840];c[Z+12>>2]=c[7841];c[7838]=ba;c[7839]=aa;c[7841]=0;c[7840]=Z;Z=W+28|0;c[Z>>2]=7;if((W+32|0)>>>0<za>>>0){_=Z;while(1){Z=_+4|0;c[Z>>2]=7;if((_+8|0)>>>0<za>>>0){_=Z}else{break}}}if((W|0)==(Y|0)){break}_=W-da|0;Z=Y+(_+4)|0;c[Z>>2]=c[Z>>2]&-2;c[da+4>>2]=_|1;c[Y+_>>2]=_;Z=_>>>3;if(_>>>0<256>>>0){K=Z<<1;ca=30944+(K<<2)|0;S=c[7726]|0;m=1<<Z;do{if((S&m|0)==0){c[7726]=S|m;Ca=ca;Da=30944+(K+2<<2)|0}else{Z=30944+(K+2<<2)|0;Q=c[Z>>2]|0;if(!(Q>>>0<(c[7730]|0)>>>0)){Ca=Q;Da=Z;break}ic();return 0}}while(0);c[Da>>2]=da;c[Ca+12>>2]=da;c[da+8>>2]=Ca;c[da+12>>2]=ca;break}K=da;m=_>>>8;do{if((m|0)==0){Ea=0}else{if(_>>>0>16777215>>>0){Ea=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;W=(Y+520192|0)>>>16&4;Z=Y<<W;Y=(Z+245760|0)>>>16&2;Q=14-(W|S|Y)+(Z<<Y>>>15)|0;Ea=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=31208+(Ea<<2)|0;c[da+28>>2]=Ea;c[da+20>>2]=0;c[da+16>>2]=0;ca=c[7727]|0;Q=1<<Ea;if((ca&Q|0)==0){c[7727]=ca|Q;c[m>>2]=K;c[da+24>>2]=m;c[da+12>>2]=da;c[da+8>>2]=da;break}if((Ea|0)==31){Fa=0}else{Fa=25-(Ea>>>1)|0}Q=_<<Fa;ca=c[m>>2]|0;while(1){if((c[ca+4>>2]&-8|0)==(_|0)){break}Ga=ca+16+(Q>>>31<<2)|0;m=c[Ga>>2]|0;if((m|0)==0){T=331;break}else{Q=Q<<1;ca=m}}if((T|0)==331){if(Ga>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[Ga>>2]=K;c[da+24>>2]=ca;c[da+12>>2]=da;c[da+8>>2]=da;break}}Q=ca+8|0;_=c[Q>>2]|0;m=c[7730]|0;if(ca>>>0<m>>>0){ic();return 0}if(_>>>0<m>>>0){ic();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[da+8>>2]=_;c[da+12>>2]=ca;c[da+24>>2]=0;break}}}while(0);da=c[7729]|0;if(!(da>>>0>o>>>0)){break}_=da-o|0;c[7729]=_;da=c[7732]|0;Q=da;c[7732]=Q+o;c[Q+(o+4)>>2]=_|1;c[da+4>>2]=o|3;n=da+8|0;return n|0}}while(0);c[(Wb()|0)>>2]=12;n=0;return n|0}function nu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[7730]|0;if(b>>>0<e>>>0){ic()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){ic()}h=f&-8;i=a+(h-8)|0;j=i;a:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){ic()}if((n|0)==(c[7731]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[7728]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=30944+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){ic()}if((c[k+12>>2]|0)==(n|0)){break}ic()}}while(0);if((s|0)==(k|0)){c[7726]=c[7726]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){ic()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}ic()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){ic()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){ic()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){ic()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{ic()}}}while(0);if((p|0)==0){q=n;r=o;break}v=c[a+(l+28)>>2]|0;m=31208+(v<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[7727]=c[7727]&~(1<<v);q=n;r=o;break a}else{if(p>>>0<(c[7730]|0)>>>0){ic()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break a}}}while(0);if(A>>>0<(c[7730]|0)>>>0){ic()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[7730]|0)>>>0){ic()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[7730]|0)>>>0){ic()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(!(d>>>0<i>>>0)){ic()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){ic()}do{if((e&2|0)==0){if((j|0)==(c[7732]|0)){B=(c[7729]|0)+r|0;c[7729]=B;c[7732]=q;c[q+4>>2]=B|1;if((q|0)!=(c[7731]|0)){return}c[7731]=0;c[7728]=0;return}if((j|0)==(c[7731]|0)){B=(c[7728]|0)+r|0;c[7728]=B;c[7731]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;b:do{if(e>>>0<256>>>0){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=30944+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[7730]|0)>>>0){ic()}if((c[u+12>>2]|0)==(j|0)){break}ic()}}while(0);if((g|0)==(u|0)){c[7726]=c[7726]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[7730]|0)>>>0){ic()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}ic()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[7730]|0)>>>0){ic()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[7730]|0)>>>0){ic()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){ic()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{ic()}}}while(0);if((f|0)==0){break}t=c[a+(h+20)>>2]|0;u=31208+(t<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[7727]=c[7727]&~(1<<t);break b}else{if(f>>>0<(c[7730]|0)>>>0){ic()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break b}}}while(0);if(E>>>0<(c[7730]|0)>>>0){ic()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[7730]|0)>>>0){ic()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[7730]|0)>>>0){ic()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[7731]|0)){H=B;break}c[7728]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256>>>0){d=r<<1;e=30944+(d<<2)|0;A=c[7726]|0;E=1<<r;do{if((A&E|0)==0){c[7726]=A|E;I=e;J=30944+(d+2<<2)|0}else{r=30944+(d+2<<2)|0;h=c[r>>2]|0;if(!(h>>>0<(c[7730]|0)>>>0)){I=h;J=r;break}ic()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215>>>0){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=31208+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[7727]|0;d=1<<K;do{if((r&d|0)==0){c[7727]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=129;break}else{A=A<<1;J=E}}if((N|0)==129){if(M>>>0<(c[7730]|0)>>>0){ic()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[7730]|0;if(J>>>0<E>>>0){ic()}if(B>>>0<E>>>0){ic()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[7734]|0)-1|0;c[7734]=q;if((q|0)==0){O=31360}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[7734]=-1;return}function ou(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=mu(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(Wb()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=pu(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=mu(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;Ku(f|0,a|0,g>>>0<b>>>0?g:b)|0;nu(a);d=f;return d|0}function pu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[7730]|0;if(g>>>0<j>>>0){ic();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){ic();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){ic();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}do{if(!(f>>>0<(b+4|0)>>>0)){if((f-b|0)>>>0>c[7686]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(!(f>>>0<b>>>0)){k=f-b|0;if(!(k>>>0>15>>>0)){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;qu(g+b|0,k);n=a;return n|0}if((i|0)==(c[7732]|0)){k=(c[7729]|0)+f|0;if(!(k>>>0>b>>>0)){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[7732]=g+b;c[7729]=l;n=a;return n|0}if((i|0)==(c[7731]|0)){l=(c[7728]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[7728]=q;c[7731]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;a:do{if(m>>>0<256>>>0){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=30944+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){ic();return 0}if((c[l+12>>2]|0)==(i|0)){break}ic();return 0}}while(0);if((k|0)==(l|0)){c[7726]=c[7726]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){ic();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}ic();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){ic();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){ic();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){ic();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{ic();return 0}}}while(0);if((s|0)==0){break}t=c[g+(f+28)>>2]|0;l=31208+(t<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[7727]=c[7727]&~(1<<t);break a}else{if(s>>>0<(c[7730]|0)>>>0){ic();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break a}}}while(0);if(y>>>0<(c[7730]|0)>>>0){ic();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[7730]|0)>>>0){ic();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;qu(g+b|0,q);n=a;return n|0}return 0}function qu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;a:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[7730]|0;if(i>>>0<l>>>0){ic()}if((j|0)==(c[7731]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[7728]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256>>>0){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=30944+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){ic()}if((c[p+12>>2]|0)==(j|0)){break}ic()}}while(0);if((q|0)==(p|0)){c[7726]=c[7726]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){ic()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}ic()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){ic()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){ic()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){ic()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{ic()}}}while(0);if((m|0)==0){n=j;o=k;break}t=c[d+(28-h)>>2]|0;l=31208+(t<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[7727]=c[7727]&~(1<<t);n=j;o=k;break a}else{if(m>>>0<(c[7730]|0)>>>0){ic()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break a}}}while(0);if(y>>>0<(c[7730]|0)>>>0){ic()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[7730]|0)>>>0){ic()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[7730]|0)>>>0){ic()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[7730]|0;if(e>>>0<a>>>0){ic()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[7732]|0)){A=(c[7729]|0)+o|0;c[7729]=A;c[7732]=n;c[n+4>>2]=A|1;if((n|0)!=(c[7731]|0)){return}c[7731]=0;c[7728]=0;return}if((f|0)==(c[7731]|0)){A=(c[7728]|0)+o|0;c[7728]=A;c[7731]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;b:do{if(z>>>0<256>>>0){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=30944+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){ic()}if((c[g+12>>2]|0)==(f|0)){break}ic()}}while(0);if((t|0)==(g|0)){c[7726]=c[7726]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){ic()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}ic()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){ic()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){ic()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){ic()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{ic()}}}while(0);if((m|0)==0){break}l=c[d+(b+28)>>2]|0;g=31208+(l<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[7727]=c[7727]&~(1<<l);break b}else{if(m>>>0<(c[7730]|0)>>>0){ic()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break b}}}while(0);if(C>>>0<(c[7730]|0)>>>0){ic()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[7730]|0)>>>0){ic()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[7730]|0)>>>0){ic()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[7731]|0)){F=A;break}c[7728]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256>>>0){z=o<<1;y=30944+(z<<2)|0;C=c[7726]|0;b=1<<o;do{if((C&b|0)==0){c[7726]=C|b;G=y;H=30944+(z+2<<2)|0}else{o=30944+(z+2<<2)|0;d=c[o>>2]|0;if(!(d>>>0<(c[7730]|0)>>>0)){G=d;H=o;break}ic()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215>>>0){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=31208+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[7727]|0;z=1<<I;if((o&z|0)==0){c[7727]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=126;break}else{I=I<<1;J=G}}if((L|0)==126){if(K>>>0<(c[7730]|0)>>>0){ic()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[7730]|0;if(J>>>0<I>>>0){ic()}if(L>>>0<I>>>0){ic()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function ru(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=mu(b)|0;if((d|0)!=0){e=10;break}a=(H=c[8706]|0,c[8706]=H+0,H);if((a|0)==0){break}Nc[a&63]()}if((e|0)==10){return d|0}d=tc(4)|0;c[d>>2]=23320;Hb(d|0,29024,72);return 0}function su(a){a=a|0;return ru(a)|0}function tu(a){a=a|0;if((a|0)==0){return}nu(a);return}function uu(a){a=a|0;tu(a);return}function vu(a){a=a|0;tu(a);return}function wu(a){a=a|0;return}function xu(a){a=a|0;return 11040}function yu(){var a=0;a=tc(4)|0;c[a>>2]=23320;Hb(a|0,29024,72)}function zu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0.0,ia=0.0,ja=0,ka=0,la=0.0,ma=0.0,na=0,oa=0.0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0.0,ya=0,za=0.0,Aa=0,Ba=0.0,Ca=0,Da=0,Ea=0,Fa=0.0,Ga=0,Ha=0.0,Ia=0.0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0.0,Ac=0,Bc=0,Cc=0.0,Dc=0.0,Ec=0.0,Fc=0.0,Gc=0.0,Hc=0.0,Ic=0.0,Jc=0,Kc=0,Lc=0.0,Mc=0,Nc=0;g=i;i=i+512|0;h=g|0;if((e|0)==1){j=-1074;k=53}else if((e|0)==0){j=-149;k=24}else if((e|0)==2){j=-1074;k=53}else{l=0.0;i=g;return+l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n]|0}else{o=Cu(b)|0}}while((Ra(o|0)|0)!=0);do{if((o|0)==45|(o|0)==43){n=1-(((o|0)==45)<<1)|0;p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;q=d[p]|0;r=n;break}else{q=Cu(b)|0;r=n;break}}else{q=o;r=1}}while(0);o=0;n=q;while(1){if((n|32|0)!=(a[5144+o|0]|0)){s=o;t=n;break}do{if(o>>>0<7>>>0){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;w=d[q]|0;break}else{w=Cu(b)|0;break}}else{w=n}}while(0);q=o+1|0;if(q>>>0<8>>>0){o=q;n=w}else{s=q;t=w;break}}do{if((s|0)==3){x=23}else if((s|0)!=8){w=(f|0)==0;if(!(s>>>0<4>>>0|w)){if((s|0)==8){break}else{x=23;break}}do{if((s|0)==0){if((t|32|0)==110){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;y=d[n]|0}else{y=Cu(b)|0}if((y|32|0)!=97){break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;z=d[n]|0}else{z=Cu(b)|0}if((z|32|0)!=110){break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;A=d[n]|0}else{A=Cu(b)|0}if((A|0)==40){B=1}else{if((c[m>>2]|0)==0){l=+u;i=g;return+l}c[e>>2]=(c[e>>2]|0)-1;l=+u;i=g;return+l}while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;C=d[n]|0}else{C=Cu(b)|0}if(!((C-48|0)>>>0<10>>>0|(C-65|0)>>>0<26>>>0)){if(!((C-97|0)>>>0<26>>>0|(C|0)==95)){break}}B=B+1|0}if((C|0)==41){l=+u;i=g;return+l}n=(c[m>>2]|0)==0;if(!n){c[e>>2]=(c[e>>2]|0)-1}if(w){c[(Wb()|0)>>2]=22;Bu(b,0);l=0.0;i=g;return+l}if((B|0)==0|n){l=+u;i=g;return+l}else{D=B}while(1){n=D-1|0;c[e>>2]=(c[e>>2]|0)-1;if((n|0)==0){l=+u;break}else{D=n}}i=g;return+l}do{if((t|0)==48){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;E=d[n]|0}else{E=Cu(b)|0}if((E|32|0)!=120){if((c[m>>2]|0)==0){F=48;break}c[e>>2]=(c[e>>2]|0)-1;F=48;break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;G=d[n]|0;H=0}else{G=Cu(b)|0;H=0}while(1){if((G|0)==46){x=68;break}else if((G|0)!=48){I=G;K=0;L=0;M=0;N=0;O=H;P=0;Q=0;R=1.0;S=0.0;T=0;break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;G=d[n]|0;H=1;continue}else{G=Cu(b)|0;H=1;continue}}a:do{if((x|0)==68){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;V=d[n]|0}else{V=Cu(b)|0}if((V|0)==48){W=-1;X=-1}else{I=V;K=0;L=0;M=0;N=0;O=H;P=1;Q=0;R=1.0;S=0.0;T=0;break}while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;Y=d[n]|0}else{Y=Cu(b)|0}if((Y|0)!=48){I=Y;K=0;L=0;M=W;N=X;O=1;P=1;Q=0;R=1.0;S=0.0;T=0;break a}n=Pu(X,W,-1,-1)|0;W=J;X=n}}}while(0);b:while(1){n=I-48|0;do{if(n>>>0<10>>>0){Z=n;x=82}else{o=I|32;q=(I|0)==46;if(!((o-97|0)>>>0<6>>>0|q)){_=I;break b}if(q){if((P|0)==0){$=K;aa=L;ba=K;ca=L;da=O;ea=1;ga=Q;ha=R;ia=S;ja=T;break}else{_=46;break b}}else{Z=(I|0)>57?o-87|0:n;x=82;break}}}while(0);if((x|0)==82){x=0;n=0;do{if((K|0)<(n|0)|(K|0)==(n|0)&L>>>0<8>>>0){ka=Q;la=R;ma=S;na=Z+(T<<4)|0}else{o=0;if((K|0)<(o|0)|(K|0)==(o|0)&L>>>0<14>>>0){oa=R*.0625;ka=Q;la=oa;ma=S+oa*+(Z|0);na=T;break}if(!((Z|0)!=0&(Q|0)==0)){ka=Q;la=R;ma=S;na=T;break}ka=1;la=R;ma=S+R*.5;na=T}}while(0);n=Pu(L,K,1,0)|0;$=J;aa=n;ba=M;ca=N;da=1;ea=P;ga=ka;ha=la;ia=ma;ja=na}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;I=d[n]|0;K=$;L=aa;M=ba;N=ca;O=da;P=ea;Q=ga;R=ha;S=ia;T=ja;continue}else{I=Cu(b)|0;K=$;L=aa;M=ba;N=ca;O=da;P=ea;Q=ga;R=ha;S=ia;T=ja;continue}}if((O|0)==0){n=(c[m>>2]|0)==0;if(!n){c[e>>2]=(c[e>>2]|0)-1}do{if(w){Bu(b,0)}else{if(n){break}o=c[e>>2]|0;c[e>>2]=o-1;if((P|0)==0){break}c[e>>2]=o-2}}while(0);l=+(r|0)*0.0;i=g;return+l}n=(P|0)==0;o=n?L:N;q=n?K:M;n=0;if((K|0)<(n|0)|(K|0)==(n|0)&L>>>0<8>>>0){n=T;p=K;pa=L;while(1){qa=n<<4;ra=Pu(pa,p,1,0)|0;sa=J;ta=0;if((sa|0)<(ta|0)|(sa|0)==(ta|0)&ra>>>0<8>>>0){n=qa;p=sa;pa=ra}else{ua=qa;break}}}else{ua=T}do{if((_|32|0)==112){pa=Au(b,f)|0;p=J;if(!((pa|0)==0&(p|0)==(-2147483648|0))){va=p;wa=pa;break}if(w){Bu(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){va=0;wa=0;break}c[e>>2]=(c[e>>2]|0)-1;va=0;wa=0;break}}else{if((c[m>>2]|0)==0){va=0;wa=0;break}c[e>>2]=(c[e>>2]|0)-1;va=0;wa=0}}while(0);pa=Pu(o<<2|0>>>30,q<<2|o>>>30,-32,-1)|0;p=Pu(pa,J,wa,va)|0;pa=J;if((ua|0)==0){l=+(r|0)*0.0;i=g;return+l}n=0;if((pa|0)>(n|0)|(pa|0)==(n|0)&p>>>0>(-j|0)>>>0){c[(Wb()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}n=j-106|0;qa=(n|0)<0|0?-1:0;if((pa|0)<(qa|0)|(pa|0)==(qa|0)&p>>>0<n>>>0){c[(Wb()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((ua|0)>-1){n=ua;oa=S;qa=pa;ra=p;while(1){sa=n<<1;if(oa<.5){xa=oa;ya=sa}else{xa=oa+-1.0;ya=sa|1}za=oa+xa;sa=Pu(ra,qa,-1,-1)|0;ta=J;if((ya|0)>-1){n=ya;oa=za;qa=ta;ra=sa}else{Aa=ya;Ba=za;Ca=ta;Da=sa;break}}}else{Aa=ua;Ba=S;Ca=pa;Da=p}ra=0;qa=Qu(32,0,j,(j|0)<0|0?-1:0)|0;n=Pu(Da,Ca,qa,J)|0;qa=J;if((ra|0)>(qa|0)|(ra|0)==(qa|0)&k>>>0>n>>>0){qa=n;Ea=(qa|0)<0?0:qa}else{Ea=k}do{if((Ea|0)<53){oa=+(r|0);za=+Eb(+(+Du(1.0,84-Ea|0)),+oa);if(!((Ea|0)<32&Ba!=0.0)){Fa=Ba;Ga=Aa;Ha=za;Ia=oa;break}qa=Aa&1;Fa=(qa|0)==0?0.0:Ba;Ga=(qa^1)+Aa|0;Ha=za;Ia=oa}else{Fa=Ba;Ga=Aa;Ha=0.0;Ia=+(r|0)}}while(0);oa=Ia*Fa+(Ha+Ia*+(Ga>>>0>>>0))-Ha;if(!(oa!=0.0)){c[(Wb()|0)>>2]=34}l=+Eu(oa,Da);i=g;return+l}else{F=t}}while(0);p=j+k|0;pa=3-p|0;qa=F;n=0;while(1){if((qa|0)==46){x=137;break}else if((qa|0)!=48){Ja=qa;Ka=0;La=n;Ma=0;Na=0;break}ra=c[e>>2]|0;if(ra>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ra+1;qa=d[ra]|0;n=1;continue}else{qa=Cu(b)|0;n=1;continue}}c:do{if((x|0)==137){qa=c[e>>2]|0;if(qa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=qa+1;Oa=d[qa]|0}else{Oa=Cu(b)|0}if((Oa|0)==48){Pa=-1;Qa=-1}else{Ja=Oa;Ka=1;La=n;Ma=0;Na=0;break}while(1){qa=c[e>>2]|0;if(qa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=qa+1;Sa=d[qa]|0}else{Sa=Cu(b)|0}if((Sa|0)!=48){Ja=Sa;Ka=1;La=1;Ma=Pa;Na=Qa;break c}qa=Pu(Qa,Pa,-1,-1)|0;Pa=J;Qa=qa}}}while(0);n=h|0;c[n>>2]=0;qa=Ja-48|0;ra=(Ja|0)==46;d:do{if(qa>>>0<10>>>0|ra){o=h+496|0;q=Ma;sa=Na;ta=0;Ta=0;Ua=0;Va=La;Wa=Ka;Xa=0;Ya=0;Za=Ja;_a=qa;$a=ra;while(1){do{if($a){if((Wa|0)==0){bb=Ya;cb=Xa;db=1;eb=Va;fb=Ua;gb=ta;hb=Ta;ib=ta;jb=Ta}else{kb=q;lb=sa;mb=ta;nb=Ta;ob=Ua;pb=Va;qb=Xa;rb=Ya;sb=Za;break d}}else{tb=Pu(Ta,ta,1,0)|0;ub=J;vb=(Za|0)!=48;if((Xa|0)>=125){if(!vb){bb=Ya;cb=Xa;db=Wa;eb=Va;fb=Ua;gb=ub;hb=tb;ib=q;jb=sa;break}c[o>>2]=c[o>>2]|1;bb=Ya;cb=Xa;db=Wa;eb=Va;fb=Ua;gb=ub;hb=tb;ib=q;jb=sa;break}wb=h+(Xa<<2)|0;if((Ya|0)==0){xb=_a}else{xb=Za-48+((c[wb>>2]|0)*10|0)|0}c[wb>>2]=xb;wb=Ya+1|0;yb=(wb|0)==9;bb=yb?0:wb;cb=(yb&1)+Xa|0;db=Wa;eb=1;fb=vb?tb:Ua;gb=ub;hb=tb;ib=q;jb=sa}}while(0);tb=c[e>>2]|0;if(tb>>>0<(c[m>>2]|0)>>>0){c[e>>2]=tb+1;zb=d[tb]|0}else{zb=Cu(b)|0}tb=zb-48|0;ub=(zb|0)==46;if(tb>>>0<10>>>0|ub){q=ib;sa=jb;ta=gb;Ta=hb;Ua=fb;Va=eb;Wa=db;Xa=cb;Ya=bb;Za=zb;_a=tb;$a=ub}else{Ab=ib;Bb=jb;Cb=gb;Db=hb;Fb=fb;Gb=eb;Hb=db;Ib=cb;Jb=bb;Kb=zb;x=160;break}}}else{Ab=Ma;Bb=Na;Cb=0;Db=0;Fb=0;Gb=La;Hb=Ka;Ib=0;Jb=0;Kb=Ja;x=160}}while(0);if((x|0)==160){ra=(Hb|0)==0;kb=ra?Cb:Ab;lb=ra?Db:Bb;mb=Cb;nb=Db;ob=Fb;pb=Gb;qb=Ib;rb=Jb;sb=Kb}ra=(pb|0)!=0;do{if(ra){if((sb|32|0)!=101){x=169;break}qa=Au(b,f)|0;$a=J;do{if((qa|0)==0&($a|0)==(-2147483648|0)){if(w){Bu(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){Lb=0;Mb=0;break}c[e>>2]=(c[e>>2]|0)-1;Lb=0;Mb=0;break}}else{Lb=$a;Mb=qa}}while(0);qa=Pu(Mb,Lb,lb,kb)|0;Nb=J;Ob=qa}else{x=169}}while(0);do{if((x|0)==169){if(!((sb|0)>-1)){Nb=kb;Ob=lb;break}if((c[m>>2]|0)==0){Nb=kb;Ob=lb;break}c[e>>2]=(c[e>>2]|0)-1;Nb=kb;Ob=lb}}while(0);if(!ra){c[(Wb()|0)>>2]=22;Bu(b,0);l=0.0;i=g;return+l}qa=c[n>>2]|0;if((qa|0)==0){l=+(r|0)*0.0;i=g;return+l}$a=0;do{if((Ob|0)==(nb|0)&(Nb|0)==(mb|0)&((mb|0)<($a|0)|(mb|0)==($a|0)&nb>>>0<10>>>0)){if(!(k>>>0>30>>>0)){if((qa>>>(k>>>0)|0)!=0){break}}l=+(r|0)*+(qa>>>0>>>0);i=g;return+l}}while(0);qa=(j|0)/-2|0;$a=(qa|0)<0|0?-1:0;if((Nb|0)>($a|0)|(Nb|0)==($a|0)&Ob>>>0>qa>>>0){c[(Wb()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}qa=j-106|0;$a=(qa|0)<0|0?-1:0;if((Nb|0)<($a|0)|(Nb|0)==($a|0)&Ob>>>0<qa>>>0){c[(Wb()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((rb|0)==0){Pb=qb}else{if((rb|0)<9){qa=h+(qb<<2)|0;$a=rb;ra=c[qa>>2]|0;do{ra=ra*10|0;$a=$a+1|0;}while(($a|0)<9);c[qa>>2]=ra}Pb=qb+1|0}$a=Ob;do{if((ob|0)<9){if(!((ob|0)<=($a|0)&($a|0)<18)){break}if(($a|0)==9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0);i=g;return+l}if(($a|0)<9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0)/+(c[1184+(8-$a<<2)>>2]|0);i=g;return+l}_a=k+27+($a*-3|0)|0;Za=c[n>>2]|0;if((_a|0)<=30){if((Za>>>(_a>>>0)|0)!=0){break}}l=+(r|0)*+(Za>>>0>>>0)*+(c[1184+($a-10<<2)>>2]|0);i=g;return+l}}while(0);n=($a|0)%9|0;if((n|0)==0){Qb=0;Rb=Pb;Sb=0;Tb=$a}else{ra=($a|0)>-1?n:n+9|0;n=c[1184+(8-ra<<2)>>2]|0;do{if((Pb|0)==0){Ub=0;Vb=0;Xb=$a}else{qa=1e9/(n|0)|0;Za=$a;_a=0;Ya=0;Xa=0;while(1){Wa=h+(Ya<<2)|0;Va=c[Wa>>2]|0;Ua=((Va>>>0)/(n>>>0)|0)+Xa|0;c[Wa>>2]=Ua;Yb=fa((Va>>>0)%(n>>>0)|0,qa)|0;Va=Ya+1|0;if((Ya|0)==(_a|0)&(Ua|0)==0){Zb=Va&127;_b=Za-9|0}else{Zb=_a;_b=Za}if((Va|0)==(Pb|0)){break}else{Za=_b;_a=Zb;Ya=Va;Xa=Yb}}if((Yb|0)==0){Ub=Pb;Vb=Zb;Xb=_b;break}c[h+(Pb<<2)>>2]=Yb;Ub=Pb+1|0;Vb=Zb;Xb=_b}}while(0);Qb=Vb;Rb=Ub;Sb=0;Tb=9-ra+Xb|0}e:while(1){n=h+(Qb<<2)|0;if((Tb|0)<18){$a=Rb;Xa=Sb;while(1){Ya=0;_a=$a+127|0;Za=$a;while(1){qa=_a&127;Va=h+(qa<<2)|0;Ua=c[Va>>2]|0;Wa=Pu(Ua<<29|0>>>3,0<<29|Ua>>>3,Ya,0)|0;Ua=J;Ta=0;if(Ua>>>0>Ta>>>0|Ua>>>0==Ta>>>0&Wa>>>0>1e9>>>0){Ta=_u(Wa,Ua,1e9,0)|0;ta=$u(Wa,Ua,1e9,0)|0;$b=Ta;ac=ta}else{$b=0;ac=Wa}c[Va>>2]=ac;Va=(qa|0)==(Qb|0);if((qa|0)!=(Za+127&127|0)|Va){bc=Za}else{bc=(ac|0)==0?qa:Za}if(Va){break}else{Ya=$b;_a=qa-1|0;Za=bc}}Za=Xa-29|0;if(($b|0)==0){$a=bc;Xa=Za}else{cc=Za;dc=bc;ec=$b;break}}}else{if((Tb|0)==18){fc=Rb;gc=Sb}else{hc=Qb;ic=Rb;jc=Sb;kc=Tb;break}while(1){if(!((c[n>>2]|0)>>>0<9007199>>>0)){hc=Qb;ic=fc;jc=gc;kc=18;break e}Xa=0;$a=fc+127|0;Za=fc;while(1){_a=$a&127;Ya=h+(_a<<2)|0;qa=c[Ya>>2]|0;Va=Pu(qa<<29|0>>>3,0<<29|qa>>>3,Xa,0)|0;qa=J;Wa=0;if(qa>>>0>Wa>>>0|qa>>>0==Wa>>>0&Va>>>0>1e9>>>0){Wa=_u(Va,qa,1e9,0)|0;ta=$u(Va,qa,1e9,0)|0;lc=Wa;mc=ta}else{lc=0;mc=Va}c[Ya>>2]=mc;Ya=(_a|0)==(Qb|0);if((_a|0)!=(Za+127&127|0)|Ya){nc=Za}else{nc=(mc|0)==0?_a:Za}if(Ya){break}else{Xa=lc;$a=_a-1|0;Za=nc}}Za=gc-29|0;if((lc|0)==0){fc=nc;gc=Za}else{cc=Za;dc=nc;ec=lc;break}}}n=Qb+127&127;if((n|0)==(dc|0)){Za=dc+127&127;$a=h+((dc+126&127)<<2)|0;c[$a>>2]=c[$a>>2]|c[h+(Za<<2)>>2];oc=Za}else{oc=dc}c[h+(n<<2)>>2]=ec;Qb=n;Rb=oc;Sb=cc;Tb=Tb+9|0}f:while(1){pc=ic+1&127;ra=h+((ic+127&127)<<2)|0;n=hc;Za=jc;$a=kc;while(1){Xa=($a|0)==18;_a=($a|0)>27?9:1;qc=n;rc=Za;while(1){Ya=0;while(1){if((Ya|0)>=2){sc=Ya;break}Va=Ya+qc&127;if((Va|0)==(ic|0)){sc=2;break}ta=c[h+(Va<<2)>>2]|0;Va=c[1176+(Ya<<2)>>2]|0;if(ta>>>0<Va>>>0){sc=2;break}if(ta>>>0>Va>>>0){sc=Ya;break}else{Ya=Ya+1|0}}if((sc|0)==2&Xa){break f}tc=_a+rc|0;if((qc|0)==(ic|0)){qc=ic;rc=tc}else{break}}Xa=(1<<_a)-1|0;Ya=1e9>>>(_a>>>0);uc=$a;vc=qc;Va=qc;wc=0;do{ta=h+(Va<<2)|0;Wa=c[ta>>2]|0;qa=(Wa>>>(_a>>>0))+wc|0;c[ta>>2]=qa;wc=fa(Wa&Xa,Ya)|0;Wa=(Va|0)==(vc|0)&(qa|0)==0;Va=Va+1&127;uc=Wa?uc-9|0:uc;vc=Wa?Va:vc;}while((Va|0)!=(ic|0));if((wc|0)==0){n=vc;Za=tc;$a=uc;continue}if((pc|0)!=(vc|0)){break}c[ra>>2]=c[ra>>2]|1;n=vc;Za=tc;$a=uc}c[h+(ic<<2)>>2]=wc;hc=vc;ic=pc;jc=tc;kc=uc}$a=qc&127;if(($a|0)==(ic|0)){c[h+(pc-1<<2)>>2]=0;xc=pc}else{xc=ic}oa=+((c[h+($a<<2)>>2]|0)>>>0>>>0);$a=qc+1&127;if(($a|0)==(xc|0)){Za=xc+1&127;c[h+(Za-1<<2)>>2]=0;yc=Za}else{yc=xc}za=+(r|0);zc=za*(oa*1.0e9+ +((c[h+($a<<2)>>2]|0)>>>0>>>0));$a=rc+53|0;Za=$a-j|0;if((Za|0)<(k|0)){Ac=(Za|0)<0?0:Za;Bc=1}else{Ac=k;Bc=0}if((Ac|0)<53){oa=+Eb(+(+Du(1.0,105-Ac|0)),+zc);Cc=+ab(+zc,+(+Du(1.0,53-Ac|0)));Dc=oa;Ec=Cc;Fc=oa+(zc-Cc)}else{Dc=0.0;Ec=0.0;Fc=zc}n=qc+2&127;do{if((n|0)==(yc|0)){Gc=Ec}else{ra=c[h+(n<<2)>>2]|0;do{if(ra>>>0<5e8>>>0){if((ra|0)==0){if((qc+3&127|0)==(yc|0)){Hc=Ec;break}}Hc=za*.25+Ec}else{if(ra>>>0>5e8>>>0){Hc=za*.75+Ec;break}if((qc+3&127|0)==(yc|0)){Hc=za*.5+Ec;break}else{Hc=za*.75+Ec;break}}}while(0);if((53-Ac|0)<=1){Gc=Hc;break}if(+ab(+Hc,+1.0)!=0.0){Gc=Hc;break}Gc=Hc+1.0}}while(0);za=Fc+Gc-Dc;do{if(($a&2147483647|0)>(-2-p|0)){if(+U(+za)<9007199254740992.0){Ic=za;Jc=Bc;Kc=rc}else{Ic=za*.5;Jc=(Bc|0)!=0&(Ac|0)==(Za|0)?0:Bc;Kc=rc+1|0}if((Kc+53|0)<=(pa|0)){if(!((Jc|0)!=0&Gc!=0.0)){Lc=Ic;Mc=Kc;break}}c[(Wb()|0)>>2]=34;Lc=Ic;Mc=Kc}else{Lc=za;Mc=rc}}while(0);l=+Eu(Lc,Mc);i=g;return+l}}while(0);if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}c[(Wb()|0)>>2]=22;Bu(b,0);l=0.0;i=g;return+l}}while(0);do{if((x|0)==23){b=(c[m>>2]|0)==0;if(!b){c[e>>2]=(c[e>>2]|0)-1}if(s>>>0<4>>>0|(f|0)==0|b){break}else{Nc=s}do{c[e>>2]=(c[e>>2]|0)-1;Nc=Nc-1|0;}while(Nc>>>0>3>>>0)}}while(0);l=+(r|0)*v;i=g;return+l}function Au(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f]|0}else{h=Cu(a)|0}do{if((h|0)==45|(h|0)==43){f=(h|0)==45|0;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i]|0}else{j=Cu(a)|0}if((j-48|0)>>>0<10>>>0|(b|0)==0){k=f;l=j;break}if((c[g>>2]|0)==0){k=f;l=j;break}c[e>>2]=(c[e>>2]|0)-1;k=f;l=j}else{k=0;l=h}}while(0);if((l-48|0)>>>0>9>>>0){if((c[g>>2]|0)==0){m=-2147483648;n=0;return(J=m,n)|0}c[e>>2]=(c[e>>2]|0)-1;m=-2147483648;n=0;return(J=m,n)|0}else{o=l;p=0}while(1){q=o-48+p|0;l=c[e>>2]|0;if(l>>>0<(c[g>>2]|0)>>>0){c[e>>2]=l+1;r=d[l]|0}else{r=Cu(a)|0}if(!((r-48|0)>>>0<10>>>0&(q|0)<214748364)){break}o=r;p=q*10|0}p=q;o=(q|0)<0|0?-1:0;if((r-48|0)>>>0<10>>>0){q=r;l=o;h=p;while(1){j=Zu(h,l,10,0)|0;b=J;f=Pu(q,(q|0)<0|0?-1:0,-48,-1)|0;i=Pu(f,J,j,b)|0;b=J;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;s=d[j]|0}else{s=Cu(a)|0}j=21474836;if((s-48|0)>>>0<10>>>0&((b|0)<(j|0)|(b|0)==(j|0)&i>>>0<2061584302>>>0)){q=s;l=b;h=i}else{t=s;u=b;v=i;break}}}else{t=r;u=o;v=p}if((t-48|0)>>>0<10>>>0){do{t=c[e>>2]|0;if(t>>>0<(c[g>>2]|0)>>>0){c[e>>2]=t+1;w=d[t]|0}else{w=Cu(a)|0}}while((w-48|0)>>>0<10>>>0)}if((c[g>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}e=(k|0)!=0;k=Qu(0,0,v,u)|0;m=e?J:u;n=e?k:v;return(J=m,n)|0}function Bu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0)){c[a+100>>2]=e+b;return}else{c[a+100>>2]=d;return}}function Cu(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b+104|0;f=c[e>>2]|0;if((f|0)==0){g=3}else{if((c[b+108>>2]|0)<(f|0)){g=3}}do{if((g|0)==3){f=Gu(b)|0;if((f|0)<0){break}h=c[e>>2]|0;i=c[b+8>>2]|0;do{if((h|0)==0){g=8}else{j=c[b+4>>2]|0;k=h-(c[b+108>>2]|0)-1|0;if((i-j|0)<=(k|0)){g=8;break}c[b+100>>2]=j+k}}while(0);if((g|0)==8){c[b+100>>2]=i}h=c[b+4>>2]|0;if((i|0)!=0){k=b+108|0;c[k>>2]=i+1-h+(c[k>>2]|0)}k=h-1|0;if((d[k]|0|0)==(f|0)){l=f;return l|0}a[k]=f;l=f;return l|0}}while(0);c[b+100>>2]=0;l=-1;return l|0}function Du(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0.0,g=0;do{if((b|0)>1023){d=a*8.98846567431158e+307;e=b-1023|0;if((e|0)<=1023){f=d;g=e;break}e=b-2046|0;f=d*8.98846567431158e+307;g=(e|0)>1023?1023:e}else{if(!((b|0)<-1022)){f=a;g=b;break}d=a*2.2250738585072014e-308;e=b+1022|0;if(!((e|0)<-1022)){f=d;g=e;break}e=b+2044|0;f=d*2.2250738585072014e-308;g=(e|0)<-1022?-1022:e}}while(0);return+(f*(c[k>>2]=0<<20|0>>>12,c[k+4>>2]=g+1023<<20|0>>>12,+h[k>>3]))}function Eu(a,b){a=+a;b=b|0;return+(+Du(a,b))}function Fu(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b+74|0;e=a[d]|0;a[d]=e-1&255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0){Ic[c[b+36>>2]&127](b,0,0)|0}c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=b|0;f=c[e>>2]|0;if((f&20|0)==0){g=c[d>>2]|0;c[b+8>>2]=g;c[b+4>>2]=g;h=0;return h|0}if((f&4|0)==0){h=-1;return h|0}c[e>>2]=f|32;h=-1;return h|0}function Gu(a){a=a|0;var b=0,e=0,f=0,g=0;b=i;i=i+8|0;e=b|0;if((c[a+8>>2]|0)==0){if((Fu(a)|0)==0){f=3}else{g=-1}}else{f=3}do{if((f|0)==3){if((Ic[c[a+32>>2]&127](a,e,1)|0)!=1){g=-1;break}g=d[e]|0}}while(0);i=b;return g|0}function Hu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d|0;Nu(e|0,0,112)|0;f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Bu(e,0);h=+zu(e,1,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+h}if((j|0)==0){k=a}else{k=a+j|0}c[b>>2]=k;i=d;return+h}function Iu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d|0;Nu(e|0,0,112)|0;f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Bu(e,0);h=+zu(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+h}if((j|0)==0){k=a}else{k=a+j|0}c[b>>2]=k;i=d;return+h}function Ju(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a[b]|0;e=a[c]|0;if(d<<24>>24!=e<<24>>24|d<<24>>24==0|e<<24>>24==0){f=d;g=e;h=f&255;i=g&255;j=h-i|0;return j|0}else{k=b;l=c}while(1){c=k+1|0;b=l+1|0;e=a[c]|0;d=a[b]|0;if(e<<24>>24!=d<<24>>24|e<<24>>24==0|d<<24>>24==0){f=e;g=d;break}else{k=c;l=b}}h=f&255;i=g&255;j=h-i|0;return j|0}function Ku(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return yb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Lu(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function Mu(b,c){b=b|0;c=c|0;var d=0;do{a[b+d|0]=a[c+d|0];d=d+1|0}while(a[c+(d-1)|0]|0);return b|0}function Nu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function Ou(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{Ku(b,c,d)|0}return b|0}function Pu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(J=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function Qu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(J=e,a-c>>>0|0)|0}function Ru(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}J=a<<c-32;return 0}function Su(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=0;return b>>>c-32|0}function Tu(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=(b|0)<0?-1:0;return b>>c-32|0}function Uu(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function Vu(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function Wu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=fa(d,c)|0;f=a>>>16;a=(e>>>16)+(fa(d,f)|0)|0;d=b>>>16;b=fa(d,c)|0;return(J=(a>>>16)+(fa(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function Xu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=Qu(e^a,f^b,e,f)|0;b=J;a=g^e;e=h^f;f=Qu((av(i,b,Qu(g^c,h^d,g,h)|0,J,0)|0)^a,J^e,a,e)|0;return(J=J,f)|0}function Yu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=Qu(h^a,j^b,h,j)|0;b=J;av(m,b,Qu(k^d,l^e,k,l)|0,J,g)|0;l=Qu(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=J;i=f;return(J=j,l)|0}function Zu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=Wu(e,a)|0;f=J;return(J=(fa(b,a)|0)+(fa(d,e)|0)+f|f&0,c|0|0)|0}function _u(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=av(a,b,c,d,0)|0;return(J=J,e)|0}function $u(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;av(a,b,d,e,g)|0;i=f;return(J=c[g+4>>2]|0,c[g>>2]|0)|0}function av(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(J=n,o)|0}else{if(!m){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(J=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(J=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(J=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((Vu(l|0)|0)>>>0);return(J=n,o)|0}p=(Uu(l|0)|0)-(Uu(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}else{if(!m){r=(Uu(l|0)|0)-(Uu(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(Uu(j|0)|0)+33-(Uu(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(J=n,o)|0}else{p=Vu(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(J=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=Pu(g,d,-1,-1)|0;k=J;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;Qu(e,k,j,a)|0;b=J;h=b>>31|((b|0)<0?-1:0)<<1;K=h&1;L=Qu(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=J;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=M;u=L;t=b;s=K}}B=H;C=I;D=M;E=L;F=0;G=K}K=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|F;o=(K<<1|0>>>31)&-2|G;return(J=n,o)|0}



function Cf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0;e=i;f=b;b=d;if(+h[b+16>>3]<+h[b+24>>3]){g=1}else{Ji(7104,18544,1497);g=1}if((c[b+40>>2]|0)!=0){if((c[(c[b+40>>2]|0)+28>>2]|0)==0){j=1}else{k=5}}else{k=5}if((k|0)==5){Ji(16408,18544,1498);j=1}j=c[b+40>>2]|0;g=c[j>>2]|0;do{if(+h[g+8>>3]!=-1.7976931348623157e+308){l=1}else{if(+h[g+16>>3]!=1.7976931348623157e+308){l=1;break}Ji(21592,18544,1502);l=1}}while(0);if(+h[g+8>>3]<+h[g+16>>3]){m=1}else{Ji(20328,18544,1503);m=1}n=+h[g+8>>3];if(n!=-1.7976931348623157e+308){o=c[g+24>>2]|0;while(1){if((o|0)==0){break}if((o|0)!=(j|0)){if(+h[o+8>>3]>0.0){if(+h[(c[o+4>>2]|0)+24>>3]==1.7976931348623157e+308){k=18;break}n=n- +h[o+8>>3]*+h[(c[o+4>>2]|0)+24>>3]}else{if(+h[(c[o+4>>2]|0)+16>>3]==-1.7976931348623157e+308){k=21;break}n=n- +h[o+8>>3]*+h[(c[o+4>>2]|0)+16>>3]}}o=c[o+20>>2]|0}if((k|0)==18){n=-1.7976931348623157e+308}else if((k|0)==21){n=-1.7976931348623157e+308}}p=+h[g+16>>3];if(p!=1.7976931348623157e+308){o=c[g+24>>2]|0;while(1){if((o|0)==0){break}if((o|0)!=(j|0)){if(+h[o+8>>3]>0.0){if(+h[(c[o+4>>2]|0)+16>>3]==-1.7976931348623157e+308){k=33;break}p=p- +h[o+8>>3]*+h[(c[o+4>>2]|0)+16>>3]}else{if(+h[(c[o+4>>2]|0)+24>>3]==1.7976931348623157e+308){k=36;break}p=p- +h[o+8>>3]*+h[(c[o+4>>2]|0)+24>>3]}}o=c[o+20>>2]|0}if((k|0)==33){p=1.7976931348623157e+308}else if((k|0)==36){p=1.7976931348623157e+308}}if(+h[j+8>>3]>0.0){if(n==-1.7976931348623157e+308){q=-1.7976931348623157e+308}else{q=n/+h[j+8>>3]}r=q}else{if(p==1.7976931348623157e+308){s=-1.7976931348623157e+308}else{s=p/+h[j+8>>3]}r=s}if(+h[j+8>>3]>0.0){if(p==1.7976931348623157e+308){t=1.7976931348623157e+308}else{t=p/+h[j+8>>3]}u=t}else{if(n==-1.7976931348623157e+308){v=1.7976931348623157e+308}else{v=n/+h[j+8>>3]}u=v}do{if(+h[b+16>>3]!=-1.7976931348623157e+308){w=+U(+(+h[b+16>>3]))*1.0e-12+1.0e-9;if(!(r<+h[b+16>>3]-w)){break}x=1;y=x;i=e;return y|0}}while(0);do{if(+h[b+24>>3]!=1.7976931348623157e+308){w=+U(+(+h[b+24>>3]))*1.0e-12+1.0e-9;if(!(u>+h[b+24>>3]+w)){break}x=1;y=x;i=e;return y|0}}while(0);h[b+16>>3]=-1.7976931348623157e+308;h[b+24>>3]=1.7976931348623157e+308;o=_e(f,90,8)|0;c[o>>2]=c[g>>2];a[o+4|0]=-1;w=+h[b+32>>3]/+h[j+8>>3];do{if(w>2.220446049250313e-16){if(+h[g+8>>3]!=-1.7976931348623157e+308){k=70;break}if(w>1.0e-5){x=2;y=x;i=e;return y|0}if(+h[g+16>>3]!=1.7976931348623157e+308){z=1}else{Ji(16064,18544,1585);z=1}k=80}else{if(w<-2.220446049250313e-16){if(+h[g+16>>3]!=1.7976931348623157e+308){k=80;break}if(w<-1.0e-5){x=2;y=x;i=e;return y|0}if(+h[g+8>>3]!=-1.7976931348623157e+308){A=1}else{Ji(15672,18544,1598);A=1}k=70;break}if(+h[g+16>>3]==1.7976931348623157e+308){if(+h[g+8>>3]!=-1.7976931348623157e+308){B=1}else{Ji(15672,18544,1605);B=1}k=70;break}if(+h[g+8>>3]==-1.7976931348623157e+308){if(+h[g+16>>3]!=1.7976931348623157e+308){C=1}else{Ji(16064,18544,1609);C=1}k=80;break}else{u=+U(+(+h[g+8>>3]));if(u<=+U(+(+h[g+16>>3]))){k=70;break}else{k=80;break}}}}while(0);if((k|0)==70){a[o+4|0]=2;h[g+16>>3]=+h[g+8>>3]}else if((k|0)==80){a[o+4|0]=3;h[g+8>>3]=+h[g+16>>3]}x=0;y=x;i=e;return y|0}function Df(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=b;b=d;if((c[f+92>>2]|0)==1){if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)==1){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=1}else{if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)!=5){g=1;h=g;i=e;return h|0}do{if((a[b+4|0]|0)==2){j=1}else{if((a[b+4|0]|0)==3){j=1;break}Ji(12784,18544,1624);j=1}}while(0);a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=a[b+4|0]|0}}g=0;h=g;i=e;return h|0}function Ef(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;g=b;b=d;d=e;e=0;do{if((d|0)==0){j=1}else{if((d|0)==1){j=1;break}Ji(15064,18544,2100);j=1}}while(0);k=1.0;j=c[b+24>>2]|0;while(1){if((j|0)==0){break}if(k<+U(+(+h[j+8>>3]))){k=+U(+(+h[j+8>>3]))}j=c[j+20>>2]|0}j=c[b+24>>2]|0;while(1){if((j|0)==0){break}if(+U(+(+h[j+8>>3]))<1.0e-7*k){l=13;break}j=c[j+20>>2]|0}if((l|0)==13){m=1;n=m;i=f;return n|0}o=_e(g,70,12)|0;c[o>>2]=c[b>>2];if(+h[b+8>>3]==+h[b+16>>3]){a[o+4|0]=5}else{if((d|0)==0){a[o+4|0]=2;if(+h[b+8>>3]!=-1.7976931348623157e+308){p=1}else{Ji(15672,18544,2120);p=1}}else{a[o+4|0]=3;if(+h[b+16>>3]!=1.7976931348623157e+308){q=1}else{Ji(16064,18544,2125);q=1}}}c[o+8>>2]=0;j=c[b+24>>2]|0;while(1){if((j|0)==0){break}q=c[j+4>>2]|0;if(+h[q+16>>3]<+h[q+24>>3]){r=1}else{Ji(14840,18544,2134);r=1}if((c[g+92>>2]|0)!=3){e=Si(c[g+64>>2]|0,32)|0;c[e>>2]=c[q>>2];a[e+4|0]=-1;h[e+8>>3]=+h[j+8>>3];h[e+16>>3]=+h[q+32>>3];c[e+24>>2]=0;c[e+28>>2]=c[o+8>>2];c[o+8>>2]=e}if((d|0)==0){if(+h[j+8>>3]<0.0){l=36}else{l=34}}else{l=34}do{if((l|0)==34){l=0;if((d|0)!=0){if(+h[j+8>>3]>0.0){l=36;break}}if((c[g+92>>2]|0)!=3){a[e+4|0]=3}if(+h[q+24>>3]!=1.7976931348623157e+308){s=1}else{Ji(13840,18544,2158);s=1}h[q+16>>3]=+h[q+24>>3]}}while(0);if((l|0)==36){l=0;if((c[g+92>>2]|0)!=3){a[e+4|0]=2}if(+h[q+16>>3]!=-1.7976931348623157e+308){t=1}else{Ji(14376,18544,2151);t=1}h[q+24>>3]=+h[q+16>>3]}if((c[g+92>>2]|0)!=3){p=c[q+40>>2]|0;while(1){if((p|0)==0){break}if((p|0)!=(j|0)){u=Si(c[g+64>>2]|0,24)|0;c[u>>2]=c[c[p>>2]>>2];h[u+8>>3]=+h[p+8>>3];c[u+16>>2]=c[e+24>>2];c[e+24>>2]=u}p=c[p+28>>2]|0}}j=c[j+20>>2]|0}h[b+8>>3]=-1.7976931348623157e+308;h[b+16>>3]=1.7976931348623157e+308;m=0;n=m;i=f;return n|0}function Ff(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0;e=i;f=b;b=d;if((c[f+92>>2]|0)!=3){do{if((c[f+92>>2]|0)==1){if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)!=1){g=1;j=g;i=e;return j|0}k=c[b+8>>2]|0;while(1){if((k|0)==0){l=12;break}if((a[(c[f+120>>2]|0)+(c[k>>2]|0)|0]|0)!=5){break}a[(c[f+120>>2]|0)+(c[k>>2]|0)|0]=a[k+4|0]|0;k=c[k+28>>2]|0}if((l|0)==12){break}g=1;j=g;i=e;return j|0}}while(0);k=c[b+8>>2]|0;while(1){if((k|0)==0){break}m=+h[k+16>>3];d=c[k+24>>2]|0;while(1){if((d|0)==0){break}m=m- +h[d+8>>3]*+h[(c[f+124>>2]|0)+(c[d>>2]<<3)>>3];d=c[d+16>>2]|0}h[k+16>>3]=m;k=c[k+28>>2]|0}d=0;n=0.0;k=c[b+8>>2]|0;while(1){if((k|0)==0){break}m=+h[k+16>>3];o=+U(+(m/+h[k+8>>3]));if((a[k+4|0]|0)==2){do{if(m<0.0){if(!(n<o)){break}d=k;n=o}}while(0)}else{if((a[k+4|0]|0)!=3){l=33;break}do{if(m>0.0){if(!(n<o)){break}d=k;n=o}}while(0)}k=c[k+28>>2]|0}if((l|0)==33){g=1;j=g;i=e;return j|0}if((d|0)!=0){if((c[f+92>>2]|0)==1){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=a[b+4|0]|0;a[(c[f+120>>2]|0)+(c[d>>2]|0)|0]=1}h[(c[f+124>>2]|0)+(c[b>>2]<<3)>>3]=+h[d+16>>3]/+h[d+8>>3]}}g=0;j=g;i=e;return j|0}function Gf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0,j=0,k=0.0,l=0.0,m=0;d=i;e=a;a=b;b=0;if((e|0)==(e|0)){f=1}else{Ji(10096,18544,2344);f=1}g=0.0;f=c[a+24>>2]|0;while(1){if((f|0)==0){break}if(+h[f+8>>3]>0.0){if(+h[(c[f+4>>2]|0)+16>>3]==-1.7976931348623157e+308){j=7;break}g=g+ +h[f+8>>3]*+h[(c[f+4>>2]|0)+16>>3]}else{if(+h[(c[f+4>>2]|0)+24>>3]==1.7976931348623157e+308){j=10;break}g=g+ +h[f+8>>3]*+h[(c[f+4>>2]|0)+24>>3]}f=c[f+20>>2]|0}if((j|0)==7){g=-1.7976931348623157e+308}else if((j|0)==10){g=-1.7976931348623157e+308}k=0.0;f=c[a+24>>2]|0;while(1){if((f|0)==0){break}if(+h[f+8>>3]>0.0){if(+h[(c[f+4>>2]|0)+24>>3]==1.7976931348623157e+308){j=18;break}k=k+ +h[f+8>>3]*+h[(c[f+4>>2]|0)+24>>3]}else{if(+h[(c[f+4>>2]|0)+16>>3]==-1.7976931348623157e+308){j=21;break}k=k+ +h[f+8>>3]*+h[(c[f+4>>2]|0)+16>>3]}f=c[f+20>>2]|0}if((j|0)==18){k=1.7976931348623157e+308}else if((j|0)==21){k=1.7976931348623157e+308}do{if(+h[a+8>>3]!=-1.7976931348623157e+308){l=+U(+(+h[a+8>>3]))*1.0e-6+.001;if(!(+h[a+8>>3]-l>k)){break}b=51;m=b;i=d;return m|0}}while(0);do{if(+h[a+16>>3]!=1.7976931348623157e+308){l=+U(+(+h[a+16>>3]))*1.0e-6+.001;if(!(+h[a+16>>3]+l<g)){break}b=51;m=b;i=d;return m|0}}while(0);if(+h[a+8>>3]!=-1.7976931348623157e+308){l=+U(+(+h[a+8>>3]))*1.0e-12+1.0e-9;if(+h[a+8>>3]-l>g){if(+h[a+8>>3]+l<=k){b=b|1}else{b=b|2}}}if(+h[a+16>>3]!=1.7976931348623157e+308){l=+U(+(+h[a+16>>3]))*1.0e-12+1.0e-9;if(+h[a+16>>3]+l<k){if(+h[a+16>>3]-l>=g){b=b|16}else{b=b|32}}}m=b;i=d;return m|0}function Hf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0;f=i;g=b;b=d;d=e;if((c[g+92>>2]|0)==1){e=_e(g,56,8)|0;c[e>>2]=c[b>>2];if(+h[b+16>>3]==1.7976931348623157e+308){a[e+4|0]=2}else{if(+h[b+8>>3]==-1.7976931348623157e+308){a[e+4|0]=3}else{if(+h[b+8>>3]!=+h[b+16>>3]){a[e+4|0]=(d|0)==0?3:2}else{a[e+4|0]=5}}}}if((d|0)==0){if(+h[b+8>>3]!=-1.7976931348623157e+308){j=1}else{Ji(15672,18544,2503);j=1}h[b+8>>3]=-1.7976931348623157e+308;i=f;return}if((d|0)==1){if(+h[b+16>>3]!=1.7976931348623157e+308){k=1}else{Ji(16064,18544,2507);k=1}h[b+16>>3]=1.7976931348623157e+308}else{if((d|0)!=(d|0)){l=1}else{Ji(13328,18544,2511);l=1}}i=f;return}function If(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;b=d;if((c[f+92>>2]|0)!=1){g=1;h=g;i=e;return h|0}if((a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]|0)==1){a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=1}else{a[(c[f+116>>2]|0)+(c[b>>2]|0)|0]=a[b+4|0]|0}g=0;h=g;i=e;return h|0}function Jf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0,j=0.0,k=0,l=0,m=0.0;d=i;e=a;a=b;if((e|0)==(e|0)){f=1}else{Ji(10096,18544,2752);f=1}g=1.0;f=c[a+24>>2]|0;while(1){if((f|0)==0){break}h[(c[f+4>>2]|0)+48>>3]=-1.7976931348623157e+308;h[(c[f+4>>2]|0)+56>>3]=1.7976931348623157e+308;if(g<+U(+(+h[f+8>>3]))){g=+U(+(+h[f+8>>3]))}f=c[f+20>>2]|0}j=1.0e-6*g;if(+h[a+8>>3]!=-1.7976931348623157e+308){k=0;f=c[a+24>>2]|0;while(1){if((f|0)==0){l=22;break}if(+h[f+8>>3]>0.0){if(+h[(c[f+4>>2]|0)+24>>3]==1.7976931348623157e+308){l=16}else{l=14}}else{l=14}do{if((l|0)==14){l=0;if(!(+h[f+8>>3]<0.0)){break}if(+h[(c[f+4>>2]|0)+16>>3]==-1.7976931348623157e+308){l=16}}}while(0);if((l|0)==16){l=0;if((k|0)!=0){l=18;break}k=f}f=c[f+20>>2]|0}if((l|0)!=18)if((l|0)==22){m=+h[a+8>>3];f=c[a+24>>2]|0;while(1){if((f|0)==0){break}if((f|0)!=(k|0)){if(+h[f+8>>3]>0.0){m=m- +h[f+8>>3]*+h[(c[f+4>>2]|0)+24>>3]}else{m=m- +h[f+8>>3]*+h[(c[f+4>>2]|0)+16>>3]}}f=c[f+20>>2]|0}if((k|0)==0){f=c[a+24>>2]|0;while(1){if((f|0)==0){break}if(+h[f+8>>3]>=j){h[(c[f+4>>2]|0)+48>>3]=+h[(c[f+4>>2]|0)+24>>3]+m/+h[f+8>>3]}else{if(+h[f+8>>3]<=-0.0-j){h[(c[f+4>>2]|0)+56>>3]=+h[(c[f+4>>2]|0)+16>>3]+m/+h[f+8>>3]}}f=c[f+20>>2]|0}}else{if(+h[k+8>>3]>=j){h[(c[k+4>>2]|0)+48>>3]=m/+h[k+8>>3]}else{if(+h[k+8>>3]<=-0.0-j){h[(c[k+4>>2]|0)+56>>3]=m/+h[k+8>>3]}}}}}if(!(+h[a+16>>3]!=1.7976931348623157e+308)){i=d;return}k=0;f=c[a+24>>2]|0;while(1){if((f|0)==0){l=64;break}if(+h[f+8>>3]>0.0){if(+h[(c[f+4>>2]|0)+16>>3]==-1.7976931348623157e+308){l=58}else{l=56}}else{l=56}do{if((l|0)==56){l=0;if(!(+h[f+8>>3]<0.0)){break}if(+h[(c[f+4>>2]|0)+24>>3]==1.7976931348623157e+308){l=58}}}while(0);if((l|0)==58){l=0;if((k|0)!=0){l=60;break}k=f}f=c[f+20>>2]|0}if((l|0)!=60)if((l|0)==64){m=+h[a+16>>3];f=c[a+24>>2]|0;while(1){if((f|0)==0){break}if((f|0)!=(k|0)){if(+h[f+8>>3]>0.0){m=m- +h[f+8>>3]*+h[(c[f+4>>2]|0)+16>>3]}else{m=m- +h[f+8>>3]*+h[(c[f+4>>2]|0)+24>>3]}}f=c[f+20>>2]|0}if((k|0)==0){f=c[a+24>>2]|0;while(1){if((f|0)==0){break}if(+h[f+8>>3]>=j){h[(c[f+4>>2]|0)+56>>3]=+h[(c[f+4>>2]|0)+16>>3]+m/+h[f+8>>3]}else{if(+h[f+8>>3]<=-0.0-j){h[(c[f+4>>2]|0)+48>>3]=+h[(c[f+4>>2]|0)+24>>3]+m/+h[f+8>>3]}}f=c[f+20>>2]|0}}else{if(+h[k+8>>3]>=j){h[(c[k+4>>2]|0)+56>>3]=m/+h[k+8>>3]}else{if(+h[k+8>>3]<=-0.0-j){h[(c[k+4>>2]|0)+48>>3]=m/+h[k+8>>3]}}}}i=d;return}function Kf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0;b=i;d=a;if((d|0)==(d|0)){e=1}else{Ji(11112,18504,62);e=1}e=c[d+48>>2]|0;while(1){if((e|0)==0){break}f=c[e+36>>2]|0;do{if(+h[e+8>>3]==-1.7976931348623157e+308){if(!(+h[e+16>>3]==1.7976931348623157e+308)){break}hf(d,e)}}while(0);e=f}e=c[d+48>>2]|0;while(1){if((e|0)==0){break}f=c[e+36>>2]|0;do{if(+h[e+8>>3]!=-1.7976931348623157e+308){if(!(+h[e+16>>3]!=1.7976931348623157e+308)){break}if(!(+h[e+8>>3]<+h[e+16>>3])){break}g=mf(d,e)|0;if((g|0)!=0){if((g|0)!=1){if((g|0)!=(g|0)){j=1}else{Ji(13544,18504,90);j=1}}}}}while(0);e=f}f=c[d+56>>2]|0;while(1){if((f|0)==0){break}k=c[f+68>>2]|0;if(+h[f+16>>3]==+h[f+24>>3]){kf(d,f)}f=k}f=c[d+56>>2]|0;while(1){if((f|0)==0){break}k=c[f+68>>2]|0;do{if(+h[f+16>>3]!=-1.7976931348623157e+308){if(!(+h[f+24>>3]!=1.7976931348623157e+308)){break}if(!(+h[f+16>>3]<+h[f+24>>3])){break}g=of(d,f)|0;if((g|0)!=0){if((g|0)==1){kf(d,f)}}}}while(0);f=k}i=b;return}function Lf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;f=a;a=b;b=d;do{if(+h[a+8>>3]==-1.7976931348623157e+308){if(!(+h[a+16>>3]==1.7976931348623157e+308)){g=1;break}Ji(10048,18504,178);g=1}else{g=1}}while(0);if((c[a+24>>2]|0)==0){j=qf(f,a)|0;if((j|0)==0){k=0;l=k;i=e;return l|0}if((j|0)==1){k=10;l=k;i=e;return l|0}if((j|0)!=(j|0)){m=1}else{Ji(13544,18504,195);m=1}}if((c[(c[a+24>>2]|0)+20>>2]|0)==0){n=c[(c[a+24>>2]|0)+4>>2]|0;a:do{if(+h[a+8>>3]==+h[a+16>>3]){j=uf(f,a)|0;if((j|0)==0){o=c[n+40>>2]|0;while(1){if((o|0)==0){break}Re(f,c[o>>2]|0);o=c[o+28>>2]|0}kf(f,n);k=0;l=k;i=e;return l|0}do{if((j|0)!=1){if((j|0)==2){break}if((j|0)!=(j|0)){p=1}else{Ji(13544,18504,221);p=1}break a}}while(0);k=10;l=k;i=e;return l|0}else{j=yf(f,a)|0;do{if(0<=(j|0)){if((j|0)>3){break}Ve(f,n);if((j|0)>=2){o=c[n+40>>2]|0;while(1){if((o|0)==0){break}Re(f,c[o>>2]|0);o=c[o+28>>2]|0}}if((j|0)==3){kf(f,n)}k=0;l=k;i=e;return l|0}}while(0);if((j|0)==4){k=10;l=k;i=e;return l|0}if((j|0)!=(j|0)){q=1}else{Ji(13544,18504,256);q=1}}}while(0)}j=Gf(f,a)|0;if(0<=(j|0)){if((j|0)<=255){r=1}else{s=51}}else{s=51}if((s|0)==51){Ji(7072,18504,292);r=1}if((j|0)==51){k=10;l=k;i=e;return l|0}b:do{if((j&15|0)==0){if(+h[a+8>>3]!=-1.7976931348623157e+308){Hf(f,a,0)}s=78}else{if((j&15|0)!=1){do{if((j&15|0)==2){if((Ef(f,a,0)|0)==0){break b}else{break}}else{if((j|0)!=(j|0)){t=1}else{Ji(13544,18504,341);t=1}}}while(0)}s=78}}while(0);c:do{if((s|0)==78){if((j&240|0)==0){if(+h[a+16>>3]!=1.7976931348623157e+308){Hf(f,a,1)}}else{if((j&240|0)!=16){do{if((j&240|0)==32){if((Ef(f,a,1)|0)==0){break c}else{break}}else{if((j|0)!=(j|0)){u=1}else{Ji(13544,18504,365);u=1}}}while(0)}}do{if(+h[a+8>>3]==-1.7976931348623157e+308){if(!(+h[a+16>>3]==1.7976931348623157e+308)){break}o=c[a+24>>2]|0;while(1){if((o|0)==0){break}Ve(f,c[o+4>>2]|0);o=c[o+20>>2]|0}hf(f,a);k=0;l=k;i=e;return l|0}}while(0);do{if((c[f+92>>2]|0)==3){if((b|0)==0){break}if((Mf(f,a,1)|0)>=0){break}k=10;l=k;i=e;return l|0}}while(0);k=0;l=k;i=e;return l|0}}while(0);o=c[a+24>>2]|0;while(1){if((o|0)==0){break}n=c[o+4>>2]|0;b=c[o+20>>2]|0;u=c[n+40>>2]|0;while(1){if((u|0)==0){break}Re(f,c[u>>2]|0);u=c[u+28>>2]|0}kf(f,n);o=b}hf(f,a);k=0;l=k;i=e;return l|0}function Mf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0;e=i;f=a;a=b;b=d;d=0;if((c[f+92>>2]|0)==3){g=1}else{Ji(5880,18504,427);g=1}do{if(+h[a+8>>3]==-1.7976931348623157e+308){if(!(+h[a+16>>3]==1.7976931348623157e+308)){j=1;break}Ji(10048,18504,429);j=1}else{j=1}}while(0);Jf(f,a);j=c[a+24>>2]|0;a:while(1){if((j|0)==0){k=44;break}g=c[j+4>>2]|0;l=c[j+20>>2]|0;m=0;b:while(1){if((m|0)>1){break}n=+h[g+16>>3];o=+h[g+24>>3];do{if((m|0)==0){if(+h[g+48>>3]==-1.7976931348623157e+308){break}else{p=wf(f,g,+h[g+48>>3])|0;k=17;break}}else{if(+h[g+56>>3]==1.7976931348623157e+308){break}else{p=xf(f,g,+h[g+56>>3])|0;k=17;break}}}while(0);if((k|0)==17){k=0;do{if((p|0)==0){k=19}else{if((p|0)==1){k=19;break}do{if((p|0)==2){k=22}else{if((p|0)==3){k=22;break}if((p|0)==4){k=34;break a}if((p|0)!=(p|0)){q=1}else{Ji(13544,18504,483);q=1}}}while(0);if((k|0)==22){k=0;d=d+1|0;if((b|0)!=0){r=c[g+40>>2]|0;while(1){if((r|0)==0){break}if((c[r>>2]|0)!=(a|0)){Re(f,c[r>>2]|0)}r=c[r+28>>2]|0}}if((p|0)==3){k=31;break b}}}}while(0);if((k|0)==19){k=0;h[g+16>>3]=n;h[g+24>>3]=o}}m=m+1|0}if((k|0)==31){k=0;kf(f,g)}j=l}if((k|0)==34){s=-1;t=s;i=e;return t|0}else if((k|0)==44){s=d;t=s;i=e;return t|0}return 0}function Nf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0;e=i;f=b;b=d;if(+h[b+16>>3]<+h[b+24>>3]){g=1}else{Ji(4704,18504,529);g=1}if((c[b+40>>2]|0)==0){j=rf(f,b)|0;if((j|0)==0){k=0;l=k;i=e;return l|0}if((j|0)==1){k=11;l=k;i=e;return l|0}if((j|0)!=(j|0)){m=1}else{Ji(13544,18504,546);m=1}}do{if((c[(c[b+40>>2]|0)+28>>2]|0)==0){m=c[c[b+40>>2]>>2]|0;do{if(+h[m+8>>3]==+h[m+16>>3]){if((a[b+8|0]|0)!=0){n=38;break}else{break}}else{if((a[b+8|0]|0)==0){j=Cf(f,b)|0;if((j|0)==0){break}do{if((j|0)!=1){if((j|0)!=2){break}k=11;l=k;i=e;return l|0}}while(0)}n=38}}while(0);if((n|0)==38){break}Af(f,b);do{if(+h[m+8>>3]==-1.7976931348623157e+308){if(!(+h[m+16>>3]==1.7976931348623157e+308)){n=24;break}g=c[m+24>>2]|0;while(1){if((g|0)==0){break}Ve(f,c[g+4>>2]|0);g=c[g+20>>2]|0}hf(f,m)}else{n=24}}while(0);if((n|0)==24){Re(f,m)}k=0;l=k;i=e;return l|0}}while(0);k=0;l=k;i=e;return l|0}function Of(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;e=a;a=b;Kf(e);b=c[e+48>>2]|0;while(1){if((b|0)==0){break}c[b+28>>2]=1;b=c[b+36>>2]|0}f=c[e+56>>2]|0;while(1){if((f|0)==0){break}c[f+44>>2]=1;f=c[f+68>>2]|0}g=1;a:while(1){if((g|0)==0){h=26;break}g=0;while(1){b=c[e+48>>2]|0;if((b|0)==0){break}if((c[b+28>>2]|0)==0){break}Se(e,b);j=Lf(e,b,a)|0;if((j|0)!=0){h=16;break a}g=1}while(1){f=c[e+56>>2]|0;if((f|0)==0){break}if((c[f+44>>2]|0)==0){break}We(e,f);j=Nf(e,f)|0;if((j|0)!=0){h=23;break a}g=1}}b:do{if((h|0)!=16)if((h|0)!=23)if((h|0)==26){do{if((c[e+92>>2]|0)==3){if((a|0)!=0){break}b=c[e+48>>2]|0;while(1){if((b|0)==0){h=34;break}if((Mf(e,b,0)|0)<0){h=31;break}b=c[b+36>>2]|0}if((h|0)==31){j=10;break b}else if((h|0)==34){break}}}while(0);j=0}}while(0);if((j|0)==0){k=1;l=k&1;m=j;i=d;return m|0}if((j|0)==10){k=1;l=k&1;m=j;i=d;return m|0}if((j|0)==11){k=1;l=k&1;m=j;i=d;return m|0}Ji(3824,18504,700);k=1;l=k&1;m=j;i=d;return m|0}function Pf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if((c[e+92>>2]|0)==1){f=1}else{Ji(2968,18504,712);f=1}if((a|0)==(a|0)){g=1}else{Ji(2168,18504,713);g=1}g=Of(e,0)|0;i=d;return g|0}function Qf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if((a&-242|0)!=0){Gc[(Hi(10848,470)|0)&127](18432,(b=i,i=i+8|0,c[b>>2]=a,b)|0);i=b}if((a&128|0)==0){f=e;g=a;Rf(f,g);i=d;return}a=81;f=e;g=a;Rf(f,g);i=d;return}function Rf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0.0,j=0.0,k=0.0;d=i;e=a;a=b;Li(10032,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;ge(e);f=+Sf(e,1);g=+Tf(e,1);j=g/f;Li(c[292]|0,(b=i,i=i+32|0,c[b>>2]=7064,h[b+8>>3]=f,h[b+16>>3]=g,h[b+24>>3]=j,b)|0);i=b;do{if(f>=.1){if(!(g<=10.0)){break}Li(5840,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;if((a&64|0)==0){break}i=d;return}}while(0);if((a&1|0)!=0){Uf(e,15,.9);f=+Sf(e,1);g=+Tf(e,1);j=g/f;Li(c[292]|0,(b=i,i=i+32|0,c[b>>2]=4696,h[b+8>>3]=f,h[b+16>>3]=g,h[b+24>>3]=j,b)|0);i=b}if((a&16|0)!=0){k=+Wf(e);Vf(e,k>+Xf(e)|0);f=+Sf(e,1);g=+Tf(e,1);j=g/f;Li(c[292]|0,(b=i,i=i+32|0,c[b>>2]=3816,h[b+8>>3]=f,h[b+16>>3]=g,h[b+24>>3]=j,b)|0);i=b}if((a&32|0)!=0){a=1;while(1){if((a|0)>(c[e+48>>2]|0)){break}ce(e,a,+Xi(+ee(e,a)));a=a+1|0}a=1;while(1){if((a|0)>(c[e+52>>2]|0)){break}de(e,a,+Xi(+fe(e,a)));a=a+1|0}f=+Sf(e,1);g=+Tf(e,1);j=g/f;Li(c[292]|0,(b=i,i=i+32|0,c[b>>2]=2960,h[b+8>>3]=f,h[b+16>>3]=g,h[b+24>>3]=j,b)|0);i=b}i=d;return}function Sf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0.0,h=0;d=i;e=a;a=b;f=1.0;b=1;while(1){if((b|0)>(c[e+48>>2]|0)){break}g=+$f(e,b,a);if((b|0)==1){h=5}else{if(f>g){h=5}}if((h|0)==5){h=0;f=g}b=b+1|0}i=d;return+f}function Tf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0.0,h=0;d=i;e=a;a=b;f=1.0;b=1;while(1){if((b|0)>(c[e+48>>2]|0)){break}g=+_f(e,b,a);if((b|0)==1){h=5}else{if(f<g){h=5}}if((h|0)==5){h=0;f=g}b=b+1|0}i=d;return+f}function Uf(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0.0,g=0.0,h=0,j=0,k=0.0;d=i;e=a;a=b;f=c;c=0.0;g=+Wf(e);b=g>+Xf(e)|0;h=1;while(1){if((h|0)>(a|0)){j=8;break}g=c;k=+Tf(e,1);c=k/+Sf(e,1);if((h|0)>1){if(c>f*g){break}}ag(e,b);h=h+1|0}if((j|0)==8){i=d;return}i=d;return}function Vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0;d=i;e=a;a=b;do{if((a|0)==0){f=1}else{if((a|0)==1){f=1;break}Ji(20304,10848,205);f=1}}while(0);f=0;while(1){if((f|0)>1){break}if((f|0)==(a|0)){b=1;while(1){if((b|0)>(c[e+48>>2]|0)){break}g=+_f(e,b,1);ce(e,b,+ee(e,b)/g);b=b+1|0}}else{b=1;while(1){if((b|0)>(c[e+52>>2]|0)){break}g=+Yf(e,b,1);de(e,b,+fe(e,b)/g);b=b+1|0}}f=f+1|0}i=d;return}function Wf(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,g=0.0,h=0;b=i;d=a;e=1.0;a=1;while(1){if((a|0)>(c[d+48>>2]|0)){break}f=+_f(d,a,1);g=f/+$f(d,a,1);if((a|0)==1){h=5}else{if(e<g){h=5}}if((h|0)==5){h=0;e=g}a=a+1|0}i=b;return+e}function Xf(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,g=0.0,h=0;b=i;d=a;e=1.0;a=1;while(1){if((a|0)>(c[d+52>>2]|0)){break}f=+Yf(d,a,1);g=f/+Zf(d,a,1);if((a|0)==1){h=5}else{if(e<g){h=5}}if((h|0)==5){h=0;e=g}a=a+1|0}i=b;return+e}function Yf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0,l=0.0;e=i;f=a;a=b;b=d;if(1<=(a|0)){if((a|0)<=(c[f+52>>2]|0)){g=1}else{j=3}}else{j=3}if((j|0)==3){Ji(2144,10848,118);g=1}k=1.0;g=c[(c[(c[f+64>>2]|0)+(a<<2)>>2]|0)+48>>2]|0;while(1){if((g|0)==0){break}l=+U(+(+h[g+8>>3]));if((b|0)!=0){l=l*+h[(c[g>>2]|0)+48>>3]*+h[(c[g+4>>2]|0)+56>>3]}if((c[g+24>>2]|0)==0){j=10}else{if(k<l){j=10}}if((j|0)==10){j=0;k=l}g=c[g+28>>2]|0}i=e;return+k}function Zf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0,l=0.0;e=i;f=a;a=b;b=d;if(1<=(a|0)){if((a|0)<=(c[f+52>>2]|0)){g=1}else{j=3}}else{j=3}if((j|0)==3){Ji(2144,10848,93);g=1}k=1.0;g=c[(c[(c[f+64>>2]|0)+(a<<2)>>2]|0)+48>>2]|0;while(1){if((g|0)==0){break}l=+U(+(+h[g+8>>3]));if((b|0)!=0){l=l*+h[(c[g>>2]|0)+48>>3]*+h[(c[g+4>>2]|0)+56>>3]}if((c[g+24>>2]|0)==0){j=10}else{if(k>l){j=10}}if((j|0)==10){j=0;k=l}g=c[g+28>>2]|0}i=e;return+k}function _f(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0,l=0.0;e=i;f=a;a=b;b=d;if(1<=(a|0)){if((a|0)<=(c[f+48>>2]|0)){g=1}else{j=3}}else{j=3}if((j|0)==3){Ji(21568,10848,68);g=1}k=1.0;g=c[(c[(c[f+60>>2]|0)+(a<<2)>>2]|0)+40>>2]|0;while(1){if((g|0)==0){break}l=+U(+(+h[g+8>>3]));if((b|0)!=0){l=l*+h[(c[g>>2]|0)+48>>3]*+h[(c[g+4>>2]|0)+56>>3]}if((c[g+16>>2]|0)==0){j=10}else{if(k<l){j=10}}if((j|0)==10){j=0;k=l}g=c[g+20>>2]|0}i=e;return+k}function $f(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0,l=0.0;e=i;f=a;a=b;b=d;if(1<=(a|0)){if((a|0)<=(c[f+48>>2]|0)){g=1}else{j=3}}else{j=3}if((j|0)==3){Ji(21568,10848,43);g=1}k=1.0;g=c[(c[(c[f+60>>2]|0)+(a<<2)>>2]|0)+40>>2]|0;while(1){if((g|0)==0){break}l=+U(+(+h[g+8>>3]));if((b|0)!=0){l=l*+h[(c[g>>2]|0)+48>>3]*+h[(c[g+4>>2]|0)+56>>3]}if((c[g+16>>2]|0)==0){j=10}else{if(k>l){j=10}}if((j|0)==10){j=0;k=l}g=c[g+20>>2]|0}i=e;return+k}function ag(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0,h=0.0;d=i;e=a;a=b;do{if((a|0)==0){f=1}else{if((a|0)==1){f=1;break}Ji(20304,10848,261);f=1}}while(0);f=0;while(1){if((f|0)>1){break}if((f|0)==(a|0)){b=1;while(1){if((b|0)>(c[e+48>>2]|0)){break}g=+$f(e,b,1);h=g*+_f(e,b,1);ce(e,b,+ee(e,b)/+V(h));b=b+1|0}}else{b=1;while(1){if((b|0)>(c[e+52>>2]|0)){break}g=+Zf(e,b,1);h=g*+Yf(e,b,1);de(e,b,+fe(e,b)/+V(h));b=b+1|0}}f=f+1|0}i=d;return}function bg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;e=i;f=b;b=d;d=2;g=0;j=0;k=0;l=0;m=cg(f)|0;dg(m,f);if((c[b>>2]|0)>=4){Li(10456,(n=i,i=i+8|0,h[n>>3]=+h[m+32>>3],n)|0);i=n}a:while(1){if((d|0)==0){o=eg(m)|0;if((o|0)!=0){p=6;break}c[m+60>>2]=1;d=1;j=0;g=0}do{if((g|0)==0){fg(m);g=1;if((c[m+84>>2]|0)==0){if((gg(m,+h[b+16>>3])|0)>0){c[m+84>>2]=1}else{hg(m);c[m+84>>2]=2}if((ig(m,+h[b+16>>3])|0)==0){q=1}else{Ji(5800,7032,2640);q=1}j=0;jg(m,b,1)}if((ig(m,+h[b+16>>3])|0)==0){break}if((c[b>>2]|0)>=1){Li(4632,(n=i,i=i+8|0,c[n>>2]=(c[m+84>>2]|0)==1?3808:2952,n)|0);i=n}c[m+84>>2]=0;d=0;k=5;continue a}}while(0);do{if((c[m+84>>2]|0)==1){r=1}else{if((c[m+84>>2]|0)==2){r=1;break}Ji(2104,7032,2661);r=1}}while(0);do{if((c[m+84>>2]|0)==1){if((kg(m,+h[b+16>>3])|0)!=0){break}c[m+84>>2]=2;hg(m);j=0;jg(m,b,1)}}while(0);if((j|0)==0){lg(m);j=1}s=c[b+8>>2]|0;if((s|0)!=17)if((s|0)==34){if((c[m+116>>2]|0)==0){mg(m)}}else{if((b|0)!=(b|0)){t=1}else{Ji(21552,7032,2685);t=1}}do{if((d|0)!=0){if((g|0)==0){p=45;break}if((j|0)!=0){u=1}else{p=45}}else{p=45}}while(0);if((p|0)==45){p=0;Ji(20224,7032,2689);u=1}if((l|0)!=0){v=+ng(m);w=+og(m);if((c[b+8>>2]|0)==34){x=+pg(m)}else{x=0.0}y=x;Li(19224,(n=i,i=i+24|0,h[n>>3]=v,h[n+8>>3]=w,h[n+16>>3]=y,n)|0);i=n;do{if(v<=1.0e-5){if(!(w<=1.0e-5)){p=53;break}if(y<=.001){z=1}else{p=53}}else{p=53}}while(0);if((p|0)==53){p=0;Ji(17944,7032,2699);z=1}}do{if((c[b+56>>2]|0)<2147483647){if(((c[m+100>>2]|0)-(c[m+96>>2]|0)|0)<(c[b+56>>2]|0)){break}if((g|0)==1){if((c[m+84>>2]|0)!=2){p=66;break a}if((j|0)==1){p=66;break a}}if((g|0)!=1){g=0}do{if((c[m+84>>2]|0)==2){if((j|0)==1){break}j=0}}while(0);continue a}}while(0);do{if((c[b+60>>2]|0)<2147483647){y=+Ni();w=+Oi(y,+h[m+88>>3])*1.0e3;if(!(w>=+(c[b+60>>2]|0))){break}if((g|0)==1){if((c[m+84>>2]|0)!=2){p=86;break a}if((j|0)==1){p=86;break a}}if((g|0)!=1){g=0}do{if((c[m+84>>2]|0)==2){if((j|0)==1){break}j=0}}while(0);continue a}}while(0);jg(m,b,0);qg(m,+h[b+24>>3]);if((c[m+128>>2]|0)==0){if((g|0)==1){if((j|0)==1){p=103;break}}if((g|0)!=1){g=0}if((j|0)!=1){j=0}continue}sg(m);if((k|0)!=0){tg(m)}ug(m,+h[b+32>>3]);w=+h[(c[m+112>>2]|0)+(c[m+128>>2]<<3)>>3];y=+vg(m);if(w!=0.0){A=1}else{Ji(15048,7032,2807);A=1}do{if(+U(+(w-y))>(+U(+y)+1.0)*1.0e-5){p=123}else{if(w<0.0){if(y<0.0){break}}if(!(w>0.0)){p=123;break}if(!(y>0.0)){p=123}}}while(0);b:do{if((p|0)==123){p=0;if((c[b>>2]|0)>=4){Li(14816,(n=i,i=i+16|0,h[n>>3]=w,h[n+8>>3]=y,n)|0);i=n}do{if((j|0)==1){if((k|0)==0){break}break b}}while(0);if((j|0)!=1){j=0}k=5;continue a}}while(0);if(w>0.0){if(y>0.0){B=y}else{B=2.220446049250313e-16}h[(c[m+112>>2]|0)+(c[m+128>>2]<<3)>>3]=B}else{if(y<0.0){C=y}else{C=-2.220446049250313e-16}h[(c[m+112>>2]|0)+(c[m+128>>2]<<3)>>3]=C}s=c[b+12>>2]|0;if((s|0)==17){wg(m,0.0)}else if((s|0)==34){wg(m,+h[b+16>>3]*.3)}else{if((b|0)!=(b|0)){D=1}else{Ji(21552,7032,2833);D=1}}if((c[m+156>>2]|0)==0){do{if((g|0)==1){if((j|0)!=1){break}if((k|0)!=0){p=155;break a}}}while(0);if((g|0)!=1){g=0}if((j|0)!=1){j=0}k=1;continue}if((c[m+156>>2]|0)>0){y=+h[(c[m+140>>2]|0)+(c[m+156>>2]<<3)>>3];w=(+h[m+144>>3]*.01+1.0)*1.0e-5;do{if(+U(+y)<w){if((c[b>>2]|0)>=4){Li(13304,(n=i,i=i+16|0,h[n>>3]=y,h[n+8>>3]=w,n)|0);i=n}if((k|0)!=0){break}else{k=5;continue a}}}while(0)}if((c[m+156>>2]|0)>0){s=c[m+200>>2]|0;xg(m,s);if((k|0)!=0){yg(m,s)}zg(m,s)}if((c[m+156>>2]|0)>0){w=+h[(c[m+140>>2]|0)+(c[m+156>>2]<<3)>>3];y=+h[(c[m+184>>2]|0)+(c[m+128>>2]<<3)>>3];if(w!=0.0){E=1}else{Ji(12768,7032,2897);E=1}do{if(+U(+(w-y))>(+U(+w)+1.0)*1.0e-8){p=189}else{if(w>0.0){if(y>0.0){break}}if(!(w<0.0)){p=189;break}if(!(y<0.0)){p=189}}}while(0);c:do{if((p|0)==189){p=0;if((c[b>>2]|0)>=4){Li(12520,(n=i,i=i+16|0,h[n>>3]=w,h[n+8>>3]=y,n)|0);i=n}do{if((d|0)==1){if((k|0)==0){break}if(+h[(c[m+184>>2]|0)+(c[m+128>>2]<<3)>>3]==0.0){s=m+176|0;c[s>>2]=(c[s>>2]|0)+1;if((c[m+176>>2]|0)<=(c[m+4>>2]|0)){F=1}else{Ji(12288,7032,2910);F=1}c[(c[m+180>>2]|0)+(c[m+176>>2]<<2)>>2]=c[m+128>>2]}h[(c[m+184>>2]|0)+(c[m+128>>2]<<3)>>3]=w;break c}}while(0);if((d|0)!=1){d=0}k=5;continue a}}while(0)}Ag(m);g=2;if((c[m+156>>2]|0)>0){Bg(m);j=2;if((c[m+84>>2]|0)==1){s=c[(c[m+52>>2]|0)+(c[m+156>>2]<<2)>>2]|0;G=(c[m+112>>2]|0)+(c[m+128>>2]<<3)|0;h[G>>3]=+h[G>>3]- +h[(c[m+20>>2]|0)+(s<<3)>>3];h[(c[m+20>>2]|0)+(s<<3)>>3]=0.0}}if((c[m+156>>2]|0)>0){s=c[b+8>>2]|0;if((s|0)!=17)if((s|0)==34){if((c[m+116>>2]|0)>0){Cg(m)}}else{if((b|0)!=(b|0)){H=1}else{Ji(21552,7032,2940);H=1}}}if((c[m+156>>2]|0)>0){o=Dg(m,c[m+156>>2]|0,c[(c[m+52>>2]|0)+((c[m>>2]|0)+(c[m+128>>2]|0)<<2)>>2]|0)|0;if((o|0)==0){d=2}else{c[m+60>>2]=0;d=0}}if((c[m+156>>2]|0)>0){Eg(m,c[m+128>>2]|0,c[(c[m+52>>2]|0)+((c[m>>2]|0)+(c[m+128>>2]|0)<<2)>>2]|0);if((a[(c[m+8>>2]|0)+(c[(c[m+52>>2]|0)+(c[m+156>>2]<<2)>>2]|0)|0]|0)!=5){Fg(m,c[m+128>>2]|0,c[(c[m+52>>2]|0)+(c[m+156>>2]<<2)>>2]|0)}}Gg(m);s=m+100|0;c[s>>2]=(c[s>>2]|0)+1;if((k|0)>0){k=k-1|0}}if((p|0)==6){if((c[b>>2]|0)>=1){Li(18184,(n=i,i=i+8|0,c[n>>2]=o,n)|0);i=n;Li(13424,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}if((c[f+76>>2]|0)!=0){p=10}else{if((c[f+88>>2]|0)==0){I=1}else{p=10}}if((p|0)==10){Ji(9960,7032,2609);I=1}c[f+88>>2]=c[m+64>>2];c[m+64>>2]=0;c[f+96>>2]=1;c[f+92>>2]=1;h[f+104>>3]=0.0;c[f+112>>2]=c[m+100>>2];c[f+116>>2]=0;o=5;J=m;Hg(J);K=o;i=e;return K|0}else if((p|0)==66){jg(m,b,1);if((c[b>>2]|0)>=3){Li(16736,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}I=c[m+84>>2]|0;if((I|0)==1){L=3;hg(m);lg(m)}else if((I|0)==2){L=2}else{if((m|0)!=(m|0)){M=1}else{Ji(16336,7032,2722);M=1}}qg(m,+h[b+24>>3]);N=(c[m+128>>2]|0)==0?2:3;rg(m,f,L,N,0);o=8;J=m;Hg(J);K=o;i=e;return K|0}else if((p|0)==86){jg(m,b,1);if((c[b>>2]|0)>=3){Li(15976,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}M=c[m+84>>2]|0;if((M|0)==2){L=2}else if((M|0)==1){L=3;hg(m);lg(m)}else{if((m|0)!=(m|0)){O=1}else{Ji(16336,7032,2751);O=1}}qg(m,+h[b+24>>3]);N=(c[m+128>>2]|0)==0?2:3;rg(m,f,L,N,0);o=9;J=m;Hg(J);K=o;i=e;return K|0}else if((p|0)==103){jg(m,b,1);O=c[m+84>>2]|0;if((O|0)==2){if((c[b>>2]|0)>=3){Li(15304,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}N=2;L=2}else if((O|0)==1){if((c[b>>2]|0)>=3){Li(15632,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}L=4;hg(m);lg(m);qg(m,+h[b+24>>3]);N=(c[m+128>>2]|0)==0?2:3}else{if((m|0)!=(m|0)){P=1}else{Ji(16336,7032,2794);P=1}}rg(m,f,L,N,0);o=0;J=m;Hg(J);K=o;i=e;return K|0}else if((p|0)==155){jg(m,b,1);N=c[m+84>>2]|0;if((N|0)==1){if((c[b>>2]|0)>=1){Li(14288,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}if((c[f+76>>2]|0)!=0){p=160}else{if((c[f+88>>2]|0)==0){Q=1}else{p=160}}if((p|0)==160){Ji(9960,7032,2848);Q=1}c[f+88>>2]=c[m+64>>2];c[m+64>>2]=0;c[f+96>>2]=1;c[f+92>>2]=1;h[f+104>>3]=0.0;c[f+112>>2]=c[m+100>>2];c[f+116>>2]=0;o=5}else if((N|0)==2){if((c[b>>2]|0)>=3){Li(13800,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}rg(m,f,2,4,c[(c[m+52>>2]|0)+((c[m>>2]|0)+(c[m+128>>2]|0)<<2)>>2]|0);o=0}else{if((m|0)!=(m|0)){R=1}else{Ji(16336,7032,2868);R=1}}J=m;Hg(J);K=o;i=e;return K|0}return 0}function cg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;a=c[d+48>>2]|0;e=c[d+52>>2]|0;f=c[d+56>>2]|0;d=yi(1,208)|0;if((a|0)>0){if((e|0)>0){g=1}else{h=3}}else{h=3}if((h|0)==3){Ji(7808,7032,258);g=1}c[d>>2]=a;c[d+4>>2]=e;c[d+8>>2]=yi(a+1+e|0,1)|0;c[d+12>>2]=yi(a+1+e|0,8)|0;c[d+16>>2]=yi(a+1+e|0,8)|0;c[d+20>>2]=yi(a+1+e|0,8)|0;c[d+24>>2]=yi(e+1|0,8)|0;c[d+40>>2]=yi(e+2|0,4)|0;c[d+44>>2]=yi(f+1|0,4)|0;c[d+48>>2]=yi(f+1|0,8)|0;c[d+52>>2]=yi(a+1+e|0,4)|0;c[d+56>>2]=yi(e+1|0,1)|0;c[d+68>>2]=yi(a+2|0,4)|0;c[d+72>>2]=yi(a+1|0,4)|0;c[d+76>>2]=0;c[d+80>>2]=0;c[d+108>>2]=yi(a+1|0,8)|0;c[d+112>>2]=yi(e+1|0,8)|0;c[d+120>>2]=yi(a+1+e|0,1)|0;c[d+124>>2]=yi(e+1|0,8)|0;c[d+136>>2]=yi(a+1|0,4)|0;c[d+140>>2]=yi(a+1|0,8)|0;c[d+180>>2]=yi(e+1|0,4)|0;c[d+184>>2]=yi(e+1|0,8)|0;c[d+188>>2]=yi(a+1|0,8)|0;c[d+192>>2]=yi(a+1|0,8)|0;c[d+196>>2]=yi(a+1|0,8)|0;c[d+200>>2]=yi(a+1|0,8)|0;i=b;return d|0}function dg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;f=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+8>>2]|0;k=c[f+12>>2]|0;l=c[f+16>>2]|0;m=c[f+20>>2]|0;n=c[f+24>>2]|0;o=c[f+40>>2]|0;p=c[f+44>>2]|0;q=c[f+48>>2]|0;r=c[f+52>>2]|0;s=c[f+56>>2]|0;t=c[f+120>>2]|0;u=c[f+124>>2]|0;v=1;while(1){if((v|0)>(d|0)){break}w=c[(c[b+60>>2]|0)+(v<<2)>>2]|0;a[j+v|0]=c[w+20>>2];h[k+(v<<3)>>3]=+h[w+24>>3]*+h[w+48>>3];h[l+(v<<3)>>3]=+h[w+32>>3]*+h[w+48>>3];h[m+(v<<3)>>3]=0.0;v=v+1|0}w=1;while(1){if((w|0)>(g|0)){break}x=c[(c[b+64>>2]|0)+(w<<2)>>2]|0;a[j+(d+w)|0]=c[x+16>>2];h[k+(d+w<<3)>>3]=+h[x+24>>3]/+h[x+56>>3];h[l+(d+w<<3)>>3]=+h[x+32>>3]/+h[x+56>>3];h[m+(d+w<<3)>>3]=+h[x+40>>3]*+h[x+56>>3];w=w+1|0}h[n>>3]=+h[b+32>>3];Ku(n+8|0,m+(d+1<<3)|0,g<<3)|0;y=0.0;w=1;while(1){if((w|0)>(g|0)){break}if(y<+U(+(+h[n+(w<<3)>>3]))){y=+U(+(+h[n+(w<<3)>>3]))}w=w+1|0}if(y==0.0){y=1.0}n=c[b+24>>2]|0;if((n|0)==1){h[f+32>>3]=1.0/y}else if((n|0)==2){h[f+32>>3]=-1.0/y}else{if((b|0)!=(b|0)){z=1}else{Ji(9080,7032,348);z=1}}if(+U(+(+h[f+32>>3]))<1.0){z=f+32|0;h[z>>3]=+h[z>>3]*1.0e3}z=1;w=1;while(1){if((w|0)>(g|0)){break}c[o+(w<<2)>>2]=z;n=c[(c[(c[b+64>>2]|0)+(w<<2)>>2]|0)+48>>2]|0;while(1){if((n|0)==0){break}c[p+(z<<2)>>2]=c[c[n>>2]>>2];h[q+(z<<3)>>3]=+h[(c[n>>2]|0)+48>>3]*+h[n+8>>3]*+h[(c[n+4>>2]|0)+56>>3];z=z+1|0;n=c[n+28>>2]|0}w=w+1|0}c[o+(g+1<<2)>>2]=z;if((z|0)==((c[b+56>>2]|0)+1|0)){A=1}else{Ji(8768,7032,365);A=1}if((c[b+76>>2]|0)!=0){B=1}else{Ji(8528,7032,367);B=1}Ku(r+4|0,(c[b+80>>2]|0)+4|0,d<<2)|0;B=0;v=1;while(1){if((v|0)>(d|0)){break}A=c[(c[b+60>>2]|0)+(v<<2)>>2]|0;if((c[A+56>>2]|0)!=1){B=B+1|0;if((B|0)<=(g|0)){C=1}else{Ji(8280,7032,374);C=1}c[r+(d+B<<2)>>2]=v;a[s+B|0]=c[A+56>>2]}v=v+1|0}w=1;while(1){if((w|0)>(g|0)){break}v=c[(c[b+64>>2]|0)+(w<<2)>>2]|0;if((c[v+64>>2]|0)!=1){B=B+1|0;if((B|0)<=(g|0)){D=1}else{Ji(8280,7032,383);D=1}c[r+(d+B<<2)>>2]=d+w;a[s+B|0]=c[v+64>>2]}w=w+1|0}if((B|0)==(g|0)){E=1}else{Ji(8056,7032,388);E=1}c[f+60>>2]=1;c[b+76>>2]=0;c[f+64>>2]=c[b+88>>2];c[b+88>>2]=0;Tg(f);Ug(f);c[f+84>>2]=0;h[f+88>>3]=+Ni();E=c[b+112>>2]|0;c[f+100>>2]=E;c[f+96>>2]=E;c[f+104>>2]=-1;c[f+116>>2]=0;Nu(t+1|0,0,d+g|0)|0;w=1;while(1){if((w|0)>(g|0)){break}h[u+(w<<3)>>3]=1.0;w=w+1|0}i=e;return}function eg(a){a=a|0;var b=0,d=0;b=i;d=a;a=zd(c[d+64>>2]|0,c[d>>2]|0,0,44,d)|0;c[d+60>>2]=(a|0)==0;i=b;return a|0}function fg(a){a=a|0;var b=0,d=0;b=i;d=a;Rg(d,c[d+108>>2]|0);i=b;return}function gg(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0;e=i;f=b;g=d;b=c[f>>2]|0;j=c[f+4>>2]|0;k=c[f+8>>2]|0;l=c[f+12>>2]|0;m=c[f+16>>2]|0;n=c[f+20>>2]|0;o=c[f+52>>2]|0;p=c[f+108>>2]|0;f=0;g=g*.9;q=1;while(1){if((q|0)>(b+j|0)){break}h[n+(q<<3)>>3]=0.0;q=q+1|0}j=1;while(1){if((j|0)>(b|0)){break}q=c[o+(j<<2)>>2]|0;do{if((a[k+q|0]|0)==2){r=10}else{if((a[k+q|0]|0)==4){r=10;break}if((a[k+q|0]|0)==5){r=10}}}while(0);if((r|0)==10){r=0;s=g*(+U(+(+h[l+(q<<3)>>3]))*.1+1.0);if(+h[p+(j<<3)>>3]<+h[l+(q<<3)>>3]-s){h[n+(q<<3)>>3]=-1.0;f=f+1|0}}do{if((a[k+q|0]|0)==3){r=16}else{if((a[k+q|0]|0)==4){r=16;break}if((a[k+q|0]|0)==5){r=16}}}while(0);if((r|0)==16){r=0;s=g*(+U(+(+h[m+(q<<3)>>3]))*.1+1.0);if(+h[p+(j<<3)>>3]>+h[m+(q<<3)>>3]+s){h[n+(q<<3)>>3]=1.0;f=f+1|0}}j=j+1|0}i=e;return f|0}function hg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0.0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+20>>2]|0;g=c[d+24>>2]|0;j=+h[d+32>>3];d=1;while(1){if((d|0)>(a|0)){break}h[f+(d<<3)>>3]=0.0;d=d+1|0}d=1;while(1){if((d|0)>(e|0)){break}h[f+(a+d<<3)>>3]=j*+h[g+(d<<3)>>3];d=d+1|0}i=b;return}function ig(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0;e=i;f=b;g=d;b=c[f>>2]|0;j=c[f+8>>2]|0;k=c[f+12>>2]|0;l=c[f+16>>2]|0;m=c[f+20>>2]|0;n=c[f+52>>2]|0;o=c[f+84>>2]|0;p=c[f+108>>2]|0;f=1;a:while(1){if((f|0)>(b|0)){q=29;break}r=c[n+(f<<2)>>2]|0;do{if((o|0)==1){if(!(+h[m+(r<<3)>>3]<0.0)){q=8;break}s=g*(+U(+(+h[k+(r<<3)>>3]))*.1+1.0);if(+h[p+(f<<3)>>3]>+h[k+(r<<3)>>3]+s){q=6;break a}}else{q=8}}while(0);if((q|0)==8){q=0;do{if((o|0)==1){if(!(+h[m+(r<<3)>>3]>0.0)){q=13;break}s=g*(+U(+(+h[l+(r<<3)>>3]))*.1+1.0);if(+h[p+(f<<3)>>3]<+h[l+(r<<3)>>3]-s){q=11;break a}}else{q=13}}while(0);if((q|0)==13){q=0;do{if((a[j+r|0]|0)==2){q=16}else{if((a[j+r|0]|0)==4){q=16;break}if((a[j+r|0]|0)==5){q=16}}}while(0);if((q|0)==16){q=0;s=g*(+U(+(+h[k+(r<<3)>>3]))*.1+1.0);if(+h[p+(f<<3)>>3]<+h[k+(r<<3)>>3]-s){q=17;break}}do{if((a[j+r|0]|0)==3){q=22}else{if((a[j+r|0]|0)==4){q=22;break}if((a[j+r|0]|0)==5){q=22}}}while(0);if((q|0)==22){q=0;s=g*(+U(+(+h[l+(r<<3)>>3]))*.1+1.0);if(+h[p+(f<<3)>>3]>+h[l+(r<<3)>>3]+s){q=23;break}}}}f=f+1|0}if((q|0)==6){t=1;u=t;i=e;return u|0}else if((q|0)==11){t=1;u=t;i=e;return u|0}else if((q|0)==17){t=1;u=t;i=e;return u|0}else if((q|0)==23){t=1;u=t;i=e;return u|0}else if((q|0)==29){t=0;u=t;i=e;return u|0}return 0}function jg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0,s=0;f=i;g=b;b=d;d=e;e=c[g>>2]|0;j=c[g+8>>2]|0;k=c[g+12>>2]|0;l=c[g+16>>2]|0;m=c[g+84>>2]|0;n=c[g+52>>2]|0;o=c[g+108>>2]|0;if((c[b>>2]|0)<2){i=f;return}do{if((c[b+68>>2]|0)>0){p=+Ni();q=+Oi(p,+h[g+88>>3])*1.0e3;if(!(q<+(c[b+68>>2]|0))){break}i=f;return}}while(0);if((c[g+100>>2]|0)==(c[g+104>>2]|0)){i=f;return}do{if((d|0)==0){if(((c[g+100>>2]|0)%(c[b+64>>2]|0)|0|0)==0){break}i=f;return}}while(0);q=0.0;b=0;d=1;while(1){if((d|0)>(e|0)){break}r=c[n+(d<<2)>>2]|0;do{if((a[j+r|0]|0)==2){s=16}else{if((a[j+r|0]|0)==4){s=16;break}if((a[j+r|0]|0)==5){s=16}}}while(0);if((s|0)==16){s=0;if(+h[o+(d<<3)>>3]<+h[k+(r<<3)>>3]){q=q+(+h[k+(r<<3)>>3]- +h[o+(d<<3)>>3])}}do{if((a[j+r|0]|0)==3){s=22}else{if((a[j+r|0]|0)==4){s=22;break}if((a[j+r|0]|0)==5){s=22}}}while(0);if((s|0)==22){s=0;if(+h[o+(d<<3)>>3]>+h[l+(r<<3)>>3]){q=q+(+h[o+(d<<3)>>3]- +h[l+(r<<3)>>3])}}if((a[j+r|0]|0)==5){b=b+1|0}d=d+1|0}d=c[g+100>>2]|0;p=+Ng(g);Li(9344,(j=i,i=i+40|0,c[j>>2]=(m|0)==1?32:42,c[j+8>>2]=d,h[j+16>>3]=p,h[j+24>>3]=q,c[j+32>>2]=b,j)|0);i=j;c[g+104>>2]=c[g+100>>2];i=f;return}function kg(a,b){a=a|0;b=+b;var d=0,e=0,f=0.0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0;d=i;e=a;f=b;a=c[e>>2]|0;g=c[e+12>>2]|0;j=c[e+16>>2]|0;k=c[e+20>>2]|0;l=c[e+52>>2]|0;m=c[e+108>>2]|0;if((c[e+84>>2]|0)==1){n=1}else{Ji(9912,7032,2272);n=1}n=1;while(1){if((n|0)>(a|0)){o=16;break}e=c[l+(n<<2)>>2]|0;if(+h[k+(e<<3)>>3]<0.0){p=f*(+U(+(+h[g+(e<<3)>>3]))*.1+1.0);if(+h[m+(n<<3)>>3]<+h[g+(e<<3)>>3]-p){o=7;break}}else{if(+h[k+(e<<3)>>3]>0.0){p=f*(+U(+(+h[j+(e<<3)>>3]))*.1+1.0);if(+h[m+(n<<3)>>3]>+h[j+(e<<3)>>3]+p){o=11;break}}}n=n+1|0}if((o|0)==7){q=1;r=q;i=d;return r|0}else if((o|0)==11){q=1;r=q;i=d;return r|0}else if((o|0)==16){q=0;r=q;i=d;return r|0}return 0}function lg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;a=c[d+4>>2]|0;e=c[d+112>>2]|0;f=c[d+196>>2]|0;Pg(d,f);g=1;while(1){if((g|0)>(a|0)){break}h[e+(g<<3)>>3]=+Qg(d,f,g);g=g+1|0}i=b;return}function mg(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0;d=i;e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+52>>2]|0;j=c[e+120>>2]|0;k=c[e+124>>2]|0;if((c[e+116>>2]|0)==0){l=1}else{Ji(10392,7032,1053);l=1}c[e+116>>2]=1e3;Nu(j+1|0,0,b+f|0)|0;e=1;while(1){if((e|0)>(f|0)){break}a[j+(c[g+(b+e<<2)>>2]|0)|0]=1;h[k+(e<<3)>>3]=1.0;e=e+1|0}i=d;return}function ng(a){a=a|0;var b=0,d=0,e=0,f=0,g=0.0,j=0.0,k=0.0;b=i;d=a;a=c[d>>2]|0;e=c[d+108>>2]|0;f=yi(a+1|0,8)|0;Rg(d,f);g=0.0;d=1;while(1){if((d|0)>(a|0)){break}j=+U(+(+h[f+(d<<3)>>3]- +h[e+(d<<3)>>3]));k=j/(+U(+(+h[f+(d<<3)>>3]))+1.0);if(g<k){g=k}d=d+1|0}Bi(f);i=b;return+g}function og(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0,l=0,m=0.0,n=0.0;d=i;e=b;b=c[e+4>>2]|0;f=c[e+56>>2]|0;g=c[e+112>>2]|0;j=yi((c[e>>2]|0)+1|0,8)|0;Pg(e,j);k=0.0;l=1;while(1){if((l|0)>(b|0)){break}if((a[f+l|0]|0)!=5){m=+Qg(e,j,l);n=+U(+(m- +h[g+(l<<3)>>3]))/(+U(+m)+1.0);if(k<n){k=n}}l=l+1|0}Bi(j);i=d;return+k}function pg(b){b=b|0;var d=0,e=0,f=0,g=0,j=0.0,k=0,l=0,m=0.0,n=0.0;d=i;e=b;b=c[e+4>>2]|0;f=c[e+56>>2]|0;g=c[e+124>>2]|0;j=0.0;k=1;while(1){if((k|0)>(b|0)){break}if((a[f+k|0]|0)==5){if(+h[g+(k<<3)>>3]==1.0){l=1}else{Ji(10784,7032,2026);l=1}}else{m=+Og(e,k);n=+U(+(m- +h[g+(k<<3)>>3]))/(+U(+m)+1.0);if(j<n){j=n}}k=k+1|0}i=d;return+j}function qg(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0.0;e=i;f=b;g=d;b=c[f+4>>2]|0;j=c[f+56>>2]|0;k=c[f+112>>2]|0;l=c[f+124>>2]|0;m=0;d=0.0;n=1;while(1){if((n|0)>(b|0)){break}o=+h[k+(n<<3)>>3];p=a[j+n|0]|0;a:do{if((p|0)!=5)if((p|0)==2){if(o>=-0.0-g){break}else{q=18;break}}else if((p|0)==4){do{if(-0.0-g<=o){if(!(o<=g)){break}break a}}while(0);q=18}else if((p|0)==3){if(o<=g){break}else{q=18;break}}else{if((j|0)!=(j|0)){r=1}else{Ji(12048,7032,1185);r=1}q=18}}while(0);if((q|0)==18){q=0;s=o*o/+h[l+(n<<3)>>3];if(d<s){m=n;d=s}}n=n+1|0}c[f+128>>2]=m;i=e;return}function rg(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;k=b;b=d;d=c[k>>2]|0;l=c[k+4>>2]|0;m=+h[k+32>>3];n=c[k+52>>2]|0;o=c[k+56>>2]|0;p=c[k+108>>2]|0;q=c[k+112>>2]|0;c[b+76>>2]=1;c[k+60>>2]=0;c[b+88>>2]=c[k+64>>2];c[k+64>>2]=0;Ku((c[b+80>>2]|0)+4|0,n+4|0,d<<2)|0;c[b+92>>2]=e;c[b+96>>2]=f;h[b+104>>3]=+Ng(k);c[b+112>>2]=c[k+100>>2];c[b+116>>2]=g;g=1;while(1){if((g|0)>(d|0)){break}r=c[n+(g<<2)>>2]|0;if((r|0)<=(d|0)){k=c[(c[b+60>>2]|0)+(r<<2)>>2]|0;c[k+56>>2]=1;c[k+60>>2]=g;h[k+64>>3]=+h[p+(g<<3)>>3]/+h[k+48>>3];h[k+72>>3]=0.0}else{k=c[(c[b+64>>2]|0)+(r-d<<2)>>2]|0;c[k+64>>2]=1;c[k+68>>2]=g;h[k+72>>3]=+h[p+(g<<3)>>3]*+h[k+56>>3];h[k+80>>3]=0.0}g=g+1|0}g=1;while(1){if((g|0)>(l|0)){break}r=c[n+(d+g<<2)>>2]|0;if((r|0)<=(d|0)){p=c[(c[b+60>>2]|0)+(r<<2)>>2]|0;c[p+56>>2]=a[o+g|0]|0;c[p+60>>2]=0;k=a[o+g|0]|0;if((k|0)==4){h[p+64>>3]=0.0}else if((k|0)==2){h[p+64>>3]=+h[p+24>>3]}else if((k|0)==5){h[p+64>>3]=+h[p+24>>3]}else if((k|0)==3){h[p+64>>3]=+h[p+32>>3]}else{if((o|0)!=(o|0)){s=1}else{Ji(12048,7032,2482);s=1}}h[p+72>>3]=+h[q+(g<<3)>>3]*+h[p+48>>3]/m}else{p=c[(c[b+64>>2]|0)+(r-d<<2)>>2]|0;c[p+64>>2]=a[o+g|0]|0;c[p+68>>2]=0;k=a[o+g|0]|0;if((k|0)==3){h[p+72>>3]=+h[p+32>>3]}else if((k|0)==4){h[p+72>>3]=0.0}else if((k|0)==5){h[p+72>>3]=+h[p+24>>3]}else if((k|0)==2){h[p+72>>3]=+h[p+24>>3]}else{if((o|0)!=(o|0)){t=1}else{Ji(12048,7032,2504);t=1}}h[p+80>>3]=+h[q+(g<<3)>>3]/+h[p+56>>3]/m}g=g+1|0}i=j;return}function sg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;d=a;a=c[d>>2]|0;e=c[d+136>>2]|0;f=c[d+140>>2]|0;g=c[d+140>>2]|0;j=c[(c[d+52>>2]|0)+(a+(c[d+128>>2]|0)<<2)>>2]|0;k=1;while(1){if((k|0)>(a|0)){break}h[g+(k<<3)>>3]=0.0;k=k+1|0}if((j|0)<=(a|0)){h[g+(j<<3)>>3]=-1.0}else{l=c[d+40>>2]|0;m=c[d+44>>2]|0;n=c[d+48>>2]|0;o=c[l+(j-a+1<<2)>>2]|0;p=c[l+(j-a<<2)>>2]|0;while(1){if((p|0)>=(o|0)){break}h[g+(c[m+(p<<2)>>2]<<3)>>3]=+h[n+(p<<3)>>3];p=p+1|0}}if((c[d+60>>2]|0)!=0){q=1}else{Ji(11816,7032,1251);q=1}Ad(c[d+64>>2]|0,f);q=0;k=1;while(1){if((k|0)>(a|0)){break}if(+h[f+(k<<3)>>3]!=0.0){p=q+1|0;q=p;c[e+(p<<2)>>2]=k}k=k+1|0}c[d+132>>2]=q;i=b;return}function tg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;d=a;a=c[d>>2]|0;e=c[d+136>>2]|0;f=c[d+140>>2]|0;g=c[d+196>>2]|0;j=c[(c[d+52>>2]|0)+(a+(c[d+128>>2]|0)<<2)>>2]|0;k=1;while(1){if((k|0)>(a|0)){break}h[g+(k<<3)>>3]=0.0;k=k+1|0}if((j|0)<=(a|0)){h[g+(j<<3)>>3]=-1.0}else{l=c[d+40>>2]|0;m=c[d+44>>2]|0;n=c[d+48>>2]|0;o=c[l+(j-a+1<<2)>>2]|0;p=c[l+(j-a<<2)>>2]|0;while(1){if((p|0)>=(o|0)){break}h[g+(c[m+(p<<2)>>2]<<3)>>3]=+h[n+(p<<3)>>3];p=p+1|0}}Lg(d,g,f);g=0;k=1;while(1){if((k|0)>(a|0)){break}if(+h[f+(k<<3)>>3]!=0.0){p=g+1|0;g=p;c[e+(p<<2)>>2]=k}k=k+1|0}c[d+132>>2]=g;i=b;return}function ug(a,b){a=a|0;b=+b;var d=0,e=0,f=0.0,g=0,j=0,k=0,l=0.0,m=0;d=i;e=a;f=b;a=c[e+132>>2]|0;g=c[e+136>>2]|0;j=c[e+140>>2]|0;b=0.0;k=1;while(1){if((k|0)>(a|0)){break}l=+U(+(+h[j+(c[g+(k<<2)>>2]<<3)>>3]));if(b<l){b=l}k=k+1|0}h[e+144>>3]=b;l=f*(.01*b+1.0);k=0;while(1){if((k|0)>=(a|0)){break}m=c[g+(a<<2)>>2]|0;if(+U(+(+h[j+(m<<3)>>3]))<l){a=a-1|0}else{k=k+1|0;c[g+(a<<2)>>2]=c[g+(k<<2)>>2];c[g+(k<<2)>>2]=m}}c[e+152>>2]=k;i=d;return}function vg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0.0,l=0;b=i;d=a;a=c[d+20>>2]|0;e=c[d+52>>2]|0;f=c[d+132>>2]|0;g=c[d+136>>2]|0;j=c[d+140>>2]|0;k=+h[a+(c[e+((c[d>>2]|0)+(c[d+128>>2]|0)<<2)>>2]<<3)>>3];d=1;while(1){if((d|0)>(f|0)){break}l=c[g+(d<<2)>>2]|0;k=k+ +h[a+(c[e+(l<<2)>>2]<<3)>>3]*+h[j+(l<<3)>>3];d=d+1|0}i=b;return+k}function wg(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0,z=0.0,A=0,B=0.0,C=0.0,D=0,E=0,F=0.0,G=0.0,H=0.0,I=0,J=0;e=i;f=b;g=d;b=c[f+8>>2]|0;j=c[f+12>>2]|0;k=c[f+16>>2]|0;l=c[f+20>>2]|0;m=c[f+52>>2]|0;n=c[f+84>>2]|0;o=c[f+108>>2]|0;p=c[f+128>>2]|0;q=c[f+136>>2]|0;r=c[f+140>>2]|0;s=c[f+152>>2]|0;d=+h[(c[f+112>>2]|0)+(p<<3)>>3]>0.0?-1.0:1.0;t=c[m+((c[f>>2]|0)+p<<2)>>2]|0;if((a[b+t|0]|0)==4){u=-1;v=0;w=+h[k+(t<<3)>>3]- +h[j+(t<<3)>>3];x=1.0}else{u=0;v=0;w=1.7976931348623157e+308;x=0.0}p=1;while(1){if((p|0)>(s|0)){break}y=c[q+(p<<2)>>2]|0;t=c[m+(y<<2)>>2]|0;z=d*+h[r+(y<<3)>>3];a:do{if(z>0.0){do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]<0.0)){A=10;break}B=g*(+U(+(+h[j+(t<<3)>>3]))*.1+1.0);C=(+h[j+(t<<3)>>3]+B- +h[o+(y<<3)>>3])/z;D=2}else{A=10}}while(0);if((A|0)==10){A=0;do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]>0.0)){break}break a}}while(0);do{if((a[b+t|0]|0)!=3){if((a[b+t|0]|0)==4){break}if((a[b+t|0]|0)==5){break}break a}}while(0);B=g*(+U(+(+h[k+(t<<3)>>3]))*.1+1.0);C=(+h[k+(t<<3)>>3]+B- +h[o+(y<<3)>>3])/z;D=3}A=35}else{do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]>0.0)){A=24;break}B=g*(+U(+(+h[k+(t<<3)>>3]))*.1+1.0);C=(+h[k+(t<<3)>>3]-B- +h[o+(y<<3)>>3])/z;D=3}else{A=24}}while(0);if((A|0)==24){A=0;do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]<0.0)){break}break a}}while(0);do{if((a[b+t|0]|0)!=2){if((a[b+t|0]|0)==4){break}if((a[b+t|0]|0)==5){break}break a}}while(0);B=g*(+U(+(+h[j+(t<<3)>>3]))*.1+1.0);C=(+h[j+(t<<3)>>3]-B- +h[o+(y<<3)>>3])/z;D=2}A=35}}while(0);if((A|0)==35){A=0;if(C<0.0){C=0.0}do{if(w>C){A=40}else{if(!(w==C)){break}if(x<+U(+z)){A=40}}}while(0);if((A|0)==40){A=0;u=y;v=D;w=C;x=+U(+z)}}p=p+1|0}do{if(!(g==0.0)){if((u|0)<=0){break}if(w==0.0){break}B=w;u=0;v=0;w=1.7976931348623157e+308;x=0.0;p=1;while(1){if((p|0)>(s|0)){break}y=c[q+(p<<2)>>2]|0;t=c[m+(y<<2)>>2]|0;z=d*+h[r+(y<<3)>>3];b:do{if(z>0.0){do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]<0.0)){A=55;break}C=(+h[j+(t<<3)>>3]- +h[o+(y<<3)>>3])/z;D=2}else{A=55}}while(0);if((A|0)==55){A=0;do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]>0.0)){break}break b}}while(0);do{if((a[b+t|0]|0)!=3){if((a[b+t|0]|0)==4){break}if((a[b+t|0]|0)==5){break}break b}}while(0);C=(+h[k+(t<<3)>>3]- +h[o+(y<<3)>>3])/z;D=3}A=80}else{do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]>0.0)){A=69;break}C=(+h[k+(t<<3)>>3]- +h[o+(y<<3)>>3])/z;D=3}else{A=69}}while(0);if((A|0)==69){A=0;do{if((n|0)==1){if(!(+h[l+(t<<3)>>3]<0.0)){break}break b}}while(0);do{if((a[b+t|0]|0)!=2){if((a[b+t|0]|0)==4){break}if((a[b+t|0]|0)==5){break}break b}}while(0);C=(+h[j+(t<<3)>>3]- +h[o+(y<<3)>>3])/z;D=2}A=80}}while(0);if((A|0)==80){A=0;if(C<0.0){C=0.0}do{if(C<=B){if(!(x<+U(+z))){break}u=y;v=D;w=C;x=+U(+z)}}while(0)}p=p+1|0}if((u|0)!=0){E=1}else{Ji(11256,7032,1603);E=1}}}while(0);c[f+156>>2]=u;do{if((u|0)>0){if((a[b+(c[m+(u<<2)>>2]|0)|0]|0)!=5){break}c[f+160>>2]=5;F=d;G=w;H=F*G;I=f;J=I+168|0;h[J>>3]=H;i=e;return}}while(0);c[f+160>>2]=v;F=d;G=w;H=F*G;I=f;J=I+168|0;h[J>>3]=H;i=e;return}function xg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+156>>2]|0;g=a;j=1;while(1){if((j|0)>(b|0)){break}h[g+(j<<3)>>3]=0.0;j=j+1|0}h[g+(f<<3)>>3]=1.0;if((c[e+60>>2]|0)!=0){k=1}else{Ji(11816,7032,1642);k=1}Bd(c[e+64>>2]|0,a);i=d;return}function yg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+156>>2]|0;g=c[e+196>>2]|0;j=1;while(1){if((j|0)>(b|0)){break}h[g+(j<<3)>>3]=0.0;j=j+1|0}h[g+(f<<3)>>3]=1.0;Jg(e,g,a);i=d;return}function zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+68>>2]|0;j=c[e+72>>2]|0;k=c[e+76>>2]|0;l=c[e+80>>2]|0;m=c[e+180>>2]|0;n=c[e+184>>2]|0;o=1;while(1){if((o|0)>(f|0)){break}h[n+(o<<3)>>3]=0.0;o=o+1|0}p=1;while(1){if((p|0)>(b|0)){break}q=+h[a+(p<<3)>>3];if(!(q==0.0)){r=c[g+(p<<2)>>2]|0;s=r+(c[j+(p<<2)>>2]|0)|0;t=r;while(1){if((t|0)>=(s|0)){break}r=n+(c[k+(t<<2)>>2]<<3)|0;h[r>>3]=+h[r>>3]-q*+h[l+(t<<3)>>3];t=t+1|0}}p=p+1|0}p=0;o=1;while(1){if((o|0)>(f|0)){break}if(+h[n+(o<<3)>>3]!=0.0){l=p+1|0;p=l;c[m+(l<<2)>>2]=o}o=o+1|0}c[e+176>>2]=p;i=d;return}function Ag(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0.0,l=0,m=0;b=i;d=a;a=c[d+108>>2]|0;e=c[d+132>>2]|0;f=c[d+136>>2]|0;g=c[d+140>>2]|0;j=c[d+156>>2]|0;k=+h[d+168>>3];if((j|0)>0){h[a+(j<<3)>>3]=+Ig(d,c[d+128>>2]|0)+k}if(k==0.0){i=b;return}d=1;while(1){if((d|0)>(e|0)){break}l=c[f+(d<<2)>>2]|0;if((l|0)!=(j|0)){m=a+(l<<3)|0;h[m>>3]=+h[m>>3]+ +h[g+(l<<3)>>3]*k}d=d+1|0}i=b;return}function Bg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0.0,l=0.0,m=0,n=0;b=i;d=a;a=c[d+112>>2]|0;e=c[d+128>>2]|0;f=c[d+176>>2]|0;g=c[d+180>>2]|0;j=c[d+184>>2]|0;d=a+(e<<3)|0;k=+h[d>>3]/+h[j+(e<<3)>>3];h[d>>3]=k;l=k;d=1;while(1){if((d|0)>(f|0)){break}m=c[g+(d<<2)>>2]|0;if((m|0)!=(e|0)){n=a+(m<<3)|0;h[n>>3]=+h[n>>3]- +h[j+(m<<3)>>3]*l}d=d+1|0}i=b;return}function Cg(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0.0;d=i;e=b;b=c[e>>2]|0;f=c[e+8>>2]|0;g=c[e+40>>2]|0;j=c[e+44>>2]|0;k=c[e+48>>2]|0;l=c[e+52>>2]|0;m=c[e+120>>2]|0;n=c[e+124>>2]|0;o=c[e+128>>2]|0;p=c[e+132>>2]|0;q=c[e+136>>2]|0;r=c[e+140>>2]|0;s=c[e+156>>2]|0;t=c[e+176>>2]|0;u=c[e+180>>2]|0;v=c[e+184>>2]|0;w=c[e+196>>2]|0;if((c[e+116>>2]|0)>0){x=1}else{Ji(11544,7032,1888);x=1}x=e+116|0;c[x>>2]=(c[x>>2]|0)-1;y=(a[m+(c[l+(b+o<<2)>>2]|0)|0]|0)!=0?1.0:0.0;z=y;A=y;x=1;while(1){if((x|0)>(b|0)){break}h[w+(x<<3)>>3]=0.0;x=x+1|0}B=1;while(1){if((B|0)>(p|0)){break}x=c[q+(B<<2)>>2]|0;if((a[m+(c[l+(x<<2)>>2]|0)|0]|0)!=0){y=+h[r+(x<<3)>>3];C=y;h[w+(x<<3)>>3]=y;A=A+C*C}else{h[w+(x<<3)>>3]=0.0}B=B+1|0}if((c[e+60>>2]|0)!=0){D=1}else{Ji(11816,7032,1903);D=1}Bd(c[e+64>>2]|0,w);y=+h[v+(o<<3)>>3];B=1;while(1){if((B|0)>(t|0)){break}e=c[u+(B<<2)>>2]|0;if((e|0)!=(o|0)){C=+h[v+(e<<3)>>3]/y;D=c[l+(b+e<<2)>>2]|0;if((D|0)<=(b|0)){E=+h[w+(D<<3)>>3]}else{E=0.0;x=c[g+(D-b+1<<2)>>2]|0;r=c[g+(D-b<<2)>>2]|0;while(1){if((r|0)>=(x|0)){break}E=E- +h[k+(r<<3)>>3]*+h[w+(c[j+(r<<2)>>2]<<3)>>3];r=r+1|0}}F=+h[n+(e<<3)>>3]+C*C*A+2.0*C*E;G=((a[m+D|0]|0)!=0?1.0:0.0)+z*C*C;if(F>=G){H=F}else{H=G}h[n+(e<<3)>>3]=H;if(+h[n+(e<<3)>>3]<2.220446049250313e-16){h[n+(e<<3)>>3]=2.220446049250313e-16}}B=B+1|0}if((a[f+(c[l+(s<<2)>>2]|0)|0]|0)==5){h[n+(o<<3)>>3]=1.0;i=d;return}h[n+(o<<3)>>3]=A/(y*y);if(+h[n+(o<<3)>>3]<2.220446049250313e-16){h[n+(o<<3)>>3]=2.220446049250313e-16}i=d;return}function Dg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+24|0;f=e|0;g=e+8|0;j=a;a=b;b=d;d=c[j>>2]|0;if((b|0)<=(d|0)){c[f+4>>2]=b;h[g+8>>3]=1.0;if((c[j+60>>2]|0)!=0){k=1}else{Ji(11816,7032,485);k=1}l=Cd(c[j+64>>2]|0,a,0,1,f|0,g|0)|0;m=l;n=(m|0)==0;o=n&1;p=j;q=p+60|0;c[q>>2]=o;r=l;i=e;return r|0}g=c[j+40>>2]|0;f=c[j+44>>2]|0;k=c[j+48>>2]|0;s=c[j+188>>2]|0;t=c[g+(b-d<<2)>>2]|0;u=c[g+(b-d+1<<2)>>2]|0;d=0;b=t;while(1){if((b|0)>=(u|0)){break}g=d+1|0;d=g;h[s+(g<<3)>>3]=-0.0- +h[k+(b<<3)>>3];b=b+1|0}if((c[j+60>>2]|0)!=0){v=1}else{Ji(11816,7032,500);v=1}l=Cd(c[j+64>>2]|0,a,0,d,f+(t-1<<2)|0,s)|0;m=l;n=(m|0)==0;o=n&1;p=j;q=p+60|0;c[q>>2]=o;r=l;i=e;return r|0}function Eg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+68>>2]|0;j=c[f+72>>2]|0;k=c[f+76>>2]|0;l=c[f+80>>2]|0;if((b|0)<=(d|0)){m=c[g+(b<<2)>>2]|0;n=m;while(1){if((c[k+(n<<2)>>2]|0)==(a|0)){break}n=n+1|0}o=j+(b<<2)|0;p=(c[o>>2]|0)-1|0;c[o>>2]=p;q=m+p|0;c[k+(n<<2)>>2]=c[k+(q<<2)>>2];h[l+(n<<3)>>3]=+h[l+(q<<3)>>3];i=e;return}p=c[f+40>>2]|0;o=c[f+44>>2]|0;f=c[p+(b-d+1<<2)>>2]|0;r=c[p+(b-d<<2)>>2]|0;while(1){if((r|0)>=(f|0)){break}d=c[o+(r<<2)>>2]|0;m=c[g+(d<<2)>>2]|0;n=m;while(1){if((c[k+(n<<2)>>2]|0)==(a|0)){break}n=n+1|0}b=j+(d<<2)|0;p=(c[b>>2]|0)-1|0;c[b>>2]=p;q=m+p|0;c[k+(n<<2)>>2]=c[k+(q<<2)>>2];h[l+(n<<3)>>3]=+h[l+(q<<3)>>3];r=r+1|0}i=e;return}function Fg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+68>>2]|0;j=c[f+72>>2]|0;k=c[f+76>>2]|0;l=c[f+80>>2]|0;if((b|0)<=(d|0)){m=c[g+(b<<2)>>2]|0;n=j+(b<<2)|0;o=c[n>>2]|0;c[n>>2]=o+1;p=m+o|0;c[k+(p<<2)>>2]=a;h[l+(p<<3)>>3]=1.0;i=e;return}o=c[f+40>>2]|0;m=c[f+44>>2]|0;n=c[f+48>>2]|0;f=c[o+(b-d+1<<2)>>2]|0;q=c[o+(b-d<<2)>>2]|0;while(1){if((q|0)>=(f|0)){break}d=c[m+(q<<2)>>2]|0;b=c[g+(d<<2)>>2]|0;o=j+(d<<2)|0;d=c[o>>2]|0;c[o>>2]=d+1;p=b+d|0;c[k+(p<<2)>>2]=a;h[l+(p<<3)>>3]=-0.0- +h[n+(q<<3)>>3];q=q+1|0}i=e;return}function Gg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=b;b=c[e>>2]|0;f=c[e+52>>2]|0;g=c[e+56>>2]|0;h=c[e+128>>2]|0;j=c[e+156>>2]|0;k=c[e+160>>2]|0;if((j|0)>=0){e=c[f+(j<<2)>>2]|0;c[f+(j<<2)>>2]=c[f+(b+h<<2)>>2];c[f+(b+h<<2)>>2]=e;a[g+h|0]=k;i=d;return}k=a[g+h|0]|0;if((k|0)==3){a[g+h|0]=2}else if((k|0)==2){a[g+h|0]=3}else{if((g|0)!=(g|0)){l=1}else{Ji(12048,7032,2074);l=1}}i=d;return}function Hg(a){a=a|0;var b=0,d=0;b=i;d=a;Bi(c[d+8>>2]|0);Bi(c[d+12>>2]|0);Bi(c[d+16>>2]|0);Bi(c[d+20>>2]|0);Bi(c[d+24>>2]|0);Bi(c[d+40>>2]|0);Bi(c[d+44>>2]|0);Bi(c[d+48>>2]|0);Bi(c[d+52>>2]|0);Bi(c[d+56>>2]|0);Bi(c[d+68>>2]|0);Bi(c[d+72>>2]|0);Bi(c[d+76>>2]|0);Bi(c[d+80>>2]|0);Bi(c[d+108>>2]|0);Bi(c[d+112>>2]|0);Bi(c[d+120>>2]|0);Bi(c[d+124>>2]|0);Bi(c[d+136>>2]|0);Bi(c[d+140>>2]|0);Bi(c[d+180>>2]|0);Bi(c[d+184>>2]|0);Bi(c[d+188>>2]|0);Bi(c[d+192>>2]|0);Bi(c[d+196>>2]|0);Bi(c[d+200>>2]|0);Bi(d);i=b;return}function Ig(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0.0,m=0.0,n=0;e=i;f=b;b=d;d=c[f+12>>2]|0;g=c[f+56>>2]|0;j=c[(c[f+52>>2]|0)+((c[f>>2]|0)+b<<2)>>2]|0;k=a[g+b|0]|0;if((k|0)==3){l=+h[(c[f+16>>2]|0)+(j<<3)>>3];m=l;i=e;return+m}else if((k|0)==2){l=+h[d+(j<<3)>>3];m=l;i=e;return+m}else if((k|0)==5){l=+h[d+(j<<3)>>3];m=l;i=e;return+m}else if((k|0)==4){l=0.0;m=l;i=e;return+m}else{if((g|0)!=(g|0)){n=1}else{Ji(12048,7032,859);n=1}m=l;i=e;return+m}return 0.0}function Jg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0;e=i;f=a;a=d;d=c[f>>2]|0;g=c[f+188>>2]|0;Kg(f,b,a,c[f+188>>2]|0);if((c[f+60>>2]|0)!=0){j=1}else{Ji(11816,7032,633);j=1}Bd(c[f+64>>2]|0,g);f=1;while(1){if((f|0)>(d|0)){break}j=a+(f<<3)|0;h[j>>3]=+h[j>>3]+ +h[g+(f<<3)>>3];f=f+1|0}i=e;return}function Kg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0;f=i;g=a;a=b;b=d;d=e;e=c[g>>2]|0;j=c[g+40>>2]|0;k=c[g+44>>2]|0;l=c[g+48>>2]|0;m=c[g+52>>2]|0;g=1;while(1){if((g|0)>(e|0)){break}n=c[m+(g<<2)>>2]|0;o=+h[a+(g<<3)>>3];if((n|0)<=(e|0)){o=o- +h[b+(n<<3)>>3]}else{p=c[j+(n-e+1<<2)>>2]|0;q=c[j+(n-e<<2)>>2]|0;while(1){if((q|0)>=(p|0)){break}o=o+ +h[l+(q<<3)>>3]*+h[b+(c[k+(q<<2)>>2]<<3)>>3];q=q+1|0}}h[d+(g<<3)>>3]=o;g=g+1|0}i=f;return}function Lg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0;e=i;f=a;a=d;d=c[f>>2]|0;g=c[f+188>>2]|0;Mg(f,b,a,c[f+188>>2]|0);if((c[f+60>>2]|0)!=0){j=1}else{Ji(11816,7032,567);j=1}Ad(c[f+64>>2]|0,g);f=1;while(1){if((f|0)>(d|0)){break}j=a+(f<<3)|0;h[j>>3]=+h[j>>3]+ +h[g+(f<<3)>>3];f=f+1|0}i=e;return}function Mg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0,p=0;f=i;g=a;a=d;d=e;e=c[g>>2]|0;j=c[g+40>>2]|0;k=c[g+44>>2]|0;l=c[g+48>>2]|0;m=c[g+52>>2]|0;Ku(d+8|0,b+8|0,e<<3)|0;b=1;while(1){if((b|0)>(e|0)){break}n=+h[a+(b<<3)>>3];if(!(n==0.0)){g=c[m+(b<<2)>>2]|0;if((g|0)<=(e|0)){o=d+(g<<3)|0;h[o>>3]=+h[o>>3]-n}else{o=c[j+(g-e+1<<2)>>2]|0;p=c[j+(g-e<<2)>>2]|0;while(1){if((p|0)>=(o|0)){break}g=d+(c[k+(p<<2)>>2]<<3)|0;h[g>>3]=+h[g>>3]+ +h[l+(p<<3)>>3]*n;p=p+1|0}}}b=b+1|0}i=f;return}function Ng(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0.0,l=0,m=0,n=0.0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+24>>2]|0;g=c[d+52>>2]|0;j=c[d+108>>2]|0;k=+h[f>>3];l=1;while(1){if((l|0)>(a|0)){break}m=c[g+(l<<2)>>2]|0;if((m|0)>(a|0)){k=k+ +h[f+(m-a<<3)>>3]*+h[j+(l<<3)>>3]}l=l+1|0}l=1;while(1){if((l|0)>(e|0)){break}m=c[g+(a+l<<2)>>2]|0;if((m|0)>(a|0)){n=+h[f+(m-a<<3)>>3];k=k+n*+Ig(d,l)}l=l+1|0}i=b;return+k}function Og(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;e=i;f=b;b=c[f>>2]|0;g=c[f+52>>2]|0;j=c[f+120>>2]|0;k=c[f+196>>2]|0;l=c[f+196>>2]|0;m=c[g+(b+d<<2)>>2]|0;d=1;while(1){if((d|0)>(b|0)){break}h[l+(d<<3)>>3]=0.0;d=d+1|0}if((m|0)<=(b|0)){h[l+(m<<3)>>3]=-1.0}else{n=c[f+40>>2]|0;o=c[f+44>>2]|0;p=c[f+48>>2]|0;q=c[n+(m-b+1<<2)>>2]|0;r=c[n+(m-b<<2)>>2]|0;while(1){if((r|0)>=(q|0)){break}h[l+(c[o+(r<<2)>>2]<<3)>>3]=+h[p+(r<<3)>>3];r=r+1|0}}if((c[f+60>>2]|0)!=0){s=1}else{Ji(11816,7032,1117);s=1}Ad(c[f+64>>2]|0,k);t=(a[j+m|0]|0)!=0?1.0:0.0;d=1;while(1){if((d|0)>(b|0)){break}m=c[g+(d<<2)>>2]|0;if((a[j+m|0]|0)!=0){t=t+ +h[k+(d<<3)>>3]*+h[k+(d<<3)>>3]}d=d+1|0}i=e;return+t}function Pg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+20>>2]|0;g=c[e+52>>2]|0;j=c[e+192>>2]|0;k=1;while(1){if((k|0)>(b|0)){break}h[j+(k<<3)>>3]=+h[f+(c[g+(k<<2)>>2]<<3)>>3];k=k+1|0}Ku(a+8|0,j+8|0,b<<3)|0;if((c[e+60>>2]|0)!=0){l=1;m=l&1;n=e;o=n+64|0;p=c[o>>2]|0;q=a;Bd(p,q);r=e;s=j;t=a;Jg(r,s,t);i=d;return}Ji(11816,7032,940);l=1;m=l&1;n=e;o=n+64|0;p=c[o>>2]|0;q=a;Bd(p,q);r=e;s=j;t=a;Jg(r,s,t);i=d;return}function Qg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0.0,k=0.0,l=0,m=0,n=0;e=i;f=a;a=b;b=c[f>>2]|0;g=c[(c[f+52>>2]|0)+(b+d<<2)>>2]|0;j=+h[(c[f+20>>2]|0)+(g<<3)>>3];if((g|0)<=(b|0)){j=j- +h[a+(g<<3)>>3];k=j;i=e;return+k}d=c[f+40>>2]|0;l=c[f+44>>2]|0;m=c[f+48>>2]|0;f=c[d+(g-b+1<<2)>>2]|0;n=c[d+(g-b<<2)>>2]|0;while(1){if((n|0)>=(f|0)){break}j=j+ +h[m+(n<<3)>>3]*+h[a+(c[l+(n<<2)>>2]<<3)>>3];n=n+1|0}k=j;i=e;return+k}function Rg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+40>>2]|0;j=c[e+44>>2]|0;k=c[e+48>>2]|0;l=c[e+52>>2]|0;m=c[e+192>>2]|0;n=1;while(1){if((n|0)>(b|0)){break}h[m+(n<<3)>>3]=0.0;n=n+1|0}n=1;while(1){if((n|0)>(f|0)){break}o=c[l+(b+n<<2)>>2]|0;p=+Ig(e,n);if(!(p==0.0)){if((o|0)<=(b|0)){q=m+(o<<3)|0;h[q>>3]=+h[q>>3]-p}else{q=c[g+(o-b+1<<2)>>2]|0;r=c[g+(o-b<<2)>>2]|0;while(1){if((r|0)>=(q|0)){break}o=m+(c[j+(r<<2)>>2]<<3)|0;h[o>>3]=+h[o>>3]+p*+h[k+(r<<3)>>3];r=r+1|0}}}n=n+1|0}Ku(a+8|0,m+8|0,b<<3)|0;if((c[e+60>>2]|0)!=0){s=1;t=s&1;u=e;v=u+64|0;w=c[v>>2]|0;x=a;Ad(w,x);y=e;z=m;A=a;Lg(y,z,A);i=d;return}Ji(11816,7032,912);s=1;t=s&1;u=e;v=u+64|0;w=c[v>>2]|0;x=a;Ad(w,x);y=e;z=m;A=a;Lg(y,z,A);i=d;return}function Sg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=d;d=e;e=a;a=c[e>>2]|0;j=c[e+40>>2]|0;k=c[e+44>>2]|0;l=c[e+48>>2]|0;m=c[(c[e+52>>2]|0)+(b<<2)>>2]|0;if((m|0)<=(a|0)){n=1;c[g+4>>2]=m;h[d+8>>3]=1.0;o=n;i=f;return o|0}b=c[j+(m-a<<2)>>2]|0;n=(c[j+(m-a+1<<2)>>2]|0)-b|0;Ku(g+4|0,k+(b<<2)|0,n<<2)|0;Ku(d+8|0,l+(b<<3)|0,n<<3)|0;b=1;while(1){if((b|0)>(n|0)){break}h[d+(b<<3)>>3]=-0.0- +h[d+(b<<3)>>3];b=b+1|0}o=n;i=f;return o|0}function Tg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+40>>2]|0;g=c[d+44>>2]|0;h=c[d+68>>2]|0;j=c[d+72>>2]|0;k=1;while(1){if((k|0)>(a|0)){break}c[j+(k<<2)>>2]=1;k=k+1|0}l=1;while(1){if((l|0)>(e|0)){break}m=c[f+(l+1<<2)>>2]|0;n=c[f+(l<<2)>>2]|0;while(1){if((n|0)>=(m|0)){break}o=j+(c[g+(n<<2)>>2]<<2)|0;c[o>>2]=(c[o>>2]|0)+1;n=n+1|0}l=l+1|0}c[h+4>>2]=1;k=1;while(1){if((k|0)>(a|0)){break}if((c[j+(k<<2)>>2]|0)>(e|0)){c[j+(k<<2)>>2]=e}c[h+(k+1<<2)>>2]=(c[h+(k<<2)>>2]|0)+(c[j+(k<<2)>>2]|0);k=k+1|0}c[d+76>>2]=yi(c[h+(a+1<<2)>>2]|0,4)|0;c[d+80>>2]=yi(c[h+(a+1<<2)>>2]|0,8)|0;i=b;return}function Ug(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+52>>2]|0;h=c[e+56>>2]|0;Nu((c[e+72>>2]|0)+4|0,0,b<<2|0)|0;j=1;while(1){if((j|0)>(f|0)){break}if((a[h+j|0]|0)!=5){Fg(e,j,c[g+(b+j<<2)>>2]|0)}j=j+1|0}i=d;return}function Vg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;d=i;e=a;a=b;b=2;f=0;g=0;j=0;k=0;l=0;m=Wg(e)|0;Xg(m,e);if((c[a>>2]|0)>=4){Li(10264,(n=i,i=i+8|0,h[n>>3]=+h[m+40>>3],n)|0);i=n}a:while(1){if((b|0)==0){o=Yg(m)|0;if((o|0)!=0){p=6;break}c[m+84>>2]=1;b=1;g=0;f=0}if((l|0)>=5e3){if((c[a+4>>2]|0)==2){p=15;break}}do{if((g|0)==0){_g(m);g=1;if((c[m+92>>2]|0)==0){if(($g(m,+h[a+24>>3]*.9)|0)!=0){c[m+92>>2]=1;ah(m)}else{c[m+92>>2]=2;bh(m)}if((ch(m,+h[a+24>>3])|0)==0){q=1}else{Ji(4592,7e3,2731);q=1}c[m+124>>2]=0;f=0}if((ch(m,+h[a+24>>3])|0)==0){break}if((c[a>>2]|0)>=1){Li(3744,(n=i,i=i+8|0,c[n>>2]=(c[m+92>>2]|0)==1?2944:2096,n)|0);i=n}if((c[a+4>>2]|0)==2){p=30;break a}c[m+92>>2]=0;b=0;j=5;continue a}}while(0);do{if((c[m+92>>2]|0)==1){r=1}else{if((c[m+92>>2]|0)==2){r=1;break}Ji(21512,7e3,2762);r=1}}while(0);do{if((c[m+92>>2]|0)==1){if(($g(m,+h[a+24>>3])|0)!=0){break}dh(m,a,1);c[m+92>>2]=2;if((g|0)!=1){_g(m);g=1}bh(m);c[m+124>>2]=0;f=0}}while(0);if((f|0)==0){eh(m);if((c[m+92>>2]|0)==2){s=+fh(m);h[c[m+116>>2]>>3]=s}f=1}t=c[a+8>>2]|0;if((t|0)!=17)if((t|0)==34){if((c[m+124>>2]|0)==0){gh(m)}}else{if((a|0)!=(a|0)){u=1}else{Ji(20208,7e3,2796);u=1}}do{if((b|0)!=0){if((f|0)==0){p=56;break}if((g|0)!=0){v=1}else{p=56}}else{p=56}}while(0);if((p|0)==56){p=0;Ji(19192,7e3,2800);v=1}if((k|0)!=0){s=+hh(m);w=+ih(m);if((c[a+8>>2]|0)==34){x=+jh(m)}else{x=0.0}y=x;Li(17888,(n=i,i=i+24|0,h[n>>3]=s,h[n+8>>3]=w,h[n+16>>3]=y,n)|0);i=n;do{if(s<=1.0e-5){if(!(w<=1.0e-5)){p=64;break}if(y<=.001){z=1}else{p=64}}else{p=64}}while(0);if((p|0)==64){p=0;Ji(16680,7e3,2810);z=1}}do{if((c[m+92>>2]|0)==2){if(!(+h[m+40>>3]<0.0)){break}if(!(+h[a+40>>3]>-1.7976931348623157e+308)){break}if(!(+h[c[m+116>>2]>>3]<=+h[a+40>>3])){break}if((f|0)==1){if((g|0)==1){p=77;break a}}if((f|0)!=1){f=0}if((g|0)!=1){g=0}continue a}}while(0);do{if((c[m+92>>2]|0)==2){if(!(+h[m+40>>3]>0.0)){break}if(!(+h[a+48>>3]<1.7976931348623157e+308)){break}if(!(+h[c[m+116>>2]>>3]>=+h[a+48>>3])){break}if((f|0)==1){if((g|0)==1){p=91;break a}}if((f|0)!=1){f=0}if((g|0)!=1){g=0}continue a}}while(0);do{if((c[a+56>>2]|0)<2147483647){if(((c[m+108>>2]|0)-(c[m+104>>2]|0)|0)<(c[a+56>>2]|0)){break}if((c[m+92>>2]|0)==2){if((f|0)==1){p=98}}else{p=98}if((p|0)==98){p=0;if((g|0)==1){p=105;break a}}do{if((c[m+92>>2]|0)==2){if((f|0)==1){break}f=0}}while(0);if((g|0)!=1){g=0}continue a}}while(0);do{if((c[a+60>>2]|0)<2147483647){y=+Ni();w=+Oi(y,+h[m+96>>3])*1.0e3;if(!(w>=+(c[a+60>>2]|0))){break}if((c[m+92>>2]|0)==2){if((f|0)==1){p=118}}else{p=118}if((p|0)==118){p=0;if((g|0)==1){p=125;break a}}do{if((c[m+92>>2]|0)==2){if((f|0)==1){break}f=0}}while(0);if((g|0)!=1){g=0}continue a}}while(0);dh(m,a,0);kh(m,+h[a+16>>3]);if((c[m+136>>2]|0)==0){if((f|0)==1){if((g|0)==1){p=142;break}}if((f|0)!=1){f=0}if((g|0)!=1){g=0}continue}t=c[m+216>>2]|0;lh(m,t);if((j|0)!=0){mh(m,t)}nh(m,t);oh(m,+h[a+16>>3]);t=c[a+12>>2]|0;if((t|0)==17){ph(m,0.0)}else if((t|0)==34){ph(m,+h[a+24>>3]*.3)}else{if((a|0)!=(a|0)){A=1}else{Ji(20208,7e3,2969);A=1}}if((c[m+180>>2]|0)==0){do{if((f|0)==1){if((g|0)!=1){break}if((j|0)!=0){p=170;break a}}}while(0);if((f|0)!=1){f=0}if((g|0)!=1){g=0}j=1;continue}w=+h[(c[m+160>>2]|0)+(c[m+180>>2]<<3)>>3];y=(+h[m+168>>3]*.01+1.0)*1.0e-5;do{if(+U(+w)<y){if((c[a>>2]|0)>=4){Li(12744,(n=i,i=i+16|0,h[n>>3]=w,h[n+8>>3]=y,n)|0);i=n}if((j|0)!=0){break}else{j=5;continue a}}}while(0);qh(m);if((j|0)!=0){rh(m)}y=+h[(c[m+200>>2]|0)+(c[m+136>>2]<<3)>>3];w=+h[(c[m+160>>2]|0)+(c[m+180>>2]<<3)>>3];if(y!=0.0){B=1}else{Ji(12504,7e3,3027);B=1}do{if(+U(+(y-w))>(+U(+y)+1.0)*1.0e-8){p=199}else{if(y>0.0){if(w>0.0){break}}if(!(y<0.0)){p=199;break}if(!(w<0.0)){p=199}}}while(0);b:do{if((p|0)==199){p=0;if((c[a>>2]|0)>=4){Li(12256,(n=i,i=i+16|0,h[n>>3]=y,h[n+8>>3]=w,n)|0);i=n}do{if((b|0)==1){if((j|0)==0){break}if(+h[(c[m+200>>2]|0)+(c[m+136>>2]<<3)>>3]==0.0){t=m+192|0;c[t>>2]=(c[t>>2]|0)+1;if((c[m+192>>2]|0)<=(c[m>>2]|0)){C=1}else{Ji(12024,7e3,3040);C=1}c[(c[m+196>>2]|0)+(c[m+192>>2]<<2)>>2]=c[m+136>>2]}h[(c[m+200>>2]|0)+(c[m+136>>2]<<3)>>3]=w;break b}}while(0);if((b|0)!=1){b=0}j=5;continue a}}while(0);sh(m);if((c[m+92>>2]|0)==2){t=c[m+116>>2]|0;h[t>>3]=+h[t>>3]+ +h[(c[m+120>>2]|0)+(c[m+180>>2]<<3)>>3]/+h[m+40>>3]*(+h[m+144>>3]/+h[(c[m+200>>2]|0)+(c[m+136>>2]<<3)>>3])}f=2;th(m);g=2;t=c[a+8>>2]|0;if((t|0)!=17)if((t|0)==34){if((c[m+124>>2]|0)>0){uh(m)}}else{if((a|0)!=(a|0)){D=1}else{Ji(20208,7e3,3080);D=1}}o=vh(m,c[m+136>>2]|0,c[(c[m+72>>2]|0)+((c[m>>2]|0)+(c[m+180>>2]|0)<<2)>>2]|0)|0;if((o|0)==0){b=2}else{c[m+84>>2]=0;b=0}wh(m);t=m+108|0;c[t>>2]=(c[t>>2]|0)+1;do{if(-1.0e-9<=+h[m+184>>3]){if(!(+h[m+184>>3]<=1.0e-9)){p=227;break}l=l+1|0}else{p=227}}while(0);if((p|0)==227){p=0;l=0}if((j|0)>0){j=j-1|0}}if((p|0)==6){if((c[a>>2]|0)>=1){Li(18088,(n=i,i=i+8|0,c[n>>2]=o,n)|0);i=n;Li(13368,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}if((c[e+76>>2]|0)!=0){p=10}else{if((c[e+88>>2]|0)==0){E=1}else{p=10}}if((p|0)==10){Ji(9928,7e3,2689);E=1}c[e+88>>2]=c[m+88>>2];c[m+88>>2]=0;c[e+96>>2]=1;c[e+92>>2]=1;h[e+104>>3]=0.0;c[e+112>>2]=c[m+108>>2];c[e+116>>2]=0;o=5;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==15){if((c[a>>2]|0)>=1){Li(5744,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}Zg(m,e,1,1,0);o=5;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==30){Zg(m,e,1,1,0);o=5;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==77){dh(m,a,1);if((c[a>>2]|0)>=3){Li(16280,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}Zg(m,e,3,2,0);o=6;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==91){dh(m,a,1);if((c[a>>2]|0)>=3){Li(15920,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}Zg(m,e,3,2,0);o=7;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==105){dh(m,a,1);if((c[a>>2]|0)>=3){Li(15584,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}E=c[m+92>>2]|0;if((E|0)==1){H=3;bh(m);eh(m)}else if((E|0)==2){H=2}else{if((m|0)!=(m|0)){I=1}else{Ji(15288,7e3,2867);I=1}}Zg(m,e,3,H,0);o=8;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==125){dh(m,a,1);if((c[a>>2]|0)>=3){Li(15008,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}I=c[m+92>>2]|0;if((I|0)==1){H=3;bh(m);eh(m)}else if((I|0)==2){H=2}else{if((m|0)!=(m|0)){J=1}else{Ji(15288,7e3,2894);J=1}}Zg(m,e,3,H,0);o=9;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==142){dh(m,a,1);J=c[m+92>>2]|0;if((J|0)==1){if((c[a>>2]|0)>=3){Li(14776,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}bh(m);eh(m);K=3;H=4}else if((J|0)==2){if((c[a>>2]|0)>=3){Li(14256,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}H=2;K=2}else{if((m|0)!=(m|0)){L=1}else{Ji(15288,7e3,2933);L=1}}Zg(m,e,K,H,0);o=0;F=m;xh(F);G=o;i=d;return G|0}else if((p|0)==170){dh(m,a,1);H=c[m+92>>2]|0;if((H|0)==2){if((c[a>>2]|0)>=3){Li(13272,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}Zg(m,e,4,2,c[(c[m+72>>2]|0)+(c[m+136>>2]<<2)>>2]|0);o=0}else if((H|0)==1){if((c[a>>2]|0)>=1){Li(13744,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}if((c[e+76>>2]|0)!=0){p=175}else{if((c[e+88>>2]|0)==0){M=1}else{p=175}}if((p|0)==175){Ji(9928,7e3,2984);M=1}c[e+88>>2]=c[m+88>>2];c[m+88>>2]=0;c[e+96>>2]=1;c[e+92>>2]=1;h[e+104>>3]=0.0;c[e+112>>2]=c[m+108>>2];c[e+116>>2]=0;o=5}else{if((m|0)!=(m|0)){N=1}else{Ji(15288,7e3,3004);N=1}}F=m;xh(F);G=o;i=d;return G|0}return 0}function Wg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;a=c[d+48>>2]|0;e=c[d+52>>2]|0;f=c[d+56>>2]|0;d=yi(1,224)|0;if((a|0)>0){if((e|0)>0){g=1}else{h=3}}else{h=3}if((h|0)==3){Ji(4576,7e3,308);g=1}c[d>>2]=a;c[d+4>>2]=e;c[d+8>>2]=yi(a+1+e|0,1)|0;c[d+12>>2]=yi(a+1+e|0,8)|0;c[d+16>>2]=yi(a+1+e|0,8)|0;c[d+20>>2]=yi(a+1+e|0,8)|0;c[d+24>>2]=yi(a+1+e|0,1)|0;c[d+28>>2]=yi(a+1+e|0,8)|0;c[d+32>>2]=yi(a+1+e|0,8)|0;c[d+36>>2]=yi(e+1|0,8)|0;c[d+48>>2]=yi(e+2|0,4)|0;c[d+52>>2]=yi(f+1|0,4)|0;c[d+56>>2]=yi(f+1|0,8)|0;c[d+60>>2]=yi(a+2|0,4)|0;c[d+64>>2]=yi(f+1|0,4)|0;c[d+68>>2]=yi(f+1|0,8)|0;c[d+72>>2]=yi(a+1+e|0,4)|0;c[d+76>>2]=yi(a+1+e|0,4)|0;c[d+80>>2]=yi(e+1|0,1)|0;c[d+116>>2]=yi(a+1|0,8)|0;c[d+120>>2]=yi(e+1|0,8)|0;c[d+128>>2]=yi(a+1+e|0,1)|0;c[d+132>>2]=yi(a+1|0,8)|0;c[d+156>>2]=yi(e+1|0,4)|0;c[d+160>>2]=yi(e+1|0,8)|0;c[d+196>>2]=yi(a+1|0,4)|0;c[d+200>>2]=yi(a+1|0,8)|0;c[d+204>>2]=yi(a+1|0,8)|0;c[d+208>>2]=yi(a+1|0,8)|0;c[d+212>>2]=yi(a+1|0,8)|0;c[d+216>>2]=yi(a+1|0,8)|0;i=b;return d|0}function Xg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;f=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+8>>2]|0;k=c[f+12>>2]|0;l=c[f+16>>2]|0;m=c[f+20>>2]|0;n=c[f+24>>2]|0;o=c[f+28>>2]|0;p=c[f+32>>2]|0;q=c[f+36>>2]|0;r=c[f+48>>2]|0;s=c[f+52>>2]|0;t=c[f+56>>2]|0;u=c[f+60>>2]|0;v=c[f+64>>2]|0;w=c[f+68>>2]|0;x=c[f+72>>2]|0;y=c[f+76>>2]|0;z=c[f+80>>2]|0;A=c[f+128>>2]|0;B=c[f+132>>2]|0;C=1;while(1){if((C|0)>(d|0)){break}D=c[(c[b+60>>2]|0)+(C<<2)>>2]|0;a[j+C|0]=c[D+20>>2];h[k+(C<<3)>>3]=+h[D+24>>3]*+h[D+48>>3];h[l+(C<<3)>>3]=+h[D+32>>3]*+h[D+48>>3];h[m+(C<<3)>>3]=0.0;C=C+1|0}D=1;while(1){if((D|0)>(g|0)){break}E=c[(c[b+64>>2]|0)+(D<<2)>>2]|0;a[j+(d+D)|0]=c[E+16>>2];h[k+(d+D<<3)>>3]=+h[E+24>>3]/+h[E+56>>3];h[l+(d+D<<3)>>3]=+h[E+32>>3]/+h[E+56>>3];h[m+(d+D<<3)>>3]=+h[E+40>>3]*+h[E+56>>3];D=D+1|0}Ku(n+1|0,j+1|0,d+g|0)|0;Ku(o+8|0,k+8|0,d+g<<3)|0;Ku(p+8|0,l+8|0,d+g<<3)|0;h[q>>3]=+h[b+32>>3];Ku(q+8|0,m+(d+1<<3)|0,g<<3)|0;F=0.0;D=1;while(1){if((D|0)>(g|0)){break}if(F<+U(+(+h[q+(D<<3)>>3]))){F=+U(+(+h[q+(D<<3)>>3]))}D=D+1|0}if(F==0.0){F=1.0}q=c[b+24>>2]|0;if((q|0)==2){h[f+40>>3]=-1.0/F}else if((q|0)==1){h[f+40>>3]=1.0/F}else{if((b|0)!=(b|0)){G=1}else{Ji(5336,7e3,426);G=1}}if(+U(+(+h[f+40>>3]))<1.0){G=f+40|0;h[G>>3]=+h[G>>3]*1.0e3}D=1;while(1){if((D|0)>(g|0)){break}G=m+(d+D<<3)|0;h[G>>3]=+h[G>>3]*+h[f+40>>3];D=D+1|0}m=1;D=1;while(1){if((D|0)>(g|0)){break}c[r+(D<<2)>>2]=m;G=c[(c[(c[b+64>>2]|0)+(D<<2)>>2]|0)+48>>2]|0;while(1){if((G|0)==0){break}c[s+(m<<2)>>2]=c[c[G>>2]>>2];h[t+(m<<3)>>3]=+h[(c[G>>2]|0)+48>>3]*+h[G+8>>3]*+h[(c[G+4>>2]|0)+56>>3];m=m+1|0;G=c[G+28>>2]|0}D=D+1|0}c[r+(g+1<<2)>>2]=m;if((m-1|0)==(c[b+56>>2]|0)){H=1}else{Ji(5256,7e3,445);H=1}m=1;C=1;while(1){if((C|0)>(d|0)){break}c[u+(C<<2)>>2]=m;H=c[(c[(c[b+60>>2]|0)+(C<<2)>>2]|0)+40>>2]|0;while(1){if((H|0)==0){break}c[v+(m<<2)>>2]=c[c[H+4>>2]>>2];h[w+(m<<3)>>3]=+h[(c[H>>2]|0)+48>>3]*+h[H+8>>3]*+h[(c[H+4>>2]|0)+56>>3];m=m+1|0;H=c[H+20>>2]|0}C=C+1|0}c[u+(d+1<<2)>>2]=m;if((m-1|0)==(c[b+56>>2]|0)){I=1}else{Ji(5256,7e3,459);I=1}if((c[b+76>>2]|0)!=0){J=1}else{Ji(5200,7e3,462);J=1}Ku(x+4|0,(c[b+80>>2]|0)+4|0,d<<2)|0;J=0;C=1;while(1){if((C|0)>(d|0)){break}I=c[(c[b+60>>2]|0)+(C<<2)>>2]|0;if((c[I+56>>2]|0)!=1){J=J+1|0;if((J|0)<=(g|0)){K=1}else{Ji(4984,7e3,469);K=1}c[x+(d+J<<2)>>2]=C;a[z+J|0]=c[I+56>>2]}C=C+1|0}D=1;while(1){if((D|0)>(g|0)){break}K=c[(c[b+64>>2]|0)+(D<<2)>>2]|0;if((c[K+64>>2]|0)!=1){J=J+1|0;if((J|0)<=(g|0)){L=1}else{Ji(4984,7e3,478);L=1}c[x+(d+J<<2)>>2]=d+D;a[z+J|0]=c[K+64>>2]}D=D+1|0}if((J|0)==(g|0)){M=1}else{Ji(4936,7e3,483);M=1}J=1;while(1){if((J|0)>(d+g|0)){break}c[y+(c[x+(J<<2)>>2]<<2)>>2]=J;J=J+1|0}c[f+84>>2]=1;c[b+76>>2]=0;c[f+88>>2]=c[b+88>>2];c[b+88>>2]=0;c[f+92>>2]=0;h[f+96>>3]=+Ni();J=c[b+112>>2]|0;c[f+108>>2]=J;c[f+104>>2]=J;c[f+112>>2]=-1;c[f+124>>2]=0;Nu(A+1|0,0,d+g|0)|0;C=1;while(1){if((C|0)>(d|0)){break}h[B+(C<<3)>>3]=1.0;C=C+1|0}i=e;return}function Yg(a){a=a|0;var b=0,d=0;b=i;d=a;a=zd(c[d+88>>2]|0,c[d>>2]|0,0,42,d)|0;c[d+84>>2]=(a|0)==0;i=b;return a|0}function Zg(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;k=b;b=d;d=e;e=f;f=g;g=c[k>>2]|0;l=c[k+4>>2]|0;m=+h[k+40>>3];n=c[k+72>>2]|0;o=c[k+80>>2]|0;p=c[k+116>>2]|0;q=c[k+120>>2]|0;if((c[b+48>>2]|0)==(g|0)){r=1}else{Ji(5440,7e3,2471);r=1}if((c[b+52>>2]|0)==(l|0)){s=1}else{Ji(5416,7e3,2472);s=1}if((c[b+76>>2]|0)!=0){t=7}else{if((c[b+88>>2]|0)==0){u=1}else{t=7}}if((t|0)==7){Ji(9928,7e3,2476);u=1}if((c[k+84>>2]|0)!=0){if((c[k+88>>2]|0)!=0){v=1}else{t=10}}else{t=10}if((t|0)==10){Ji(5384,7e3,2477);v=1}c[b+76>>2]=1;c[k+84>>2]=0;c[b+88>>2]=c[k+88>>2];c[k+88>>2]=0;Ku((c[b+80>>2]|0)+4|0,n+4|0,g<<2)|0;c[b+92>>2]=d;c[b+96>>2]=e;h[b+104>>3]=+fh(k);c[b+112>>2]=c[k+108>>2];c[b+116>>2]=f;f=1;while(1){if((f|0)>(g|0)){break}w=c[n+(f<<2)>>2]|0;if(1<=(w|0)){if((w|0)<=(g+l|0)){x=1}else{t=15}}else{t=15}if((t|0)==15){t=0;Ji(9888,7e3,2495);x=1}if((w|0)<=(g|0)){k=c[(c[b+60>>2]|0)+(w<<2)>>2]|0;c[k+56>>2]=1;c[k+60>>2]=f;h[k+64>>3]=+h[p+(f<<3)>>3]/+h[k+48>>3];h[k+72>>3]=0.0}else{k=c[(c[b+64>>2]|0)+(w-g<<2)>>2]|0;c[k+64>>2]=1;c[k+68>>2]=f;h[k+72>>3]=+h[p+(f<<3)>>3]*+h[k+56>>3];h[k+80>>3]=0.0}f=f+1|0}f=1;while(1){if((f|0)>(l|0)){break}w=c[n+(g+f<<2)>>2]|0;if(1<=(w|0)){if((w|0)<=(g+l|0)){y=1}else{t=25}}else{t=25}if((t|0)==25){t=0;Ji(9888,7e3,2516);y=1}if((w|0)<=(g|0)){p=c[(c[b+60>>2]|0)+(w<<2)>>2]|0;c[p+56>>2]=a[o+f|0]|0;c[p+60>>2]=0;x=a[o+f|0]|0;if((x|0)==5){h[p+64>>3]=+h[p+24>>3]}else if((x|0)==2){h[p+64>>3]=+h[p+24>>3]}else if((x|0)==3){h[p+64>>3]=+h[p+32>>3]}else if((x|0)==4){h[p+64>>3]=0.0}else{if((o|0)!=(o|0)){z=1}else{Ji(7240,7e3,2535);z=1}}h[p+72>>3]=+h[q+(f<<3)>>3]*+h[p+48>>3]/m}else{p=c[(c[b+64>>2]|0)+(w-g<<2)>>2]|0;c[p+64>>2]=a[o+f|0]|0;c[p+68>>2]=0;x=a[o+f|0]|0;if((x|0)==2){h[p+72>>3]=+h[p+24>>3]}else if((x|0)==3){h[p+72>>3]=+h[p+32>>3]}else if((x|0)==4){h[p+72>>3]=0.0}else if((x|0)==5){h[p+72>>3]=+h[p+24>>3]}else{if((o|0)!=(o|0)){A=1}else{Ji(7240,7e3,2557);A=1}}h[p+80>>3]=+h[q+(f<<3)>>3]/+h[p+56>>3]/m}f=f+1|0}i=j;return}function _g(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+72>>2]|0;g=c[d+120>>2]|0;j=c[d+212>>2]|0;Gh(d,j);k=1;while(1){if((k|0)>(e|0)){break}l=c[f+(a+k<<2)>>2]|0;if(1<=(l|0)){if((l|0)<=(a+e|0)){m=1}else{n=5}}else{n=5}if((n|0)==5){n=0;Ji(9888,7e3,976);m=1}h[g+(k<<3)>>3]=+Hh(d,j,k);k=k+1|0}i=b;return}function $g(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;f=b;g=d;b=c[f>>2]|0;j=c[f+4>>2]|0;k=c[f+24>>2]|0;l=c[f+72>>2]|0;m=c[f+120>>2]|0;f=1;while(1){if((f|0)>(j|0)){n=18;break}o=c[l+(b+f<<2)>>2]|0;if(1<=(o|0)){if((o|0)<=(b+j|0)){p=1}else{n=5}}else{n=5}if((n|0)==5){n=0;Ji(9888,7e3,2214);p=1}if(+h[m+(f<<3)>>3]<-0.0-g){if((a[k+o|0]|0)==2){n=9;break}if((a[k+o|0]|0)==1){n=9;break}}if(+h[m+(f<<3)>>3]>g){if((a[k+o|0]|0)==3){n=14;break}if((a[k+o|0]|0)==1){n=14;break}}f=f+1|0}if((n|0)==9){q=1;r=q;i=e;return r|0}else if((n|0)==14){q=1;r=q;i=e;return r|0}else if((n|0)==18){q=0;r=q;i=e;return r|0}return 0}function ah(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+8>>2]|0;j=c[e+12>>2]|0;k=c[e+16>>2]|0;l=c[e+24>>2]|0;m=c[e+72>>2]|0;n=c[e+80>>2]|0;o=c[e+120>>2]|0;e=1;while(1){if((e|0)>(b+f|0)){break}switch(a[l+e|0]|0){case 1:{a[g+e|0]=4;h[j+(e<<3)>>3]=-1.0e3;h[k+(e<<3)>>3]=1.0e3;break};case 4:case 5:{a[g+e|0]=5;h[k+(e<<3)>>3]=0.0;h[j+(e<<3)>>3]=0.0;break};case 3:{a[g+e|0]=4;h[j+(e<<3)>>3]=-1.0;h[k+(e<<3)>>3]=0.0;break};case 2:{a[g+e|0]=4;h[j+(e<<3)>>3]=0.0;h[k+(e<<3)>>3]=1.0;break};default:{if((l|0)!=(l|0)){p=1}else{Ji(5464,7e3,2264);p=1}}}e=e+1|0}p=1;while(1){if((p|0)>(f|0)){break}e=c[m+(b+p<<2)>>2]|0;if(1<=(e|0)){if((e|0)<=(b+f|0)){q=1}else{r=17}}else{r=17}if((r|0)==17){r=0;Ji(9888,7e3,2270);q=1}if((a[g+e|0]|0)==5){a[n+p|0]=5}else{if(+h[o+(p<<3)>>3]>=0.0){a[n+p|0]=2}else{a[n+p|0]=3}}p=p+1|0}i=d;return}function bh(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0;d=i;e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+8>>2]|0;j=c[e+12>>2]|0;k=c[e+16>>2]|0;l=c[e+28>>2]|0;m=c[e+32>>2]|0;n=c[e+72>>2]|0;o=c[e+80>>2]|0;p=c[e+120>>2]|0;Ku(g+1|0,(c[e+24>>2]|0)+1|0,b+f|0)|0;Ku(j+8|0,l+8|0,b+f<<3)|0;Ku(k+8|0,m+8|0,b+f<<3)|0;m=1;while(1){if((m|0)>(f|0)){break}l=c[n+(b+m<<2)>>2]|0;if(1<=(l|0)){if((l|0)<=(b+f|0)){q=1}else{r=5}}else{r=5}if((r|0)==5){r=0;Ji(9888,7e3,2308);q=1}switch(a[g+l|0]|0){case 1:{a[o+m|0]=4;break};case 2:{a[o+m|0]=2;break};case 3:{a[o+m|0]=3;break};case 4:{if(+h[p+(m<<3)>>3]>=2.220446049250313e-16){a[o+m|0]=2}else{if(+h[p+(m<<3)>>3]<=-2.220446049250313e-16){a[o+m|0]=3}else{s=+U(+(+h[j+(l<<3)>>3]));if(s<=+U(+(+h[k+(l<<3)>>3]))){a[o+m|0]=2}else{a[o+m|0]=3}}}break};case 5:{a[o+m|0]=5;break};default:{if((g|0)!=(g|0)){t=1}else{Ji(5728,7e3,2334);t=1}}}m=m+1|0}i=d;return}function ch(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0;e=i;f=b;g=d;b=c[f+4>>2]|0;j=c[f+80>>2]|0;k=c[f+120>>2]|0;f=1;while(1){if((f|0)>(b|0)){l=15;break}if(+h[k+(f<<3)>>3]<-0.0-g){if((a[j+f|0]|0)==2){l=6;break}if((a[j+f|0]|0)==4){l=6;break}}if(+h[k+(f<<3)>>3]>g){if((a[j+f|0]|0)==3){l=11;break}if((a[j+f|0]|0)==4){l=11;break}}f=f+1|0}if((l|0)==6){m=1;n=m;i=e;return n|0}else if((l|0)==11){m=1;n=m;i=e;return n|0}else if((l|0)==15){m=0;n=m;i=e;return n|0}return 0}function dh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0;f=i;g=b;b=d;d=e;e=c[g>>2]|0;j=c[g+4>>2]|0;k=c[g+20>>2]|0;l=c[g+24>>2]|0;m=c[g+72>>2]|0;n=c[g+80>>2]|0;o=c[g+92>>2]|0;p=c[g+116>>2]|0;q=c[g+120>>2]|0;if((c[b>>2]|0)<2){i=f;return}do{if((c[b+68>>2]|0)>0){r=+Ni();s=+Oi(r,+h[g+96>>3])*1.0e3;if(!(s<+(c[b+68>>2]|0))){break}i=f;return}}while(0);if((c[g+108>>2]|0)==(c[g+112>>2]|0)){i=f;return}do{if((d|0)==0){if(((c[g+108>>2]|0)%(c[b+64>>2]|0)|0|0)==0){break}i=f;return}}while(0);s=0.0;if((o|0)==1){t=1;while(1){if((t|0)>(e|0)){break}s=s- +h[k+(c[m+(t<<2)>>2]<<3)>>3]*+h[p+(t<<3)>>3];t=t+1|0}u=1;while(1){if((u|0)>(j|0)){break}r=+h[k+(c[m+(e+u<<2)>>2]<<3)>>3];s=s-r*+yh(g,u);u=u+1|0}}else{u=1;while(1){if((u|0)>(j|0)){break}if(+h[q+(u<<3)>>3]<0.0){if((a[n+u|0]|0)==2){v=26}else{if((a[n+u|0]|0)==4){v=26}}if((v|0)==26){v=0;s=s- +h[q+(u<<3)>>3]}}if(+h[q+(u<<3)>>3]>0.0){if((a[n+u|0]|0)==3){v=31}else{if((a[n+u|0]|0)==4){v=31}}if((v|0)==31){v=0;s=s+ +h[q+(u<<3)>>3]}}u=u+1|0}}u=0;t=1;while(1){if((t|0)>(e|0)){break}if((a[l+(c[m+(t<<2)>>2]|0)|0]|0)==5){u=u+1|0}t=t+1|0}if((c[g+92>>2]|0)==1){Li(6264,(w=i,i=i+32|0,c[w>>2]=c[g+108>>2],c[w+8>>2]=30880,h[w+16>>3]=s,c[w+24>>2]=u,w)|0);i=w}else{t=c[g+108>>2]|0;r=+fh(g);Li(5952,(w=i,i=i+32|0,c[w>>2]=t,h[w+8>>3]=r,h[w+16>>3]=s,c[w+24>>2]=u,w)|0);i=w}c[g+112>>2]=c[g+108>>2];i=f;return}function eh(a){a=a|0;var b=0,d=0;b=i;d=a;Ih(d,c[d+116>>2]|0);i=b;return}function fh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0.0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+36>>2]|0;g=c[d+72>>2]|0;j=c[d+116>>2]|0;k=+h[f>>3];l=1;while(1){if((l|0)>(a|0)){break}m=c[g+(l<<2)>>2]|0;if(1<=(m|0)){if((m|0)<=(a+e|0)){n=1}else{o=5}}else{o=5}if((o|0)==5){o=0;Ji(9888,7e3,2380);n=1}if((m|0)>(a|0)){k=k+ +h[f+(m-a<<3)>>3]*+h[j+(l<<3)>>3]}l=l+1|0}l=1;while(1){if((l|0)>(e|0)){break}m=c[g+(a+l<<2)>>2]|0;if(1<=(m|0)){if((m|0)<=(a+e|0)){p=1}else{o=14}}else{o=14}if((o|0)==14){o=0;Ji(9888,7e3,2389);p=1}if((m|0)>(a|0)){q=+h[f+(m-a<<3)>>3];k=k+q*+yh(d,l)}l=l+1|0}i=b;return+k}function gh(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0;d=i;e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+72>>2]|0;j=c[e+128>>2]|0;k=c[e+132>>2]|0;if((c[e+124>>2]|0)==0){l=1}else{Ji(6312,7e3,997);l=1}c[e+124>>2]=1e3;Nu(j+1|0,0,b+f|0)|0;f=1;while(1){if((f|0)>(b|0)){break}a[j+(c[g+(f<<2)>>2]|0)|0]=1;h[k+(f<<3)>>3]=1.0;f=f+1|0}i=d;return}function hh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0.0,j=0.0,k=0.0;b=i;d=a;a=c[d>>2]|0;e=c[d+116>>2]|0;f=yi(a+1|0,8)|0;Ih(d,f);g=0.0;d=1;while(1){if((d|0)>(a|0)){break}j=+U(+(+h[f+(d<<3)>>3]- +h[e+(d<<3)>>3]));k=j/(+U(+(+h[f+(d<<3)>>3]))+1.0);if(g<k){g=k}d=d+1|0}Bi(f);i=b;return+g}function ih(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0.0,l=0,m=0.0,n=0.0;d=i;e=b;b=c[e+4>>2]|0;f=c[e+80>>2]|0;g=c[e+120>>2]|0;j=yi((c[e>>2]|0)+1|0,8)|0;Gh(e,j);k=0.0;l=1;while(1){if((l|0)>(b|0)){break}if((a[f+l|0]|0)!=5){m=+Hh(e,j,l);n=+U(+(m- +h[g+(l<<3)>>3]))/(+U(+m)+1.0);if(k<n){k=n}}l=l+1|0}Bi(j);i=d;return+k}function jh(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0.0,m=0,n=0,o=0.0,p=0.0;d=i;e=b;b=c[e>>2]|0;f=c[e+8>>2]|0;g=c[e+72>>2]|0;j=c[e+132>>2]|0;k=c[e+216>>2]|0;Fh(e,k);l=0.0;e=1;while(1){if((e|0)>(b|0)){break}if((a[f+(c[g+(e<<2)>>2]|0)|0]|0)==1){if(+h[j+(e<<3)>>3]==1.0){m=1}else{Ji(7792,7e3,2137);m=1}if(+h[k+(e<<3)>>3]==1.0){n=1}else{Ji(6328,7e3,2138);n=1}}else{o=+h[k+(e<<3)>>3];p=+U(+(o- +h[j+(e<<3)>>3]))/(+U(+o)+1.0);if(l<p){l=p}}e=e+1|0}i=d;return+l}function kh(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0,z=0.0;e=i;f=b;g=d;b=c[f>>2]|0;j=c[f+4>>2]|0;k=c[f+8>>2]|0;l=c[f+12>>2]|0;m=c[f+16>>2]|0;n=c[f+72>>2]|0;o=c[f+116>>2]|0;p=c[f+132>>2]|0;q=0;d=0.0;r=0.0;s=1;while(1){if((s|0)>(b|0)){break}t=c[n+(s<<2)>>2]|0;if(1<=(t|0)){if((t|0)<=(b+j|0)){u=1}else{v=5}}else{v=5}if((v|0)==5){v=0;Ji(9888,7e3,1131);u=1}w=0.0;do{if((a[k+t|0]|0)==2){v=9}else{if((a[k+t|0]|0)==4){v=9;break}if((a[k+t|0]|0)==5){v=9}}}while(0);if((v|0)==9){v=0;x=g*(+U(+(+h[l+(t<<3)>>3]))*.1+1.0);if(+h[o+(s<<3)>>3]<+h[l+(t<<3)>>3]-x){w=+h[l+(t<<3)>>3]- +h[o+(s<<3)>>3]}}do{if((a[k+t|0]|0)==3){v=15}else{if((a[k+t|0]|0)==4){v=15;break}if((a[k+t|0]|0)==5){v=15}}}while(0);if((v|0)==15){v=0;x=g*(+U(+(+h[m+(t<<3)>>3]))*.1+1.0);if(+h[o+(s<<3)>>3]>+h[m+(t<<3)>>3]+x){w=+h[m+(t<<3)>>3]- +h[o+(s<<3)>>3]}}if(!(w==0.0)){if(+h[p+(s<<3)>>3]>=0.0){y=1}else{Ji(6368,7e3,1158);y=1}z=+h[p+(s<<3)>>3];if(z<2.220446049250313e-16){z=2.220446049250313e-16}z=w*w/z;if(r<z){q=s;d=w;r=z}}s=s+1|0}c[f+136>>2]=q;h[f+144>>3]=d;i=e;return}function lh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+136>>2]|0;g=a;if(1<=(f|0)){if((f|0)<=(b|0)){j=1}else{k=3}}else{k=3}if((k|0)==3){Ji(11792,7e3,1191);j=1}j=1;while(1){if((j|0)>(b|0)){break}h[g+(j<<3)>>3]=0.0;j=j+1|0}h[g+(f<<3)>>3]=1.0;if((c[e+84>>2]|0)!=0){l=1;m=l&1;n=e;o=n+88|0;p=c[o>>2]|0;q=a;Bd(p,q);i=d;return}Ji(9328,7e3,1198);l=1;m=l&1;n=e;o=n+88|0;p=c[o>>2]|0;q=a;Bd(p,q);i=d;return}function mh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+136>>2]|0;g=c[e+212>>2]|0;if(1<=(f|0)){if((f|0)<=(b|0)){j=1}else{k=3}}else{k=3}if((k|0)==3){Ji(11792,7e3,1217);j=1}j=1;while(1){if((j|0)>(b|0)){break}h[g+(j<<3)>>3]=0.0;j=j+1|0}h[g+(f<<3)>>3]=1.0;Dh(e,g,a);i=d;return}function nh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;b=c[e>>2]|0;f=0;g=1;while(1){if((g|0)>(b|0)){break}if(+h[a+(g<<3)>>3]!=0.0){f=f+1|0}g=g+1|0}if(+(f|0)/+(b|0)>=.2){Bh(e,a);i=d;return}else{Ch(e,a);i=d;return}}function oh(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0;e=i;f=b;g=d;b=c[f+4>>2]|0;j=c[f+80>>2]|0;k=c[f+152>>2]|0;l=c[f+156>>2]|0;m=c[f+160>>2]|0;d=0.0;n=1;while(1){if((n|0)>(k|0)){break}o=c[l+(n<<2)>>2]|0;if(1<=(o|0)){if((o|0)<=(b|0)){p=1}else{q=5}}else{q=5}if((q|0)==5){q=0;Ji(8504,7e3,1387);p=1}if((a[j+o|0]|0)!=5){r=1}else{Ji(6464,7e3,1388);r=1}s=+U(+(+h[m+(c[l+(n<<2)>>2]<<3)>>3]));if(d<s){d=s}n=n+1|0}h[f+168>>3]=d;s=g*(.01*d+1.0);n=0;while(1){if((n|0)>=(k|0)){break}o=c[l+(k<<2)>>2]|0;if(+U(+(+h[m+(o<<3)>>3]))<s){k=k-1|0}else{n=n+1|0;c[l+(k<<2)>>2]=c[l+(n<<2)>>2];c[l+(n<<2)>>2]=o}}c[f+176>>2]=n;i=e;return}function ph(b,d){b=b|0;d=+d;var e=0,f=0,g=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0,y=0.0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0;e=i;f=b;g=d;b=c[f+4>>2]|0;j=c[f+80>>2]|0;k=c[f+120>>2]|0;l=c[f+136>>2]|0;d=+h[f+144>>3];m=c[f+156>>2]|0;n=c[f+160>>2]|0;o=c[f+176>>2]|0;if(1<=(l|0)){if((l|0)<=(c[f>>2]|0)){p=1}else{q=3}}else{q=3}if((q|0)==3){Ji(11792,7e3,1574);p=1}if(d!=0.0){r=1}else{Ji(6984,7e3,1583);r=1}s=d>0.0?1.0:-1.0;r=0;d=1.7976931348623157e+308;t=0.0;p=1;while(1){if((p|0)>(o|0)){break}u=c[m+(p<<2)>>2]|0;if(1<=(u|0)){if((u|0)<=(b|0)){v=1}else{q=10}}else{q=10}if((q|0)==10){q=0;Ji(8504,7e3,1594);v=1}w=s*+h[n+(u<<3)>>3];if(w!=0.0){x=1}else{Ji(6712,7e3,1598);x=1}a:do{if(w>0.0){do{if((a[j+u|0]|0)!=2){if((a[j+u|0]|0)==4){break}break a}}while(0);y=(+h[k+(u<<3)>>3]+g)/w;q=24}else{do{if((a[j+u|0]|0)!=3){if((a[j+u|0]|0)==4){break}break a}}while(0);y=(+h[k+(u<<3)>>3]-g)/w;q=24}}while(0);if((q|0)==24){q=0;if(y<0.0){y=0.0}do{if(d>y){q=29}else{if(!(d==y)){break}if(t<+U(+w)){q=29}}}while(0);if((q|0)==29){q=0;r=u;d=y;t=+U(+w)}}p=p+1|0}if(g==0.0){z=r;A=f;B=A+180|0;c[B>>2]=z;C=s;D=d;E=C*D;F=f;G=F+184|0;h[G>>3]=E;i=e;return}if((r|0)==0){z=r;A=f;B=A+180|0;c[B>>2]=z;C=s;D=d;E=C*D;F=f;G=F+184|0;h[G>>3]=E;i=e;return}if(d==0.0){z=r;A=f;B=A+180|0;c[B>>2]=z;C=s;D=d;E=C*D;F=f;G=F+184|0;h[G>>3]=E;i=e;return}g=d;r=0;d=1.7976931348623157e+308;t=0.0;p=1;while(1){if((p|0)>(o|0)){break}u=c[m+(p<<2)>>2]|0;if(1<=(u|0)){if((u|0)<=(b|0)){H=1}else{q=42}}else{q=42}if((q|0)==42){q=0;Ji(8504,7e3,1661);H=1}w=s*+h[n+(u<<3)>>3];if(w!=0.0){I=1}else{Ji(6712,7e3,1665);I=1}b:do{if(w>0.0){do{if((a[j+u|0]|0)!=2){if((a[j+u|0]|0)==4){break}break b}}while(0);y=+h[k+(u<<3)>>3]/w;q=56}else{do{if((a[j+u|0]|0)!=3){if((a[j+u|0]|0)==4){break}break b}}while(0);y=+h[k+(u<<3)>>3]/w;q=56}}while(0);if((q|0)==56){q=0;if(y<0.0){y=0.0}do{if(y<=g){if(!(t<+U(+w))){break}r=u;d=y;t=+U(+w)}}while(0)}p=p+1|0}if((r|0)!=0){J=1}else{Ji(6560,7e3,1703);J=1}z=r;A=f;B=A+180|0;c[B>>2]=z;C=s;D=d;E=C*D;F=f;G=F+184|0;h[G>>3]=E;i=e;return}function qh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+72>>2]|0;g=c[d+180>>2]|0;j=c[d+196>>2]|0;k=c[d+200>>2]|0;l=c[d+200>>2]|0;if(1<=(g|0)){if((g|0)<=(e|0)){m=1}else{n=3}}else{n=3}if((n|0)==3){Ji(11520,7e3,1737);m=1}m=c[f+(a+g<<2)>>2]|0;if(1<=(m|0)){if((m|0)<=(a+e|0)){o=1}else{n=6}}else{n=6}if((n|0)==6){Ji(9888,7e3,1741);o=1}o=1;while(1){if((o|0)>(a|0)){break}h[l+(o<<3)>>3]=0.0;o=o+1|0}if((m|0)<=(a|0)){h[l+(m<<3)>>3]=-1.0}else{n=c[d+48>>2]|0;e=c[d+52>>2]|0;g=c[d+56>>2]|0;f=c[n+(m-a+1<<2)>>2]|0;p=c[n+(m-a<<2)>>2]|0;while(1){if((p|0)>=(f|0)){break}h[l+(c[e+(p<<2)>>2]<<3)>>3]=+h[g+(p<<3)>>3];p=p+1|0}}if((c[d+84>>2]|0)!=0){q=1}else{Ji(9328,7e3,1762);q=1}Ad(c[d+88>>2]|0,k);q=0;o=1;while(1){if((o|0)>(a|0)){break}if(+h[k+(o<<3)>>3]!=0.0){p=q+1|0;q=p;c[j+(p<<2)>>2]=o}o=o+1|0}c[d+192>>2]=q;i=b;return}function rh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+72>>2]|0;g=c[d+180>>2]|0;j=c[d+196>>2]|0;k=c[d+200>>2]|0;l=c[d+212>>2]|0;if(1<=(g|0)){if((g|0)<=(e|0)){m=1}else{n=3}}else{n=3}if((n|0)==3){Ji(11520,7e3,1794);m=1}m=c[f+(a+g<<2)>>2]|0;if(1<=(m|0)){if((m|0)<=(a+e|0)){o=1}else{n=6}}else{n=6}if((n|0)==6){Ji(9888,7e3,1798);o=1}o=1;while(1){if((o|0)>(a|0)){break}h[l+(o<<3)>>3]=0.0;o=o+1|0}if((m|0)<=(a|0)){h[l+(m<<3)>>3]=-1.0}else{n=c[d+48>>2]|0;e=c[d+52>>2]|0;g=c[d+56>>2]|0;f=c[n+(m-a+1<<2)>>2]|0;p=c[n+(m-a<<2)>>2]|0;while(1){if((p|0)>=(f|0)){break}h[l+(c[e+(p<<2)>>2]<<3)>>3]=+h[g+(p<<3)>>3];p=p+1|0}}zh(d,l,k);l=0;o=1;while(1){if((o|0)>(a|0)){break}if(+h[k+(o<<3)>>3]!=0.0){p=l+1|0;l=p;c[j+(p<<2)>>2]=o}o=o+1|0}c[d+192>>2]=l;i=b;return}function sh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0;b=i;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=c[d+116>>2]|0;g=c[d+136>>2]|0;j=+h[d+144>>3];k=c[d+180>>2]|0;l=c[d+192>>2]|0;m=c[d+196>>2]|0;n=c[d+200>>2]|0;if(1<=(g|0)){if((g|0)<=(a|0)){o=1}else{p=3}}else{p=3}if((p|0)==3){Ji(11792,7e3,1889);o=1}if(1<=(k|0)){if((k|0)<=(e|0)){q=1}else{p=6}}else{p=6}if((p|0)==6){Ji(11520,7e3,1890);q=1}if(+h[n+(g<<3)>>3]!=0.0){r=1}else{Ji(7408,7e3,1894);r=1}s=j/+h[n+(g<<3)>>3];h[f+(g<<3)>>3]=+yh(d,k)+s;if(s==0.0){i=b;return}k=1;while(1){if((k|0)>(l|0)){break}d=c[m+(k<<2)>>2]|0;if(1<=(d|0)){if((d|0)<=(a|0)){t=1}else{p=15}}else{p=15}if((p|0)==15){p=0;Ji(10368,7e3,1904);t=1}if((d|0)!=(g|0)){r=f+(d<<3)|0;h[r>>3]=+h[r>>3]+ +h[n+(d<<3)>>3]*s}k=k+1|0}i=b;return}function th(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0;b=i;d=a;a=c[d+4>>2]|0;e=c[d+120>>2]|0;f=c[d+152>>2]|0;g=c[d+156>>2]|0;j=c[d+160>>2]|0;k=c[d+180>>2]|0;l=+h[d+184>>3];if(1<=(k|0)){if((k|0)<=(a|0)){m=1}else{n=3}}else{n=3}if((n|0)==3){Ji(11520,7e3,1850);m=1}h[e+(k<<3)>>3]=l;if(l==0.0){i=b;return}m=1;while(1){if((m|0)>(f|0)){break}d=c[g+(m<<2)>>2]|0;if(1<=(d|0)){if((d|0)<=(a|0)){o=1}else{n=10}}else{n=10}if((n|0)==10){n=0;Ji(8504,7e3,1859);o=1}if((d|0)!=(k|0)){p=e+(d<<3)|0;h[p>>3]=+h[p>>3]- +h[j+(d<<3)>>3]*l}m=m+1|0}i=b;return}function uh(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0.0;d=i;e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+8>>2]|0;j=c[e+72>>2]|0;k=c[e+128>>2]|0;l=c[e+132>>2]|0;m=c[e+136>>2]|0;n=c[e+152>>2]|0;o=c[e+156>>2]|0;p=c[e+160>>2]|0;q=c[e+180>>2]|0;r=c[e+192>>2]|0;s=c[e+196>>2]|0;t=c[e+200>>2]|0;u=c[e+212>>2]|0;if(1<=(m|0)){if((m|0)<=(b|0)){v=1}else{w=3}}else{w=3}if((w|0)==3){Ji(11792,7e3,1939);v=1}if(1<=(q|0)){if((q|0)<=(f|0)){x=1}else{w=6}}else{w=6}if((w|0)==6){Ji(11520,7e3,1940);x=1}if((c[e+124>>2]|0)>0){y=1}else{Ji(9064,7e3,1943);y=1}y=e+124|0;c[y>>2]=(c[y>>2]|0)-1;if((a[g+(c[j+(m<<2)>>2]|0)|0]|0)!=1){z=1}else{Ji(8744,7e3,1948);z=1}A=(a[k+(c[j+(m<<2)>>2]|0)|0]|0)!=0?1.0:0.0;B=A;C=A;z=1;while(1){if((z|0)>(b|0)){break}h[u+(z<<3)>>3]=0.0;z=z+1|0}y=1;while(1){if((y|0)>(n|0)){break}x=c[o+(y<<2)>>2]|0;if(1<=(x|0)){if((x|0)<=(f|0)){D=1}else{w=19}}else{w=19}if((w|0)==19){w=0;Ji(8504,7e3,1955);D=1}E=c[j+(b+x<<2)>>2]|0;if(1<=(E|0)){if((E|0)<=(b+f|0)){F=1}else{w=22}}else{w=22}if((w|0)==22){w=0;Ji(9888,7e3,1959);F=1}if((a[g+E|0]|0)!=5){G=1}else{Ji(8256,7e3,1960);G=1}if((a[k+E|0]|0)!=0){H=+h[p+(x<<3)>>3];C=C+H*H;if((E|0)<=(b|0)){x=u+(E<<3)|0;h[x>>3]=+h[x>>3]+H}else{x=c[e+48>>2]|0;v=c[e+52>>2]|0;I=c[e+56>>2]|0;J=c[x+(E-b+1<<2)>>2]|0;K=c[x+(E-b<<2)>>2]|0;while(1){if((K|0)>=(J|0)){break}x=u+(c[v+(K<<2)>>2]<<3)|0;h[x>>3]=+h[x>>3]-H*+h[I+(K<<3)>>3];K=K+1|0}}}y=y+1|0}if((c[e+84>>2]|0)!=0){L=1}else{Ji(9328,7e3,1982);L=1}Ad(c[e+88>>2]|0,u);A=+h[t+(m<<3)>>3];if(A!=0.0){M=1}else{Ji(8040,7e3,1988);M=1}y=1;while(1){if((y|0)>(r|0)){break}z=c[s+(y<<2)>>2]|0;if(1<=(z|0)){if((z|0)<=(b|0)){N=1}else{w=44}}else{w=44}if((w|0)==44){w=0;Ji(10368,7e3,1993);N=1}E=c[j+(z<<2)>>2]|0;if(1<=(E|0)){if((E|0)<=(b+f|0)){O=1}else{w=47}}else{w=47}if((w|0)==47){w=0;Ji(9888,7e3,1997);O=1}do{if((z|0)!=(m|0)){if((a[g+(c[j+(z<<2)>>2]|0)|0]|0)==1){if(+h[l+(z<<3)>>3]==1.0){P=1}else{Ji(7792,7e3,2005);P=1}break}H=+h[t+(z<<3)>>3]/A;Q=+h[l+(z<<3)>>3]+H*H*C+2.0*H*+h[u+(z<<3)>>3];R=((a[k+E|0]|0)!=0?1.0:0.0)+B*H*H;if(Q>=R){S=Q}else{S=R}h[l+(z<<3)>>3]=S;if(+h[l+(z<<3)>>3]<2.220446049250313e-16){h[l+(z<<3)>>3]=2.220446049250313e-16}}}while(0);y=y+1|0}if((a[g+(c[j+(b+q<<2)>>2]|0)|0]|0)==1){h[l+(m<<3)>>3]=1.0}else{h[l+(m<<3)>>3]=C/(A*A);if(+h[l+(m<<3)>>3]<2.220446049250313e-16){h[l+(m<<3)>>3]=2.220446049250313e-16}}E=c[j+(m<<2)>>2]|0;if((a[g+E|0]|0)!=5){i=d;return}if((a[k+E|0]|0)==0){i=d;return}a[k+E|0]=0;y=1;while(1){if((y|0)>(r|0)){break}z=c[s+(y<<2)>>2]|0;do{if((z|0)==(m|0)){if((a[g+(c[j+(b+q<<2)>>2]|0)|0]|0)==1){break}else{H=1.0/+h[t+(m<<3)>>3];w=77;break}}else{if((a[g+(c[j+(z<<2)>>2]|0)|0]|0)==1){break}else{H=+h[t+(z<<3)>>3]/+h[t+(m<<3)>>3];w=77;break}}}while(0);if((w|0)==77){w=0;E=l+(z<<3)|0;h[E>>3]=+h[E>>3]-H*H;if(+h[l+(z<<3)>>3]<2.220446049250313e-16){h[l+(z<<3)>>3]=2.220446049250313e-16}}y=y+1|0}i=d;return}function vh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+24|0;f=e|0;g=e+8|0;j=a;a=b;b=d;d=c[j>>2]|0;k=c[j+4>>2]|0;if(1<=(a|0)){if((a|0)<=(d|0)){l=1}else{m=3}}else{m=3}if((m|0)==3){Ji(10368,7e3,580);l=1}if(1<=(b|0)){if((b|0)<=(d+k|0)){n=1}else{m=6}}else{m=6}if((m|0)==6){Ji(9888,7e3,581);n=1}if((b|0)<=(d|0)){c[f+4>>2]=b;h[g+8>>3]=1.0;if((c[j+84>>2]|0)!=0){o=1}else{Ji(9328,7e3,589);o=1}p=Cd(c[j+88>>2]|0,a,0,1,f|0,g|0)|0;q=p;r=(q|0)==0;s=r&1;t=j;u=t+84|0;c[u>>2]=s;v=p;i=e;return v|0}g=c[j+48>>2]|0;f=c[j+52>>2]|0;o=c[j+56>>2]|0;n=c[j+204>>2]|0;m=c[g+(b-d<<2)>>2]|0;k=c[g+(b-d+1<<2)>>2]|0;d=0;b=m;while(1){if((b|0)>=(k|0)){break}g=d+1|0;d=g;h[n+(g<<3)>>3]=-0.0- +h[o+(b<<3)>>3];b=b+1|0}if((c[j+84>>2]|0)!=0){w=1}else{Ji(9328,7e3,604);w=1}p=Cd(c[j+88>>2]|0,a,0,d,f+(m-1<<2)|0,n)|0;q=p;r=(q|0)==0;s=r&1;t=j;u=t+84|0;c[u>>2]=s;v=p;i=e;return v|0}function wh(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+8>>2]|0;j=c[e+72>>2]|0;k=c[e+76>>2]|0;l=c[e+80>>2]|0;m=c[e+136>>2]|0;n=+h[e+144>>3];o=c[e+180>>2]|0;if(1<=(m|0)){if((m|0)<=(b|0)){p=1}else{q=3}}else{q=3}if((q|0)==3){Ji(11792,7e3,2171);p=1}if(1<=(o|0)){if((o|0)<=(f|0)){r=1}else{q=6}}else{q=6}if((q|0)==6){Ji(11520,7e3,2172);r=1}r=c[j+(m<<2)>>2]|0;c[j+(m<<2)>>2]=c[j+(b+o<<2)>>2];c[j+(b+o<<2)>>2]=r;c[k+(c[j+(m<<2)>>2]<<2)>>2]=m;c[k+(c[j+(b+o<<2)>>2]<<2)>>2]=b+o;if((a[g+r|0]|0)==5){a[l+o|0]=5;i=d;return}if(n>0.0){do{if((a[g+r|0]|0)==2){s=1}else{if((a[g+r|0]|0)==4){s=1;break}Ji(11216,7e3,2184);s=1}}while(0);a[l+o|0]=2}else{do{if((a[g+r|0]|0)==3){t=1}else{if((a[g+r|0]|0)==4){t=1;break}Ji(10744,7e3,2191);t=1}}while(0);a[l+o|0]=3}i=d;return}function xh(a){a=a|0;var b=0,d=0;b=i;d=a;Bi(c[d+8>>2]|0);Bi(c[d+12>>2]|0);Bi(c[d+16>>2]|0);Bi(c[d+20>>2]|0);Bi(c[d+24>>2]|0);Bi(c[d+28>>2]|0);Bi(c[d+32>>2]|0);Bi(c[d+36>>2]|0);Bi(c[d+48>>2]|0);Bi(c[d+52>>2]|0);Bi(c[d+56>>2]|0);Bi(c[d+60>>2]|0);Bi(c[d+64>>2]|0);Bi(c[d+68>>2]|0);Bi(c[d+72>>2]|0);Bi(c[d+76>>2]|0);Bi(c[d+80>>2]|0);Bi(c[d+116>>2]|0);Bi(c[d+120>>2]|0);Bi(c[d+128>>2]|0);Bi(c[d+132>>2]|0);Bi(c[d+156>>2]|0);Bi(c[d+160>>2]|0);Bi(c[d+196>>2]|0);Bi(c[d+200>>2]|0);Bi(c[d+204>>2]|0);Bi(c[d+208>>2]|0);Bi(c[d+212>>2]|0);Bi(c[d+216>>2]|0);Bi(d);i=b;return}function yh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0;e=i;f=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+12>>2]|0;k=c[f+16>>2]|0;l=c[f+72>>2]|0;m=c[f+80>>2]|0;if(1<=(b|0)){if((b|0)<=(g|0)){n=1}else{o=3}}else{o=3}if((o|0)==3){Ji(8504,7e3,772);n=1}n=c[l+(d+b<<2)>>2]|0;if(1<=(n|0)){if((n|0)<=(d+g|0)){p=1}else{o=6}}else{o=6}if((o|0)==6){Ji(9888,7e3,776);p=1}p=a[m+b|0]|0;if((p|0)==2){q=+h[j+(n<<3)>>3];r=q;i=e;return+r}else if((p|0)==3){q=+h[k+(n<<3)>>3];r=q;i=e;return+r}else if((p|0)==4){q=0.0;r=q;i=e;return+r}else if((p|0)==5){q=+h[j+(n<<3)>>3];r=q;i=e;return+r}else{if((m|0)!=(m|0)){s=1}else{Ji(7240,7e3,792);s=1}r=q;i=e;return+r}return 0.0}function zh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0;e=i;f=a;a=d;d=c[f>>2]|0;g=c[f+204>>2]|0;Ah(f,b,a,c[f+204>>2]|0);if((c[f+84>>2]|0)!=0){j=1}else{Ji(9328,7e3,675);j=1}Ad(c[f+88>>2]|0,g);f=1;while(1){if((f|0)>(d|0)){break}j=a+(f<<3)|0;h[j>>3]=+h[j>>3]+ +h[g+(f<<3)>>3];f=f+1|0}i=e;return}function Ah(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0;f=i;g=a;a=d;d=e;e=c[g>>2]|0;j=c[g+4>>2]|0;k=c[g+48>>2]|0;l=c[g+52>>2]|0;m=c[g+56>>2]|0;n=c[g+72>>2]|0;Ku(d+8|0,b+8|0,e<<3)|0;b=1;while(1){if((b|0)>(e|0)){break}o=+h[a+(b<<3)>>3];if(!(o==0.0)){g=c[n+(b<<2)>>2]|0;if(1<=(g|0)){if((g|0)<=(e+j|0)){p=1}else{q=7}}else{q=7}if((q|0)==7){q=0;Ji(9888,7e3,641);p=1}if((g|0)<=(e|0)){r=d+(g<<3)|0;h[r>>3]=+h[r>>3]-o}else{r=c[k+(g-e+1<<2)>>2]|0;s=c[k+(g-e<<2)>>2]|0;while(1){if((s|0)>=(r|0)){break}g=d+(c[l+(s<<2)>>2]<<3)|0;h[g>>3]=+h[g>>3]+ +h[m+(s<<3)>>3]*o;s=s+1|0}}}b=b+1|0}i=f;return}



function Fp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=Kc[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=fo(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function Gp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=Kc[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=14}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=Kc[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=14;break}else{if(h){n=d;break}else{l=16;break}}}}while(0);if((l|0)==14){if(h){l=16}else{n=0}}if((l|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){o=Kc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{o=c[d>>2]|0}if(!((Ic[c[(c[f>>2]|0)+52>>2]&127](f,o,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}o=c[g>>2]|0;f=o+12|0;d=c[f>>2]|0;if((d|0)==(c[o+16>>2]|0)){Kc[c[(c[o>>2]|0)+40>>2]&255](o)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){p=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){q=Kc[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{q=c[f>>2]|0}if((q|0)==-1){c[g>>2]=0;p=1;break}else{p=(c[g>>2]|0)==0;break}}}while(0);do{if((n|0)==0){l=38}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){r=Kc[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{r=c[g>>2]|0}if((r|0)==-1){c[k>>2]=0;l=38;break}if(!p){break}i=a;return}}while(0);do{if((l|0)==38){if(p){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function Hp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=Kc[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=14}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=Kc[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=14;break}else{if(j){o=b;break}else{m=16;break}}}}while(0);if((m|0)==14){if(j){m=16}else{o=0}}if((m|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=Kc[c[(c[j>>2]|0)+36>>2]&255](j)|0}else{q=c[b>>2]|0}b=e;if(!(Ic[c[(c[b>>2]|0)+12>>2]&127](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(Ic[c[(c[j>>2]|0)+52>>2]&127](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){Kc[c[(c[q>>2]|0)+40>>2]&255](q)|0;r=n;s=f;t=o;u=o}else{c[a>>2]=k+4;r=n;s=f;t=o;u=o}while(1){v=r-48|0;o=s-1|0;f=c[h>>2]|0;do{if((f|0)==0){w=1}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){x=Kc[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{x=c[n>>2]|0}if((x|0)==-1){c[h>>2]=0;w=1;break}else{w=(c[h>>2]|0)==0;break}}}while(0);do{if((t|0)==0){y=1;z=0;A=u}else{f=c[t+12>>2]|0;if((f|0)==(c[t+16>>2]|0)){B=Kc[c[(c[t>>2]|0)+36>>2]&255](t)|0}else{B=c[f>>2]|0}if((B|0)==-1){c[l>>2]=0;y=1;z=0;A=0;break}else{y=(u|0)==0;z=u;A=u;break}}}while(0);C=c[h>>2]|0;if(!((w^y)&(o|0)>0)){break}f=c[C+12>>2]|0;if((f|0)==(c[C+16>>2]|0)){D=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{D=c[f>>2]|0}if(!(Ic[c[(c[b>>2]|0)+12>>2]&127](e,2048,D)|0)){p=v;m=63;break}f=((Ic[c[(c[j>>2]|0)+52>>2]&127](e,D,0)|0)<<24>>24)+(v*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){Kc[c[(c[n>>2]|0)+40>>2]&255](n)|0;r=f;s=o;t=z;u=A;continue}else{c[k>>2]=a+4;r=f;s=o;t=z;u=A;continue}}if((m|0)==63){i=g;return p|0}do{if((C|0)==0){E=1}else{u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){F=Kc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{F=c[u>>2]|0}if((F|0)==-1){c[h>>2]=0;E=1;break}else{E=(c[h>>2]|0)==0;break}}}while(0);do{if((A|0)==0){m=60}else{h=c[A+12>>2]|0;if((h|0)==(c[A+16>>2]|0)){G=Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[l>>2]=0;m=60;break}if(E){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==60){if(E){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function Ip(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+8|0;e=c[d>>2]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((e|0)==(c[8226]|0)){f=b|0;wl(f);g=b;tu(g);return}qb(c[d>>2]|0);f=b|0;wl(f);g=b;tu(g);return}function Jp(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((e|0)==(c[8226]|0)){f=b|0;wl(f);return}qb(c[d>>2]|0);f=b|0;wl(f);return}function Kp(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(!(k<<24>>24==0)){a[o]=k;a[p]=j}j=hc(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;i=g;return}else{s=m;t=l;u=l}while(1){l=a[s]|0;do{if((t|0)==0){v=0;w=u}else{m=t+24|0;j=c[m>>2]|0;if((j|0)==(c[t+28>>2]|0)){e=(Hc[c[(c[t>>2]|0)+52>>2]&127](t,l&255)|0)==-1;v=e?0:t;w=e?0:u;break}else{c[m>>2]=j+1;a[j]=l;v=t;w=u;break}}}while(0);l=s+1|0;if((l|0)==(d|0)){q=w;break}else{s=l;t=v;u=w}}r=b|0;c[r>>2]=q;i=g;return}function Lp(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+8|0;e=c[d>>2]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((e|0)==(c[8226]|0)){f=b|0;wl(f);g=b;tu(g);return}qb(c[d>>2]|0);f=b|0;wl(f);g=b;tu(g);return}function Mp(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((e|0)==(c[8226]|0)){f=b|0;wl(f);return}qb(c[d>>2]|0);f=b|0;wl(f);return}function Np(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;Op(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;i=f;return}else{o=l;p=k;q=k}while(1){k=c[o>>2]|0;if((p|0)==0){r=0;s=q}else{l=p+24|0;d=c[l>>2]|0;if((d|0)==(c[p+28>>2]|0)){t=Hc[c[(c[p>>2]|0)+52>>2]&127](p,k)|0}else{c[l>>2]=d+4;c[d>>2]=k;t=k}k=(t|0)==-1;r=k?0:p;s=k?0:q}k=o+4|0;if((k|0)==(j|0)){m=s;break}else{o=k;p=r;q=s}}n=a|0;c[n>>2]=m;i=f;return}function Op(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(!(h<<24>>24==0)){a[p]=h;a[q]=g}g=b|0;hc(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=bc(c[g>>2]|0)|0;g=Jt(d,m,n,l)|0;if((f|0)!=0){bc(f|0)|0}if((g|0)==-1){Kq(7984)}else{c[e>>2]=d+(g<<2);i=j;return}}function Pp(a){a=a|0;wl(a|0);tu(a);return}function Qp(a){a=a|0;wl(a|0);return}function Rp(a){a=a|0;return 127}function Sp(a){a=a|0;return 127}function Tp(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function Up(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function Vp(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function Wp(a,b){a=a|0;b=b|0;Wl(a,1,45);return}function Xp(a){a=a|0;return 0}function Yp(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Zp(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function _p(a){a=a|0;wl(a|0);tu(a);return}function $p(a){a=a|0;wl(a|0);return}function aq(a){a=a|0;return 127}function bq(a){a=a|0;return 127}function cq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function dq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function eq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function fq(a,b){a=a|0;b=b|0;Wl(a,1,45);return}function gq(a){a=a|0;return 0}function hq(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function iq(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function jq(a){a=a|0;wl(a|0);tu(a);return}function kq(a){a=a|0;wl(a|0);return}function lq(a){a=a|0;return 2147483647}function mq(a){a=a|0;return 2147483647}function nq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function oq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function pq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function qq(a,b){a=a|0;b=b|0;fm(a,1,45);return}function rq(a){a=a|0;return 0}function sq(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function tq(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function uq(a){a=a|0;wl(a|0);tu(a);return}function vq(a){a=a|0;wl(a|0);return}function wq(a){a=a|0;return 2147483647}function xq(a){a=a|0;return 2147483647}function yq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function zq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function Aq(a,b){a=a|0;b=b|0;Nu(a|0,0,12)|0;return}function Bq(a,b){a=a|0;b=b|0;fm(a,1,45);return}function Cq(a){a=a|0;return 0}function Dq(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Eq(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Fq(a){a=a|0;wl(a|0);tu(a);return}function Gq(a){a=a|0;wl(a|0);return}function Hq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=204;w=m+100|0;pm(p,h);m=p|0;x=c[m>>2]|0;if(!((c[8584]|0)==-1)){c[l>>2]=34336;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34336,l,138)}l=(c[8585]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(Jq(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Sc[c[(c[z>>2]|0)+32>>2]&63](A,23024,23034,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>98){H=mu(G+2|0)|0;if((H|0)!=0){I=H;J=H;break}yu();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+10|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((a[N]|0)==(a[M]|0)){O=N;break}else{N=N+1|0}}a[L]=a[23024+(O-H)|0]|0;N=M+1|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=ec(D|0,17880,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}nu(J);break}M=tc(8)|0;El(M,16664);Hb(M|0,29056,64)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){R=z;break}if(!((Kc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1)){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){S=45}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(A){break}else{S=47;break}}if((Kc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[B>>2]=0;S=45;break}else{if(A){break}else{S=47;break}}}}while(0);if((S|0)==45){if(A){S=47}}if((S|0)==47){c[j>>2]=c[j>>2]|2}c[b>>2]=R;yl(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){i=d;return}Fc[c[v>>2]&511](B);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function Iq(a){a=a|0;return}function Jq(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0;q=i;i=i+520|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=q+408|0;u=q+416|0;v=q+424|0;w=q+440|0;x=q+456|0;y=q+472|0;z=q+488|0;A=q+504|0;B=q+512|0;C=r|0;D=v;Nu(D|0,0,12)|0;E=w;Nu(E|0,0,12)|0;F=x;Nu(F|0,0,12)|0;G=y;Nu(G|0,0,12)|0;H=z;Nu(H|0,0,12)|0;Nq(g,h,s,t,u,v,w,x,y,A);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=m+8|0;m=y+1|0;I=y+4|0;J=y+8|0;K=x+1|0;L=x+4|0;M=x+8|0;N=(j&512|0)!=0;j=w+1|0;O=w+8|0;P=w+4|0;Q=z;R=Q+1|0;S=z+8|0;T=z+4|0;U=s+3|0;V=v+4|0;W=n+4|0;n=p;p=204;X=C;Y=C;C=r+400|0;r=0;Z=0;a:while(1){_=c[g>>2]|0;do{if((_|0)==0){$=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){$=_;break}if((Kc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;$=0;break}else{$=c[g>>2]|0;break}}}while(0);_=($|0)==0;aa=c[e>>2]|0;do{if((aa|0)==0){ba=15}else{if((c[aa+12>>2]|0)!=(c[aa+16>>2]|0)){if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}if((Kc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)==-1){c[e>>2]=0;ba=15;break}else{if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}}}while(0);if((ba|0)==15){ba=0;if(_){da=p;ea=X;fa=Y;ga=Z;ba=310;break}else{ca=0}}b:do{switch(a[s+r|0]|0){case 1:{if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}aa=c[g>>2]|0;ha=c[aa+12>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){ia=(Kc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{ia=a[ha]|0}if(ia<<24>>24<0){ba=41;break a}if((b[(c[f>>2]|0)+(ia<<24>>24<<1)>>1]&8192)==0){ba=41;break a}ha=c[g>>2]|0;aa=ha+12|0;ja=c[aa>>2]|0;if((ja|0)==(c[ha+16>>2]|0)){ka=(Kc[c[(c[ha>>2]|0)+40>>2]&255](ha)|0)&255}else{c[aa>>2]=ja+1;ka=a[ja]|0}am(z,ka);ba=42;break};case 0:{ba=42;break};case 3:{ja=a[F]|0;aa=(ja&1)==0;if(aa){la=(ja&255)>>>1}else{la=c[L>>2]|0}ha=a[G]|0;ma=(ha&1)==0;if(ma){na=(ha&255)>>>1}else{na=c[I>>2]|0}if((la|0)==(-na|0)){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}if(aa){ua=(ja&255)>>>1}else{ua=c[L>>2]|0}do{if((ua|0)!=0){if(ma){va=(ha&255)>>>1}else{va=c[I>>2]|0}if((va|0)==0){break}wa=c[g>>2]|0;xa=c[wa+12>>2]|0;ya=c[wa+16>>2]|0;if((xa|0)==(ya|0)){za=(Kc[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255;Aa=c[g>>2]|0;Ba=za;Ca=a[F]|0;Da=Aa;Ea=c[Aa+12>>2]|0;Fa=c[Aa+16>>2]|0}else{Ba=a[xa]|0;Ca=ja;Da=wa;Ea=xa;Fa=ya}ya=Da+12|0;xa=(Ea|0)==(Fa|0);if(Ba<<24>>24==(a[(Ca&1)==0?K:c[M>>2]|0]|0)){if(xa){Kc[c[(c[Da>>2]|0)+40>>2]&255](Da)|0}else{c[ya>>2]=Ea+1}ya=a[F]|0;if((ya&1)==0){Ga=(ya&255)>>>1}else{Ga=c[L>>2]|0}oa=Ga>>>0>1>>>0?x:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}if(xa){Ha=(Kc[c[(c[Da>>2]|0)+36>>2]&255](Da)|0)&255}else{Ha=a[Ea]|0}if(!(Ha<<24>>24==(a[(a[G]&1)==0?m:c[J>>2]|0]|0))){ba=136;break a}xa=c[g>>2]|0;ya=xa+12|0;wa=c[ya>>2]|0;if((wa|0)==(c[xa+16>>2]|0)){Kc[c[(c[xa>>2]|0)+40>>2]&255](xa)|0}else{c[ya>>2]=wa+1}a[l]=1;wa=a[G]|0;if((wa&1)==0){Ia=(wa&255)>>>1}else{Ia=c[I>>2]|0}oa=Ia>>>0>1>>>0?y:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}}while(0);if(aa){Ja=(ja&255)>>>1}else{Ja=c[L>>2]|0}ma=c[g>>2]|0;wa=c[ma+12>>2]|0;ya=(wa|0)==(c[ma+16>>2]|0);if((Ja|0)==0){if(ya){xa=(Kc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255;Ka=xa;La=a[G]|0}else{Ka=a[wa]|0;La=ha}if(!(Ka<<24>>24==(a[(La&1)==0?m:c[J>>2]|0]|0))){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}xa=c[g>>2]|0;Aa=xa+12|0;za=c[Aa>>2]|0;if((za|0)==(c[xa+16>>2]|0)){Kc[c[(c[xa>>2]|0)+40>>2]&255](xa)|0}else{c[Aa>>2]=za+1}a[l]=1;za=a[G]|0;if((za&1)==0){Ma=(za&255)>>>1}else{Ma=c[I>>2]|0}oa=Ma>>>0>1>>>0?y:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}if(ya){ya=(Kc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255;Na=ya;Oa=a[F]|0}else{Na=a[wa]|0;Oa=ja}if(!(Na<<24>>24==(a[(Oa&1)==0?K:c[M>>2]|0]|0))){a[l]=1;oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}wa=c[g>>2]|0;ya=wa+12|0;ma=c[ya>>2]|0;if((ma|0)==(c[wa+16>>2]|0)){Kc[c[(c[wa>>2]|0)+40>>2]&255](wa)|0}else{c[ya>>2]=ma+1}ma=a[F]|0;if((ma&1)==0){Pa=(ma&255)>>>1}else{Pa=c[L>>2]|0}oa=Pa>>>0>1>>>0?x:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break};case 2:{if(!((Z|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Qa=(a[U]|0)!=0}else{Qa=0}if(!(N|Qa)){oa=0;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}}ma=a[E]|0;ya=(ma&1)==0;wa=ya?j:c[O>>2]|0;c:do{if((r|0)==0){Ra=wa;Sa=ma;Ta=ca;Ua=ca}else{if(!((d[s+(r-1)|0]|0)>>>0<2>>>0)){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break}za=wa+(ya?(ma&255)>>>1:c[P>>2]|0)|0;Aa=wa;while(1){if((Aa|0)==(za|0)){Va=za;break}xa=a[Aa]|0;if(xa<<24>>24<0){Va=Aa;break}if((b[(c[f>>2]|0)+(xa<<24>>24<<1)>>1]&8192)==0){Va=Aa;break}else{Aa=Aa+1|0}}Aa=Va-wa|0;za=a[H]|0;xa=(za&1)==0;if(xa){Wa=(za&255)>>>1}else{Wa=c[T>>2]|0}if(Aa>>>0>Wa>>>0){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break}if(xa){xa=(za&255)>>>1;Xa=xa;Ya=R;Za=xa-Aa+(Q+1)|0}else{xa=c[S>>2]|0;za=c[T>>2]|0;Xa=za;Ya=xa;Za=xa+(za-Aa)|0}Aa=Ya+Xa|0;if((Za|0)==(Aa|0)){Ra=Va;Sa=ma;Ta=ca;Ua=ca;break}else{_a=Za;$a=wa}while(1){if((a[_a]|0)!=(a[$a]|0)){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break c}za=_a+1|0;if((za|0)==(Aa|0)){Ra=Va;Sa=ma;Ta=ca;Ua=ca;break}else{_a=za;$a=$a+1|0}}}}while(0);d:while(1){if((Sa&1)==0){ab=(Sa&255)>>>1;bb=j}else{ab=c[P>>2]|0;bb=c[O>>2]|0}if((Ra|0)==(bb+ab|0)){break}ma=c[g>>2]|0;do{if((ma|0)==0){cb=0}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){cb=ma;break}if((Kc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[g>>2]=0;cb=0;break}else{cb=c[g>>2]|0;break}}}while(0);ma=(cb|0)==0;do{if((Ta|0)==0){db=Ua;ba=173}else{if((c[Ta+12>>2]|0)!=(c[Ta+16>>2]|0)){if(ma){eb=Ta;fb=Ua;break}else{break d}}if((Kc[c[(c[Ta>>2]|0)+36>>2]&255](Ta)|0)==-1){c[e>>2]=0;db=0;ba=173;break}else{if(ma^(Ua|0)==0){eb=Ua;fb=Ua;break}else{break d}}}}while(0);if((ba|0)==173){ba=0;if(ma){break}else{eb=0;fb=db}}wa=c[g>>2]|0;ya=c[wa+12>>2]|0;if((ya|0)==(c[wa+16>>2]|0)){gb=(Kc[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255}else{gb=a[ya]|0}if(!(gb<<24>>24==(a[Ra]|0))){break}ya=c[g>>2]|0;wa=ya+12|0;ja=c[wa>>2]|0;if((ja|0)==(c[ya+16>>2]|0)){Kc[c[(c[ya>>2]|0)+40>>2]&255](ya)|0}else{c[wa>>2]=ja+1}Ra=Ra+1|0;Sa=a[E]|0;Ta=eb;Ua=fb}if(!N){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}ja=a[E]|0;if((ja&1)==0){hb=(ja&255)>>>1;ib=j}else{hb=c[P>>2]|0;ib=c[O>>2]|0}if((Ra|0)==(ib+hb|0)){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n}else{ba=189;break a}break};case 4:{ja=0;wa=C;ya=Y;ha=X;aa=p;Aa=n;e:while(1){za=c[g>>2]|0;do{if((za|0)==0){jb=0}else{if((c[za+12>>2]|0)!=(c[za+16>>2]|0)){jb=za;break}if((Kc[c[(c[za>>2]|0)+36>>2]&255](za)|0)==-1){c[g>>2]=0;jb=0;break}else{jb=c[g>>2]|0;break}}}while(0);za=(jb|0)==0;ma=c[e>>2]|0;do{if((ma|0)==0){ba=202}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){if(za){break}else{break e}}if((Kc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[e>>2]=0;ba=202;break}else{if(za){break}else{break e}}}}while(0);if((ba|0)==202){ba=0;if(za){break}}ma=c[g>>2]|0;xa=c[ma+12>>2]|0;if((xa|0)==(c[ma+16>>2]|0)){kb=(Kc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255}else{kb=a[xa]|0}do{if(kb<<24>>24<0){ba=221}else{if((b[(c[f>>2]|0)+(kb<<24>>24<<1)>>1]&2048)==0){ba=221;break}xa=c[o>>2]|0;if((xa|0)==(Aa|0)){ma=(c[W>>2]|0)!=204;lb=c[h>>2]|0;mb=Aa-lb|0;nb=mb>>>0<2147483647>>>0?mb<<1:-1;ob=ou(ma?lb:0,nb)|0;if((ob|0)==0){yu()}do{if(ma){c[h>>2]=ob;pb=ob}else{lb=c[h>>2]|0;c[h>>2]=ob;if((lb|0)==0){pb=ob;break}Fc[c[W>>2]&511](lb);pb=c[h>>2]|0}}while(0);c[W>>2]=122;ob=pb+mb|0;c[o>>2]=ob;qb=(c[h>>2]|0)+nb|0;rb=ob}else{qb=Aa;rb=xa}c[o>>2]=rb+1;a[rb]=kb;sb=ja+1|0;tb=wa;ub=ya;vb=ha;wb=aa;xb=qb}}while(0);if((ba|0)==221){ba=0;za=a[D]|0;if((za&1)==0){yb=(za&255)>>>1}else{yb=c[V>>2]|0}if((yb|0)==0|(ja|0)==0){break}if(!(kb<<24>>24==(a[u]|0))){break}if((ya|0)==(wa|0)){za=ya-ha|0;ob=za>>>0<2147483647>>>0?za<<1:-1;if((aa|0)==204){zb=0}else{zb=ha}ma=ou(zb,ob)|0;lb=ma;if((ma|0)==0){yu()}Ab=lb+(ob>>>2<<2)|0;Bb=lb+(za>>2<<2)|0;Cb=lb;Db=122}else{Ab=wa;Bb=ya;Cb=ha;Db=aa}c[Bb>>2]=ja;sb=0;tb=Ab;ub=Bb+4|0;vb=Cb;wb=Db;xb=Aa}lb=c[g>>2]|0;za=lb+12|0;ob=c[za>>2]|0;if((ob|0)==(c[lb+16>>2]|0)){Kc[c[(c[lb>>2]|0)+40>>2]&255](lb)|0;ja=sb;wa=tb;ya=ub;ha=vb;aa=wb;Aa=xb;continue}else{c[za>>2]=ob+1;ja=sb;wa=tb;ya=ub;ha=vb;aa=wb;Aa=xb;continue}}if((ha|0)==(ya|0)|(ja|0)==0){Eb=wa;Fb=ya;Gb=ha;Hb=aa}else{if((ya|0)==(wa|0)){ob=ya-ha|0;za=ob>>>0<2147483647>>>0?ob<<1:-1;if((aa|0)==204){Ib=0}else{Ib=ha}lb=ou(Ib,za)|0;ma=lb;if((lb|0)==0){yu()}Jb=ma+(za>>>2<<2)|0;Kb=ma+(ob>>2<<2)|0;Lb=ma;Mb=122}else{Jb=wa;Kb=ya;Lb=ha;Mb=aa}c[Kb>>2]=ja;Eb=Jb;Fb=Kb+4|0;Gb=Lb;Hb=Mb}if((c[A>>2]|0)>0){ma=c[g>>2]|0;do{if((ma|0)==0){Nb=0}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){Nb=ma;break}if((Kc[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[g>>2]=0;Nb=0;break}else{Nb=c[g>>2]|0;break}}}while(0);ma=(Nb|0)==0;ja=c[e>>2]|0;do{if((ja|0)==0){ba=257}else{if((c[ja+12>>2]|0)!=(c[ja+16>>2]|0)){if(ma){Ob=ja;break}else{ba=264;break a}}if((Kc[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)==-1){c[e>>2]=0;ba=257;break}else{if(ma){Ob=ja;break}else{ba=264;break a}}}}while(0);if((ba|0)==257){ba=0;if(ma){ba=264;break a}else{Ob=0}}ja=c[g>>2]|0;aa=c[ja+12>>2]|0;if((aa|0)==(c[ja+16>>2]|0)){Pb=(Kc[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)&255}else{Pb=a[aa]|0}if(!(Pb<<24>>24==(a[t]|0))){ba=264;break a}aa=c[g>>2]|0;ja=aa+12|0;ha=c[ja>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){Kc[c[(c[aa>>2]|0)+40>>2]&255](aa)|0;Qb=Aa;Rb=Ob;Sb=Ob}else{c[ja>>2]=ha+1;Qb=Aa;Rb=Ob;Sb=Ob}while(1){ha=c[g>>2]|0;do{if((ha|0)==0){Tb=0}else{if((c[ha+12>>2]|0)!=(c[ha+16>>2]|0)){Tb=ha;break}if((Kc[c[(c[ha>>2]|0)+36>>2]&255](ha)|0)==-1){c[g>>2]=0;Tb=0;break}else{Tb=c[g>>2]|0;break}}}while(0);ha=(Tb|0)==0;do{if((Rb|0)==0){Ub=Sb;ba=280}else{if((c[Rb+12>>2]|0)!=(c[Rb+16>>2]|0)){if(ha){Vb=Sb;Wb=Rb;break}else{ba=288;break a}}if((Kc[c[(c[Rb>>2]|0)+36>>2]&255](Rb)|0)==-1){c[e>>2]=0;Ub=0;ba=280;break}else{if(ha^(Sb|0)==0){Vb=Sb;Wb=Sb;break}else{ba=288;break a}}}}while(0);if((ba|0)==280){ba=0;if(ha){ba=288;break a}else{Vb=Ub;Wb=0}}ja=c[g>>2]|0;aa=c[ja+12>>2]|0;if((aa|0)==(c[ja+16>>2]|0)){Xb=(Kc[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)&255}else{Xb=a[aa]|0}if(Xb<<24>>24<0){ba=288;break a}if((b[(c[f>>2]|0)+(Xb<<24>>24<<1)>>1]&2048)==0){ba=288;break a}aa=c[o>>2]|0;if((aa|0)==(Qb|0)){ja=(c[W>>2]|0)!=204;ya=c[h>>2]|0;wa=Qb-ya|0;ob=wa>>>0<2147483647>>>0?wa<<1:-1;za=ou(ja?ya:0,ob)|0;if((za|0)==0){yu()}do{if(ja){c[h>>2]=za;Yb=za}else{ya=c[h>>2]|0;c[h>>2]=za;if((ya|0)==0){Yb=za;break}Fc[c[W>>2]&511](ya);Yb=c[h>>2]|0}}while(0);c[W>>2]=122;za=Yb+wa|0;c[o>>2]=za;Zb=(c[h>>2]|0)+ob|0;_b=za}else{Zb=Qb;_b=aa}za=c[g>>2]|0;ja=c[za+12>>2]|0;if((ja|0)==(c[za+16>>2]|0)){ha=(Kc[c[(c[za>>2]|0)+36>>2]&255](za)|0)&255;$b=ha;ac=c[o>>2]|0}else{$b=a[ja]|0;ac=_b}c[o>>2]=ac+1;a[ac]=$b;ja=(c[A>>2]|0)-1|0;c[A>>2]=ja;ha=c[g>>2]|0;za=ha+12|0;ya=c[za>>2]|0;if((ya|0)==(c[ha+16>>2]|0)){Kc[c[(c[ha>>2]|0)+40>>2]&255](ha)|0}else{c[za>>2]=ya+1}if((ja|0)>0){Qb=Zb;Rb=Wb;Sb=Vb}else{bc=Zb;break}}}else{bc=Aa}if((c[o>>2]|0)==(c[h>>2]|0)){ba=308;break a}else{oa=Z;pa=Eb;qa=Fb;ra=Gb;sa=Hb;ta=bc}break};default:{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n}}}while(0);f:do{if((ba|0)==42){ba=0;if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}else{cc=ca;dc=ca}while(1){_=c[g>>2]|0;do{if((_|0)==0){ec=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){ec=_;break}if((Kc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;ec=0;break}else{ec=c[g>>2]|0;break}}}while(0);_=(ec|0)==0;do{if((cc|0)==0){fc=dc;ba=55}else{if((c[cc+12>>2]|0)!=(c[cc+16>>2]|0)){if(_){gc=cc;hc=dc;break}else{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}}if((Kc[c[(c[cc>>2]|0)+36>>2]&255](cc)|0)==-1){c[e>>2]=0;fc=0;ba=55;break}else{if(_^(dc|0)==0){gc=dc;hc=dc;break}else{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}}}}while(0);if((ba|0)==55){ba=0;if(_){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}else{gc=0;hc=fc}}aa=c[g>>2]|0;ob=c[aa+12>>2]|0;if((ob|0)==(c[aa+16>>2]|0)){ic=(Kc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{ic=a[ob]|0}if(ic<<24>>24<0){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}if((b[(c[f>>2]|0)+(ic<<24>>24<<1)>>1]&8192)==0){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}ob=c[g>>2]|0;aa=ob+12|0;wa=c[aa>>2]|0;if((wa|0)==(c[ob+16>>2]|0)){jc=(Kc[c[(c[ob>>2]|0)+40>>2]&255](ob)|0)&255}else{c[aa>>2]=wa+1;jc=a[wa]|0}am(z,jc);cc=gc;dc=hc}}}while(0);Aa=r+1|0;if(Aa>>>0<4>>>0){n=ta;p=sa;X=ra;Y=qa;C=pa;r=Aa;Z=oa}else{da=sa;ea=ra;fa=qa;ga=oa;ba=310;break}}g:do{if((ba|0)==41){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==136){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==189){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==264){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==288){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==308){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==310){h:do{if((ga|0)!=0){oa=ga;qa=ga+1|0;ra=ga+8|0;sa=ga+4|0;Z=1;i:while(1){r=a[oa]|0;if((r&1)==0){nc=(r&255)>>>1}else{nc=c[sa>>2]|0}if(!(Z>>>0<nc>>>0)){break h}r=c[g>>2]|0;do{if((r|0)==0){oc=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){oc=r;break}if((Kc[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[g>>2]=0;oc=0;break}else{oc=c[g>>2]|0;break}}}while(0);r=(oc|0)==0;_=c[e>>2]|0;do{if((_|0)==0){ba=328}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){if(r){break}else{break i}}if((Kc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[e>>2]=0;ba=328;break}else{if(r){break}else{break i}}}}while(0);if((ba|0)==328){ba=0;if(r){break}}_=c[g>>2]|0;pa=c[_+12>>2]|0;if((pa|0)==(c[_+16>>2]|0)){pc=(Kc[c[(c[_>>2]|0)+36>>2]&255](_)|0)&255}else{pc=a[pa]|0}if((a[oa]&1)==0){qc=qa}else{qc=c[ra>>2]|0}if(!(pc<<24>>24==(a[qc+Z|0]|0))){break}pa=Z+1|0;_=c[g>>2]|0;C=_+12|0;Y=c[C>>2]|0;if((Y|0)==(c[_+16>>2]|0)){Kc[c[(c[_>>2]|0)+40>>2]&255](_)|0;Z=pa;continue}else{c[C>>2]=Y+1;Z=pa;continue}}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da;break g}}while(0);if((ea|0)==(fa|0)){kc=1;lc=fa;mc=da;break}c[B>>2]=0;Oq(v,ea,fa,B);if((c[B>>2]|0)==0){kc=1;lc=ea;mc=da;break}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da}}while(0);Xl(z);Xl(y);Xl(x);Xl(w);Xl(v);if((lc|0)==0){i=q;return kc|0}Fc[mc&511](lc);i=q;return kc|0}function Kq(a){a=a|0;var b=0;b=tc(8)|0;El(b,a);Hb(b|0,29056,64)}function Lq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=204;u=m+100|0;pm(p,h);m=p|0;v=c[m>>2]|0;if(!((c[8584]|0)==-1)){c[l>>2]=34336;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34336,l,138)}l=(c[8585]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(Jq(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){am(k,Hc[c[(c[B>>2]|0)+28>>2]&127](y,45)|0)}x=Hc[c[(c[B>>2]|0)+28>>2]&127](y,48)|0;y=c[o>>2]|0;B=y-1|0;C=c[s>>2]|0;while(1){if(!(C>>>0<B>>>0)){break}if((a[C]|0)==x<<24>>24){C=C+1|0}else{break}}Mq(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){D=B;break}if(!((Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){E=33}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){break}else{E=35;break}}if((Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[z>>2]=0;E=33;break}else{if(x^(A|0)==0){break}else{E=35;break}}}}while(0);if((E|0)==33){if(x){E=35}}if((E|0)==35){c[j>>2]=c[j>>2]|2}c[b>>2]=D;yl(c[m>>2]|0)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}Fc[c[t>>2]&511](A);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function Mq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=10;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g|0;if((e|0)==(d|0)){return b|0}if((i-k|0)>>>0<h>>>0){dm(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}l=e+(k-g)|0;g=d;d=m+k|0;while(1){a[d]=a[g]|0;j=g+1|0;if((j|0)==(e|0)){break}else{g=j;d=d+1|0}}a[m+l|0]=0;l=k+h|0;if((a[f]&1)==0){a[f]=l<<1;return b|0}else{c[b+4>>2]=l;return b|0}return 0}function Nq(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[8702]|0)==-1)){c[p>>2]=34808;c[p+4>>2]=52;c[p+8>>2]=0;Sl(34808,p,138)}p=(c[8703]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){C=tc(4)|0;D=C;Tt(D);Hb(C|0,29040,174)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){C=tc(4)|0;D=C;Tt(D);Hb(C|0,29040,174)}C=b;Gc[c[(c[b>>2]|0)+44>>2]&127](q,C);D=e;B=c[q>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;D=b;Gc[c[(c[D>>2]|0)+32>>2]&127](r,C);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}$l(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];Nu(p|0,0,12)|0;Xl(r);Gc[c[(c[D>>2]|0)+28>>2]&127](s,C);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}$l(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];Nu(p|0,0,12)|0;Xl(s);s=b;a[f]=Kc[c[(c[s>>2]|0)+12>>2]&255](C)|0;a[g]=Kc[c[(c[s>>2]|0)+16>>2]&255](C)|0;Gc[c[(c[D>>2]|0)+20>>2]&127](t,C);s=h;if((a[s]&1)==0){a[h+1|0]=0;a[s]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}$l(h,0);p=t;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];Nu(p|0,0,12)|0;Xl(t);Gc[c[(c[D>>2]|0)+24>>2]&127](u,C);D=j;if((a[D]&1)==0){a[j+1|0]=0;a[D]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}$l(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];Nu(t|0,0,12)|0;Xl(u);E=Kc[c[(c[b>>2]|0)+36>>2]&255](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[8704]|0)==-1)){c[o>>2]=34816;c[o+4>>2]=52;c[o+8>>2]=0;Sl(34816,o,138)}o=(c[8705]|0)-1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=tc(4)|0;G=F;Tt(G);Hb(F|0,29040,174)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=tc(4)|0;G=F;Tt(G);Hb(F|0,29040,174)}F=C;Gc[c[(c[C>>2]|0)+44>>2]&127](v,F);G=e;B=c[v>>2]|0;a[G]=B;B=B>>8;a[G+1|0]=B;B=B>>8;a[G+2|0]=B;B=B>>8;a[G+3|0]=B;G=C;Gc[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}$l(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];Nu(l|0,0,12)|0;Xl(w);Gc[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}$l(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];Nu(k|0,0,12)|0;Xl(x);x=C;a[f]=Kc[c[(c[x>>2]|0)+12>>2]&255](F)|0;a[g]=Kc[c[(c[x>>2]|0)+16>>2]&255](F)|0;Gc[c[(c[G>>2]|0)+20>>2]&127](y,F);x=h;if((a[x]&1)==0){a[h+1|0]=0;a[x]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}$l(h,0);h=y;c[x>>2]=c[h>>2];c[x+4>>2]=c[h+4>>2];c[x+8>>2]=c[h+8>>2];Nu(h|0,0,12)|0;Xl(y);Gc[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){a[j+1|0]=0;a[G]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}$l(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];Nu(j|0,0,12)|0;Xl(z);E=Kc[c[(c[C>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function Oq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=b;h=a[g]|0;if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}if((i|0)==0){return}do{if((d|0)==(e|0)){j=h}else{i=e-4|0;if(i>>>0>d>>>0){k=d;l=i}else{j=h;break}do{i=c[k>>2]|0;c[k>>2]=c[l>>2];c[l>>2]=i;k=k+4|0;l=l-4|0;}while(k>>>0<l>>>0);j=a[g]|0}}while(0);if((j&1)==0){m=(j&255)>>>1;n=b+1|0}else{m=c[b+4>>2]|0;n=c[b+8>>2]|0}b=e-4|0;e=a[n]|0;j=e<<24>>24<1|e<<24>>24==127;a:do{if(b>>>0>d>>>0){g=n+m|0;l=n;k=d;h=e;i=j;while(1){if(!i){if((h<<24>>24|0)!=(c[k>>2]|0)){break}}o=(g-l|0)>1?l+1|0:l;p=k+4|0;q=a[o]|0;r=q<<24>>24<1|q<<24>>24==127;if(p>>>0<b>>>0){l=o;k=p;h=q;i=r}else{s=q;t=r;break a}}c[f>>2]=4;return}else{s=e;t=j}}while(0);if(t){return}t=c[b>>2]|0;if(!(s<<24>>24>>>0<t>>>0|(t|0)==0)){return}c[f>>2]=4;return}function Pq(a){a=a|0;wl(a|0);tu(a);return}function Qq(a){a=a|0;wl(a|0);return}function Rq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=204;w=m+400|0;pm(p,h);m=p|0;x=c[m>>2]|0;if(!((c[8582]|0)==-1)){c[l>>2]=34328;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34328,l,138)}l=(c[8583]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(Sq(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Sc[c[(c[z>>2]|0)+48>>2]&63](A,23008,23018,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>392){H=mu((G>>2)+2|0)|0;if((H|0)!=0){I=H;J=H;break}yu();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+40|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((c[N>>2]|0)==(c[M>>2]|0)){O=N;break}else{N=N+4|0}}a[L]=a[23008+(O-H>>2)|0]|0;N=M+4|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=ec(D|0,17880,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}nu(J);break}M=tc(8)|0;El(M,16664);Hb(M|0,29056,64)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=1}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){S=Kc[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{S=c[M>>2]|0}if((S|0)==-1){c[A>>2]=0;R=1;break}else{R=(c[A>>2]|0)==0;break}}}while(0);z=c[B>>2]|0;do{if((z|0)==0){T=47}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){U=Kc[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{U=c[M>>2]|0}if((U|0)==-1){c[B>>2]=0;T=47;break}else{if(R){break}else{T=49;break}}}}while(0);if((T|0)==47){if(R){T=49}}if((T|0)==49){c[j>>2]=c[j>>2]|2}c[b>>2]=c[A>>2];yl(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){i=d;return}Fc[c[v>>2]&511](B);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function Sq(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0;p=i;i=i+528|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=p+416|0;u=p+424|0;v=p+432|0;w=p+448|0;x=p+464|0;y=p+480|0;z=p+496|0;A=p+512|0;B=p+520|0;c[q>>2]=o;o=r|0;C=v;Nu(C|0,0,12)|0;D=w;Nu(D|0,0,12)|0;E=x;Nu(E|0,0,12)|0;F=y;Nu(F|0,0,12)|0;G=z;Nu(G|0,0,12)|0;Vq(f,g,s,t,u,v,w,x,y,A);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=l;H=y+4|0;I=y+8|0;J=x+4|0;K=x+8|0;L=(h&512|0)!=0;h=w+4|0;M=w+8|0;N=z+4|0;O=z+8|0;P=s+3|0;Q=v+4|0;R=204;S=o;T=o;o=r+400|0;r=0;U=0;a:while(1){V=c[f>>2]|0;do{if((V|0)==0){W=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Y=Kc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Y=c[X>>2]|0}if((Y|0)==-1){c[f>>2]=0;W=1;break}else{W=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=16}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){_=Kc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[b>>2]=0;Z=16;break}else{if(W){$=V;break}else{aa=R;ba=S;ca=T;da=U;Z=302;break a}}}}while(0);if((Z|0)==16){Z=0;if(W){aa=R;ba=S;ca=T;da=U;Z=302;break}else{$=0}}b:do{switch(a[s+r|0]|0){case 3:{V=a[E]|0;X=(V&1)==0;if(X){ea=(V&255)>>>1}else{ea=c[J>>2]|0}fa=a[F]|0;ga=(fa&1)==0;if(ga){ha=(fa&255)>>>1}else{ha=c[H>>2]|0}if((ea|0)==(-ha|0)){ia=U;ja=o;ka=T;la=S;ma=R;break b}if(X){na=(V&255)>>>1}else{na=c[J>>2]|0}do{if((na|0)!=0){if(ga){oa=(fa&255)>>>1}else{oa=c[H>>2]|0}if((oa|0)==0){break}pa=c[f>>2]|0;qa=c[pa+12>>2]|0;if((qa|0)==(c[pa+16>>2]|0)){ra=Kc[c[(c[pa>>2]|0)+36>>2]&255](pa)|0;sa=ra;ta=a[E]|0}else{sa=c[qa>>2]|0;ta=V}qa=c[f>>2]|0;ra=qa+12|0;pa=c[ra>>2]|0;ua=(pa|0)==(c[qa+16>>2]|0);if((sa|0)==(c[((ta&1)==0?J:c[K>>2]|0)>>2]|0)){if(ua){Kc[c[(c[qa>>2]|0)+40>>2]&255](qa)|0}else{c[ra>>2]=pa+4}ra=a[E]|0;if((ra&1)==0){va=(ra&255)>>>1}else{va=c[J>>2]|0}ia=va>>>0>1>>>0?x:U;ja=o;ka=T;la=S;ma=R;break b}if(ua){wa=Kc[c[(c[qa>>2]|0)+36>>2]&255](qa)|0}else{wa=c[pa>>2]|0}if((wa|0)!=(c[((a[F]&1)==0?H:c[I>>2]|0)>>2]|0)){Z=134;break a}pa=c[f>>2]|0;qa=pa+12|0;ua=c[qa>>2]|0;if((ua|0)==(c[pa+16>>2]|0)){Kc[c[(c[pa>>2]|0)+40>>2]&255](pa)|0}else{c[qa>>2]=ua+4}a[k]=1;ua=a[F]|0;if((ua&1)==0){xa=(ua&255)>>>1}else{xa=c[H>>2]|0}ia=xa>>>0>1>>>0?y:U;ja=o;ka=T;la=S;ma=R;break b}}while(0);if(X){ya=(V&255)>>>1}else{ya=c[J>>2]|0}ga=c[f>>2]|0;ua=c[ga+12>>2]|0;qa=(ua|0)==(c[ga+16>>2]|0);if((ya|0)==0){if(qa){pa=Kc[c[(c[ga>>2]|0)+36>>2]&255](ga)|0;za=pa;Aa=a[F]|0}else{za=c[ua>>2]|0;Aa=fa}if((za|0)!=(c[((Aa&1)==0?H:c[I>>2]|0)>>2]|0)){ia=U;ja=o;ka=T;la=S;ma=R;break b}pa=c[f>>2]|0;ra=pa+12|0;Ba=c[ra>>2]|0;if((Ba|0)==(c[pa+16>>2]|0)){Kc[c[(c[pa>>2]|0)+40>>2]&255](pa)|0}else{c[ra>>2]=Ba+4}a[k]=1;Ba=a[F]|0;if((Ba&1)==0){Ca=(Ba&255)>>>1}else{Ca=c[H>>2]|0}ia=Ca>>>0>1>>>0?y:U;ja=o;ka=T;la=S;ma=R;break b}if(qa){qa=Kc[c[(c[ga>>2]|0)+36>>2]&255](ga)|0;Da=qa;Ea=a[E]|0}else{Da=c[ua>>2]|0;Ea=V}if((Da|0)!=(c[((Ea&1)==0?J:c[K>>2]|0)>>2]|0)){a[k]=1;ia=U;ja=o;ka=T;la=S;ma=R;break b}ua=c[f>>2]|0;qa=ua+12|0;ga=c[qa>>2]|0;if((ga|0)==(c[ua+16>>2]|0)){Kc[c[(c[ua>>2]|0)+40>>2]&255](ua)|0}else{c[qa>>2]=ga+4}ga=a[E]|0;if((ga&1)==0){Fa=(ga&255)>>>1}else{Fa=c[J>>2]|0}ia=Fa>>>0>1>>>0?x:U;ja=o;ka=T;la=S;ma=R;break};case 0:{Z=42;break};case 1:{if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}ga=c[f>>2]|0;qa=c[ga+12>>2]|0;if((qa|0)==(c[ga+16>>2]|0)){Ga=Kc[c[(c[ga>>2]|0)+36>>2]&255](ga)|0}else{Ga=c[qa>>2]|0}if(!(Ic[c[(c[e>>2]|0)+12>>2]&127](l,8192,Ga)|0)){Z=41;break a}qa=c[f>>2]|0;ga=qa+12|0;ua=c[ga>>2]|0;if((ua|0)==(c[qa+16>>2]|0)){Ha=Kc[c[(c[qa>>2]|0)+40>>2]&255](qa)|0}else{c[ga>>2]=ua+4;Ha=c[ua>>2]|0}km(z,Ha);Z=42;break};case 2:{if(!((U|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Ia=(a[P]|0)!=0}else{Ia=0}if(!(L|Ia)){ia=0;ja=o;ka=T;la=S;ma=R;break b}}ua=a[D]|0;ga=(ua&1)==0?h:c[M>>2]|0;c:do{if((r|0)==0){Ja=ga;Ka=ua;La=$;Ma=$}else{if((d[s+(r-1)|0]|0)>>>0<2>>>0){Na=ga;Oa=ua}else{Ja=ga;Ka=ua;La=$;Ma=$;break}while(1){if((Oa&1)==0){Pa=(Oa&255)>>>1;Qa=h}else{Pa=c[h>>2]|0;Qa=c[M>>2]|0}if((Na|0)==(Qa+(Pa<<2)|0)){Ra=Oa;break}if(!(Ic[c[(c[e>>2]|0)+12>>2]&127](l,8192,c[Na>>2]|0)|0)){Z=148;break}Na=Na+4|0;Oa=a[D]|0}if((Z|0)==148){Z=0;Ra=a[D]|0}qa=(Ra&1)==0;Ba=Na-(qa?h:c[M>>2]|0)>>2;ra=a[G]|0;pa=(ra&1)==0;if(pa){Sa=(ra&255)>>>1}else{Sa=c[N>>2]|0}d:do{if(!(Ba>>>0>Sa>>>0)){if(pa){Ta=(ra&255)>>>1;Ua=N;Va=N+(((ra&255)>>>1)-Ba<<2)|0}else{Wa=c[O>>2]|0;Xa=c[N>>2]|0;Ta=Xa;Ua=Wa;Va=Wa+(Xa-Ba<<2)|0}Xa=Ua+(Ta<<2)|0;if((Va|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}else{Ya=Va;Za=qa?h:c[M>>2]|0}while(1){if((c[Ya>>2]|0)!=(c[Za>>2]|0)){break d}Wa=Ya+4|0;if((Wa|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}Ya=Wa;Za=Za+4|0}}}while(0);Ja=qa?h:c[M>>2]|0;Ka=Ra;La=$;Ma=$}}while(0);e:while(1){if((Ka&1)==0){_a=(Ka&255)>>>1;$a=h}else{_a=c[h>>2]|0;$a=c[M>>2]|0}if((Ja|0)==($a+(_a<<2)|0)){break}ua=c[f>>2]|0;do{if((ua|0)==0){ab=1}else{ga=c[ua+12>>2]|0;if((ga|0)==(c[ua+16>>2]|0)){bb=Kc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0}else{bb=c[ga>>2]|0}if((bb|0)==-1){c[f>>2]=0;ab=1;break}else{ab=(c[f>>2]|0)==0;break}}}while(0);do{if((La|0)==0){cb=Ma;Z=178}else{ua=c[La+12>>2]|0;if((ua|0)==(c[La+16>>2]|0)){db=Kc[c[(c[La>>2]|0)+36>>2]&255](La)|0}else{db=c[ua>>2]|0}if((db|0)==-1){c[b>>2]=0;cb=0;Z=178;break}else{if(ab^(Ma|0)==0){eb=Ma;fb=Ma;break}else{break e}}}}while(0);if((Z|0)==178){Z=0;if(ab){break}else{eb=0;fb=cb}}ua=c[f>>2]|0;qa=c[ua+12>>2]|0;if((qa|0)==(c[ua+16>>2]|0)){gb=Kc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0}else{gb=c[qa>>2]|0}if((gb|0)!=(c[Ja>>2]|0)){break}qa=c[f>>2]|0;ua=qa+12|0;ga=c[ua>>2]|0;if((ga|0)==(c[qa+16>>2]|0)){Kc[c[(c[qa>>2]|0)+40>>2]&255](qa)|0}else{c[ua>>2]=ga+4}Ja=Ja+4|0;Ka=a[D]|0;La=eb;Ma=fb}if(!L){ia=U;ja=o;ka=T;la=S;ma=R;break b}ga=a[D]|0;if((ga&1)==0){hb=(ga&255)>>>1;ib=h}else{hb=c[h>>2]|0;ib=c[M>>2]|0}if((Ja|0)==(ib+(hb<<2)|0)){ia=U;ja=o;ka=T;la=S;ma=R}else{Z=193;break a}break};case 4:{ga=0;ua=o;qa=T;V=S;fa=R;f:while(1){X=c[f>>2]|0;do{if((X|0)==0){jb=1}else{Ba=c[X+12>>2]|0;if((Ba|0)==(c[X+16>>2]|0)){kb=Kc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{kb=c[Ba>>2]|0}if((kb|0)==-1){c[f>>2]=0;jb=1;break}else{jb=(c[f>>2]|0)==0;break}}}while(0);X=c[b>>2]|0;do{if((X|0)==0){Z=207}else{Ba=c[X+12>>2]|0;if((Ba|0)==(c[X+16>>2]|0)){lb=Kc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{lb=c[Ba>>2]|0}if((lb|0)==-1){c[b>>2]=0;Z=207;break}else{if(jb){break}else{break f}}}}while(0);if((Z|0)==207){Z=0;if(jb){break}}X=c[f>>2]|0;Ba=c[X+12>>2]|0;if((Ba|0)==(c[X+16>>2]|0)){mb=Kc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{mb=c[Ba>>2]|0}if(Ic[c[(c[e>>2]|0)+12>>2]&127](l,2048,mb)|0){Ba=c[n>>2]|0;if((Ba|0)==(c[q>>2]|0)){Wq(m,n,q);nb=c[n>>2]|0}else{nb=Ba}c[n>>2]=nb+4;c[nb>>2]=mb;ob=ga+1|0;pb=ua;qb=qa;rb=V;sb=fa}else{Ba=a[C]|0;if((Ba&1)==0){tb=(Ba&255)>>>1}else{tb=c[Q>>2]|0}if((tb|0)==0|(ga|0)==0){break}if((mb|0)!=(c[u>>2]|0)){break}if((qa|0)==(ua|0)){Ba=(fa|0)!=204;X=qa-V|0;ra=X>>>0<2147483647>>>0?X<<1:-1;if(Ba){ub=V}else{ub=0}Ba=ou(ub,ra)|0;pa=Ba;if((Ba|0)==0){yu()}vb=pa+(ra>>>2<<2)|0;wb=pa+(X>>2<<2)|0;xb=pa;yb=122}else{vb=ua;wb=qa;xb=V;yb=fa}c[wb>>2]=ga;ob=0;pb=vb;qb=wb+4|0;rb=xb;sb=yb}pa=c[f>>2]|0;X=pa+12|0;ra=c[X>>2]|0;if((ra|0)==(c[pa+16>>2]|0)){Kc[c[(c[pa>>2]|0)+40>>2]&255](pa)|0;ga=ob;ua=pb;qa=qb;V=rb;fa=sb;continue}else{c[X>>2]=ra+4;ga=ob;ua=pb;qa=qb;V=rb;fa=sb;continue}}if((V|0)==(qa|0)|(ga|0)==0){zb=ua;Ab=qa;Bb=V;Cb=fa}else{if((qa|0)==(ua|0)){ra=(fa|0)!=204;X=qa-V|0;pa=X>>>0<2147483647>>>0?X<<1:-1;if(ra){Db=V}else{Db=0}ra=ou(Db,pa)|0;Ba=ra;if((ra|0)==0){yu()}Eb=Ba+(pa>>>2<<2)|0;Fb=Ba+(X>>2<<2)|0;Gb=Ba;Hb=122}else{Eb=ua;Fb=qa;Gb=V;Hb=fa}c[Fb>>2]=ga;zb=Eb;Ab=Fb+4|0;Bb=Gb;Cb=Hb}Ba=c[A>>2]|0;if((Ba|0)>0){X=c[f>>2]|0;do{if((X|0)==0){Ib=1}else{pa=c[X+12>>2]|0;if((pa|0)==(c[X+16>>2]|0)){Jb=Kc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Jb=c[pa>>2]|0}if((Jb|0)==-1){c[f>>2]=0;Ib=1;break}else{Ib=(c[f>>2]|0)==0;break}}}while(0);X=c[b>>2]|0;do{if((X|0)==0){Z=259}else{ga=c[X+12>>2]|0;if((ga|0)==(c[X+16>>2]|0)){Kb=Kc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Kb=c[ga>>2]|0}if((Kb|0)==-1){c[b>>2]=0;Z=259;break}else{if(Ib){Lb=X;break}else{Z=265;break a}}}}while(0);if((Z|0)==259){Z=0;if(Ib){Z=265;break a}else{Lb=0}}X=c[f>>2]|0;ga=c[X+12>>2]|0;if((ga|0)==(c[X+16>>2]|0)){Mb=Kc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Mb=c[ga>>2]|0}if((Mb|0)!=(c[t>>2]|0)){Z=265;break a}ga=c[f>>2]|0;X=ga+12|0;fa=c[X>>2]|0;if((fa|0)==(c[ga+16>>2]|0)){Kc[c[(c[ga>>2]|0)+40>>2]&255](ga)|0;Nb=Lb;Ob=Ba;Pb=Lb}else{c[X>>2]=fa+4;Nb=Lb;Ob=Ba;Pb=Lb}while(1){fa=c[f>>2]|0;do{if((fa|0)==0){Qb=1}else{X=c[fa+12>>2]|0;if((X|0)==(c[fa+16>>2]|0)){Rb=Kc[c[(c[fa>>2]|0)+36>>2]&255](fa)|0}else{Rb=c[X>>2]|0}if((Rb|0)==-1){c[f>>2]=0;Qb=1;break}else{Qb=(c[f>>2]|0)==0;break}}}while(0);do{if((Nb|0)==0){Sb=Pb;Z=282}else{fa=c[Nb+12>>2]|0;if((fa|0)==(c[Nb+16>>2]|0)){Tb=Kc[c[(c[Nb>>2]|0)+36>>2]&255](Nb)|0}else{Tb=c[fa>>2]|0}if((Tb|0)==-1){c[b>>2]=0;Sb=0;Z=282;break}else{if(Qb^(Pb|0)==0){Ub=Pb;Vb=Pb;break}else{Z=289;break a}}}}while(0);if((Z|0)==282){Z=0;if(Qb){Z=289;break a}else{Ub=Sb;Vb=0}}fa=c[f>>2]|0;X=c[fa+12>>2]|0;if((X|0)==(c[fa+16>>2]|0)){Wb=Kc[c[(c[fa>>2]|0)+36>>2]&255](fa)|0}else{Wb=c[X>>2]|0}if(!(Ic[c[(c[e>>2]|0)+12>>2]&127](l,2048,Wb)|0)){Z=289;break a}if((c[n>>2]|0)==(c[q>>2]|0)){Wq(m,n,q)}X=c[f>>2]|0;fa=c[X+12>>2]|0;if((fa|0)==(c[X+16>>2]|0)){Xb=Kc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Xb=c[fa>>2]|0}fa=c[n>>2]|0;c[n>>2]=fa+4;c[fa>>2]=Xb;fa=Ob-1|0;c[A>>2]=fa;X=c[f>>2]|0;ga=X+12|0;V=c[ga>>2]|0;if((V|0)==(c[X+16>>2]|0)){Kc[c[(c[X>>2]|0)+40>>2]&255](X)|0}else{c[ga>>2]=V+4}if((fa|0)>0){Nb=Vb;Ob=fa;Pb=Ub}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){Z=300;break a}else{ia=U;ja=zb;ka=Ab;la=Bb;ma=Cb}break};default:{ia=U;ja=o;ka=T;la=S;ma=R}}}while(0);g:do{if((Z|0)==42){Z=0;if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}else{Yb=$;Zb=$}while(1){Ba=c[f>>2]|0;do{if((Ba|0)==0){_b=1}else{fa=c[Ba+12>>2]|0;if((fa|0)==(c[Ba+16>>2]|0)){$b=Kc[c[(c[Ba>>2]|0)+36>>2]&255](Ba)|0}else{$b=c[fa>>2]|0}if(($b|0)==-1){c[f>>2]=0;_b=1;break}else{_b=(c[f>>2]|0)==0;break}}}while(0);do{if((Yb|0)==0){ac=Zb;Z=56}else{Ba=c[Yb+12>>2]|0;if((Ba|0)==(c[Yb+16>>2]|0)){bc=Kc[c[(c[Yb>>2]|0)+36>>2]&255](Yb)|0}else{bc=c[Ba>>2]|0}if((bc|0)==-1){c[b>>2]=0;ac=0;Z=56;break}else{if(_b^(Zb|0)==0){cc=Zb;dc=Zb;break}else{ia=U;ja=o;ka=T;la=S;ma=R;break g}}}}while(0);if((Z|0)==56){Z=0;if(_b){ia=U;ja=o;ka=T;la=S;ma=R;break g}else{cc=0;dc=ac}}Ba=c[f>>2]|0;fa=c[Ba+12>>2]|0;if((fa|0)==(c[Ba+16>>2]|0)){ec=Kc[c[(c[Ba>>2]|0)+36>>2]&255](Ba)|0}else{ec=c[fa>>2]|0}if(!(Ic[c[(c[e>>2]|0)+12>>2]&127](l,8192,ec)|0)){ia=U;ja=o;ka=T;la=S;ma=R;break g}fa=c[f>>2]|0;Ba=fa+12|0;V=c[Ba>>2]|0;if((V|0)==(c[fa+16>>2]|0)){fc=Kc[c[(c[fa>>2]|0)+40>>2]&255](fa)|0}else{c[Ba>>2]=V+4;fc=c[V>>2]|0}km(z,fc);Yb=cc;Zb=dc}}}while(0);V=r+1|0;if(V>>>0<4>>>0){R=ma;S=la;T=ka;o=ja;r=V;U=ia}else{aa=ma;ba=la;ca=ka;da=ia;Z=302;break}}h:do{if((Z|0)==41){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==134){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==193){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==265){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==289){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==300){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==302){i:do{if((da|0)!=0){ia=da;ka=da+4|0;la=da+8|0;ma=1;j:while(1){U=a[ia]|0;if((U&1)==0){jc=(U&255)>>>1}else{jc=c[ka>>2]|0}if(!(ma>>>0<jc>>>0)){break i}U=c[f>>2]|0;do{if((U|0)==0){kc=1}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){lc=Kc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{lc=c[r>>2]|0}if((lc|0)==-1){c[f>>2]=0;kc=1;break}else{kc=(c[f>>2]|0)==0;break}}}while(0);U=c[b>>2]|0;do{if((U|0)==0){Z=321}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){mc=Kc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{mc=c[r>>2]|0}if((mc|0)==-1){c[b>>2]=0;Z=321;break}else{if(kc){break}else{break j}}}}while(0);if((Z|0)==321){Z=0;if(kc){break}}U=c[f>>2]|0;r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){nc=Kc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{nc=c[r>>2]|0}if((a[ia]&1)==0){oc=ka}else{oc=c[la>>2]|0}if((nc|0)!=(c[oc+(ma<<2)>>2]|0)){break}r=ma+1|0;U=c[f>>2]|0;ja=U+12|0;o=c[ja>>2]|0;if((o|0)==(c[U+16>>2]|0)){Kc[c[(c[U>>2]|0)+40>>2]&255](U)|0;ma=r;continue}else{c[ja>>2]=o+4;ma=r;continue}}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa;break h}}while(0);if((ba|0)==(ca|0)){gc=1;hc=ca;ic=aa;break}c[B>>2]=0;Oq(v,ba,ca,B);if((c[B>>2]|0)==0){gc=1;hc=ba;ic=aa;break}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa}}while(0);gm(z);gm(y);gm(x);gm(w);Xl(v);if((hc|0)==0){i=p;return gc|0}Fc[ic&511](hc);i=p;return gc|0}function Tq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=204;u=m+400|0;pm(p,h);m=p|0;v=c[m>>2]|0;if(!((c[8582]|0)==-1)){c[l>>2]=34328;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34328,l,138)}l=(c[8583]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(Sq(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){km(k,Hc[c[(c[B>>2]|0)+44>>2]&127](y,45)|0)}x=Hc[c[(c[B>>2]|0)+44>>2]&127](y,48)|0;y=c[o>>2]|0;B=y-4|0;C=c[s>>2]|0;while(1){if(!(C>>>0<B>>>0)){break}if((c[C>>2]|0)==(x|0)){C=C+4|0}else{break}}Uq(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=1}else{E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0)){F=Kc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{F=c[E>>2]|0}if((F|0)==-1){c[x>>2]=0;D=1;break}else{D=(c[x>>2]|0)==0;break}}}while(0);do{if((A|0)==0){G=35}else{B=c[A+12>>2]|0;if((B|0)==(c[A+16>>2]|0)){H=Kc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{H=c[B>>2]|0}if((H|0)==-1){c[z>>2]=0;G=35;break}else{if(D){break}else{G=37;break}}}}while(0);if((G|0)==35){if(D){G=37}}if((G|0)==37){c[j>>2]=c[j>>2]|2}c[b>>2]=c[x>>2];yl(c[m>>2]|0)|0;z=c[s>>2]|0;c[s>>2]=0;if((z|0)==0){i=d;return}Fc[c[t>>2]&511](z);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function Uq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=1;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g>>2;if((h|0)==0){return b|0}if((i-k|0)>>>0<h>>>0){mm(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+4|0}else{m=c[b+8>>2]|0}l=m+(k<<2)|0;if((d|0)==(e|0)){n=l}else{j=k+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=l;while(1){c[d>>2]=c[g>>2];l=g+4|0;if((l|0)==(e|0)){break}else{g=l;d=d+4|0}}n=m+(j<<2)|0}c[n>>2]=0;n=k+h|0;if((a[f]&1)==0){a[f]=n<<1;return b|0}else{c[b+4>>2]=n;return b|0}return 0}function Vq(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[8698]|0)==-1)){c[p>>2]=34792;c[p+4>>2]=52;c[p+8>>2]=0;Sl(34792,p,138)}p=(c[8699]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){C=tc(4)|0;D=C;Tt(D);Hb(C|0,29040,174)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){C=tc(4)|0;D=C;Tt(D);Hb(C|0,29040,174)}C=b;Gc[c[(c[b>>2]|0)+44>>2]&127](q,C);D=e;B=c[q>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;D=b;Gc[c[(c[D>>2]|0)+32>>2]&127](r,C);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}jm(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];Nu(p|0,0,12)|0;gm(r);Gc[c[(c[D>>2]|0)+28>>2]&127](s,C);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}jm(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];Nu(p|0,0,12)|0;gm(s);s=b;c[f>>2]=Kc[c[(c[s>>2]|0)+12>>2]&255](C)|0;c[g>>2]=Kc[c[(c[s>>2]|0)+16>>2]&255](C)|0;Gc[c[(c[b>>2]|0)+20>>2]&127](t,C);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}$l(h,0);p=t;c[b>>2]=c[p>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];Nu(p|0,0,12)|0;Xl(t);Gc[c[(c[D>>2]|0)+24>>2]&127](u,C);D=j;if((a[D]&1)==0){c[j+4>>2]=0;a[D]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}jm(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];Nu(t|0,0,12)|0;gm(u);E=Kc[c[(c[s>>2]|0)+36>>2]&255](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[8700]|0)==-1)){c[o>>2]=34800;c[o+4>>2]=52;c[o+8>>2]=0;Sl(34800,o,138)}o=(c[8701]|0)-1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=tc(4)|0;G=F;Tt(G);Hb(F|0,29040,174)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=tc(4)|0;G=F;Tt(G);Hb(F|0,29040,174)}F=C;Gc[c[(c[C>>2]|0)+44>>2]&127](v,F);G=e;B=c[v>>2]|0;a[G]=B;B=B>>8;a[G+1|0]=B;B=B>>8;a[G+2|0]=B;B=B>>8;a[G+3|0]=B;G=C;Gc[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}jm(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];Nu(l|0,0,12)|0;gm(w);Gc[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){c[k+4>>2]=0;a[w]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}jm(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];Nu(k|0,0,12)|0;gm(x);x=C;c[f>>2]=Kc[c[(c[x>>2]|0)+12>>2]&255](F)|0;c[g>>2]=Kc[c[(c[x>>2]|0)+16>>2]&255](F)|0;Gc[c[(c[C>>2]|0)+20>>2]&127](y,F);C=h;if((a[C]&1)==0){a[h+1|0]=0;a[C]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}$l(h,0);h=y;c[C>>2]=c[h>>2];c[C+4>>2]=c[h+4>>2];c[C+8>>2]=c[h+8>>2];Nu(h|0,0,12)|0;Xl(y);Gc[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){c[j+4>>2]=0;a[G]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}jm(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];Nu(j|0,0,12)|0;gm(z);E=Kc[c[(c[x>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function Wq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=204;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647>>>0?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=ou(k,j)|0;k=a;if((a|0)==0){yu()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}Fc[c[e>>2]&511](a);l=c[g>>2]|0}}while(0);c[e>>2]=122;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function Xq(a){a=a|0;wl(a|0);tu(a);return}function Yq(a){a=a|0;wl(a|0);return}function Zq(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+448|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+232|0;o=d+240|0;p=d+248|0;q=d+256|0;r=d+264|0;s=d+280|0;t=d+296|0;u=d+312|0;v=d+320|0;w=d+424|0;x=d+432|0;y=d+440|0;z=d+16|0;c[m>>2]=z;A=d+128|0;B=eb(z|0,100,16272,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;do{if(B>>>0>99>>>0){do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);C=Ro(m,c[8226]|0,16272,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;D=c[m>>2]|0;if((D|0)==0){yu();E=c[m>>2]|0}else{E=D}D=mu(C)|0;if((D|0)!=0){F=D;G=C;H=D;I=E;break}yu();F=0;G=C;H=0;I=E}else{F=A;G=B;H=0;I=0}}while(0);pm(n,g);B=n|0;A=c[B>>2]|0;if(!((c[8584]|0)==-1)){c[l>>2]=34336;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34336,l,138)}l=(c[8585]|0)-1|0;E=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-E>>2>>>0>l>>>0){z=c[E+(l<<2)>>2]|0;if((z|0)==0){break}C=z;D=c[m>>2]|0;Sc[c[(c[z>>2]|0)+32>>2]&63](C,D,D+G|0,F)|0;if((G|0)==0){J=0}else{J=(a[c[m>>2]|0]|0)==45}Nu(r|0,0,12)|0;D=s;Nu(D|0,0,12)|0;z=t;Nu(z|0,0,12)|0;_q(f,J,n,o,p,q,r,s,t,u);K=v|0;L=c[u>>2]|0;if((G|0)>(L|0)){M=a[z]|0;if((M&1)==0){N=(M&255)>>>1}else{N=c[t+4>>2]|0}M=a[D]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[s+4>>2]|0}P=N+(G-L<<1|1)+O|0}else{M=a[z]|0;if((M&1)==0){Q=(M&255)>>>1}else{Q=c[t+4>>2]|0}M=a[D]|0;if((M&1)==0){R=(M&255)>>>1}else{R=c[s+4>>2]|0}P=Q+2+R|0}M=P+L|0;do{if(M>>>0>100>>>0){D=mu(M)|0;if((D|0)!=0){S=D;T=D;break}yu();S=0;T=0}else{S=K;T=0}}while(0);$q(S,w,x,c[g+4>>2]|0,F,F+G|0,C,J,o,a[p]|0,a[q]|0,r,s,t,L);c[y>>2]=c[e>>2];Mo(b,y,S,c[w>>2]|0,c[x>>2]|0,g,j);if((T|0)!=0){nu(T)}Xl(t);Xl(s);Xl(r);yl(c[B>>2]|0)|0;if((H|0)!=0){nu(H)}if((I|0)==0){i=d;return}nu(I);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function _q(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=C;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[8702]|0)==-1)){c[p>>2]=34808;c[p+4>>2]=52;c[p+8>>2]=0;Sl(34808,p,138)}p=(c[8703]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=tc(4)|0;J=I;Tt(J);Hb(I|0,29040,174)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=tc(4)|0;J=I;Tt(J);Hb(I|0,29040,174)}I=e;J=c[e>>2]|0;if(d){Gc[c[J+44>>2]&127](r,I);r=f;B=c[q>>2]|0;a[r]=B;B=B>>8;a[r+1|0]=B;B=B>>8;a[r+2|0]=B;B=B>>8;a[r+3|0]=B;Gc[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}$l(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];Nu(q|0,0,12)|0;Xl(s)}else{Gc[c[J+40>>2]&127](u,I);u=f;B=c[t>>2]|0;a[u]=B;B=B>>8;a[u+1|0]=B;B=B>>8;a[u+2|0]=B;B=B>>8;a[u+3|0]=B;Gc[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){a[l+1|0]=0;a[u]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}$l(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];Nu(t|0,0,12)|0;Xl(v)}v=e;a[g]=Kc[c[(c[v>>2]|0)+12>>2]&255](I)|0;a[h]=Kc[c[(c[v>>2]|0)+16>>2]&255](I)|0;v=e;Gc[c[(c[v>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}$l(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];Nu(u|0,0,12)|0;Xl(w);Gc[c[(c[v>>2]|0)+24>>2]&127](x,I);v=k;if((a[v]&1)==0){a[k+1|0]=0;a[v]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}$l(k,0);w=x;c[v>>2]=c[w>>2];c[v+4>>2]=c[w+4>>2];c[v+8>>2]=c[w+8>>2];Nu(w|0,0,12)|0;Xl(x);K=Kc[c[(c[e>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[8704]|0)==-1)){c[o>>2]=34816;c[o+4>>2]=52;c[o+8>>2]=0;Sl(34816,o,138)}o=(c[8705]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=tc(4)|0;M=L;Tt(M);Hb(L|0,29040,174)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=tc(4)|0;M=L;Tt(M);Hb(L|0,29040,174)}L=H;M=c[H>>2]|0;if(d){Gc[c[M+44>>2]&127](z,L);z=f;B=c[y>>2]|0;a[z]=B;B=B>>8;a[z+1|0]=B;B=B>>8;a[z+2|0]=B;B=B>>8;a[z+3|0]=B;Gc[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}$l(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];Nu(y|0,0,12)|0;Xl(A)}else{Gc[c[M+40>>2]&127](D,L);D=f;B=c[C>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;Gc[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){a[l+1|0]=0;a[D]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}$l(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];Nu(l|0,0,12)|0;Xl(E)}E=H;a[g]=Kc[c[(c[E>>2]|0)+12>>2]&255](L)|0;a[h]=Kc[c[(c[E>>2]|0)+16>>2]&255](L)|0;E=H;Gc[c[(c[E>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}$l(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];Nu(j|0,0,12)|0;Xl(F);Gc[c[(c[E>>2]|0)+24>>2]&127](G,L);E=k;if((a[E]&1)==0){a[k+1|0]=0;a[E]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}$l(k,0);k=G;c[E>>2]=c[k>>2];c[E+4>>2]=c[k+4>>2];c[E+8>>2]=c[k+8>>2];Nu(k|0,0,12)|0;Xl(G);K=Kc[c[(c[H>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function $q(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+8|0;A=p+4|0;p=j+8|0;B=(r|0)>0;C=o;D=o+1|0;E=o+8|0;F=o+4|0;o=-r|0;G=0;H=h;while(1){a:do{switch(a[l+G|0]|0){case 4:{h=c[f>>2]|0;I=k?H+1|0:H;J=I;while(1){if(!(J>>>0<i>>>0)){break}K=a[J]|0;if(K<<24>>24<0){break}if((b[(c[p>>2]|0)+(K<<24>>24<<1)>>1]&2048)==0){break}else{J=J+1|0}}K=J;if(B){if(J>>>0>I>>>0){L=I+(-K|0)|0;K=L>>>0<o>>>0?o:L;L=K+r|0;M=J;N=r;O=h;while(1){P=M-1|0;Q=a[P]|0;c[f>>2]=O+1;a[O]=Q;Q=N-1|0;R=(Q|0)>0;if(!(P>>>0>I>>>0&R)){break}M=P;N=Q;O=c[f>>2]|0}O=J+K|0;if(R){S=L;T=O;U=32}else{V=0;W=L;X=O}}else{S=r;T=J;U=32}if((U|0)==32){U=0;V=Hc[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;W=S;X=T}O=c[f>>2]|0;c[f>>2]=O+1;if((W|0)>0){N=W;M=O;while(1){a[M]=V;Q=N-1|0;P=c[f>>2]|0;c[f>>2]=P+1;if((Q|0)>0){N=Q;M=P}else{Y=P;break}}}else{Y=O}a[Y]=m;Z=X}else{Z=J}if((Z|0)==(I|0)){M=Hc[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;N=c[f>>2]|0;c[f>>2]=N+1;a[N]=M}else{M=a[C]|0;N=(M&1)==0;if(N){_=(M&255)>>>1}else{_=c[F>>2]|0}if((_|0)==0){$=Z;aa=0;ba=0;ca=-1}else{if(N){da=D}else{da=c[E>>2]|0}$=Z;aa=0;ba=0;ca=a[da]|0}while(1){do{if((aa|0)==(ca|0)){N=c[f>>2]|0;c[f>>2]=N+1;a[N]=n;N=ba+1|0;M=a[C]|0;L=(M&1)==0;if(L){ea=(M&255)>>>1}else{ea=c[F>>2]|0}if(!(N>>>0<ea>>>0)){fa=ca;ga=N;ha=0;break}if(L){ia=D}else{ia=c[E>>2]|0}if((a[ia+N|0]|0)==127){fa=-1;ga=N;ha=0;break}if(L){ja=D}else{ja=c[E>>2]|0}fa=a[ja+N|0]|0;ga=N;ha=0}else{fa=ca;ga=ba;ha=aa}}while(0);N=$-1|0;L=a[N]|0;M=c[f>>2]|0;c[f>>2]=M+1;a[M]=L;if((N|0)==(I|0)){break}else{$=N;aa=ha+1|0;ba=ga;ca=fa}}}J=c[f>>2]|0;if((h|0)==(J|0)){ka=I;break a}O=J-1|0;if(O>>>0>h>>>0){la=h;ma=O}else{ka=I;break a}while(1){O=a[la]|0;a[la]=a[ma]|0;a[ma]=O;O=la+1|0;J=ma-1|0;if(O>>>0<J>>>0){la=O;ma=J}else{ka=I;break}}break};case 1:{c[e>>2]=c[f>>2];I=Hc[c[(c[s>>2]|0)+28>>2]&127](j,32)|0;h=c[f>>2]|0;c[f>>2]=h+1;a[h]=I;ka=H;break};case 3:{I=a[t]|0;h=(I&1)==0;if(h){na=(I&255)>>>1}else{na=c[w>>2]|0}if((na|0)==0){ka=H;break a}if(h){oa=u}else{oa=c[v>>2]|0}h=a[oa]|0;I=c[f>>2]|0;c[f>>2]=I+1;a[I]=h;ka=H;break};case 2:{h=a[q]|0;I=(h&1)==0;if(I){pa=(h&255)>>>1}else{pa=c[A>>2]|0}if((pa|0)==0|x){ka=H;break a}if(I){qa=(h&255)>>>1;ra=y;sa=y}else{h=c[z>>2]|0;qa=c[A>>2]|0;ra=h;sa=h}h=ra+qa|0;I=c[f>>2]|0;if((sa|0)==(h|0)){ta=I}else{J=I;I=sa;while(1){a[J]=a[I]|0;O=I+1|0;N=J+1|0;if((O|0)==(h|0)){ta=N;break}else{J=N;I=O}}}c[f>>2]=ta;ka=H;break};case 0:{c[e>>2]=c[f>>2];ka=H;break};default:{ka=H}}}while(0);I=G+1|0;if(I>>>0<4>>>0){G=I;H=ka}else{break}}ka=a[t]|0;t=(ka&1)==0;if(t){ua=(ka&255)>>>1}else{ua=c[w>>2]|0}if(ua>>>0>1>>>0){if(t){va=(ka&255)>>>1;wa=u;xa=u}else{u=c[v>>2]|0;va=c[w>>2]|0;wa=u;xa=u}u=xa+1|0;xa=wa+va|0;va=c[f>>2]|0;if((u|0)==(xa|0)){ya=va}else{wa=va;va=u;while(1){a[wa]=a[va]|0;u=va+1|0;w=wa+1|0;if((u|0)==(xa|0)){ya=w;break}else{wa=w;va=u}}}c[f>>2]=ya}ya=g&176;if((ya|0)==32){c[e>>2]=c[f>>2];return}else if((ya|0)==16){return}else{c[e>>2]=d;return}}function ar(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=d+32|0;o=d+40|0;p=d+48|0;q=d+64|0;r=d+80|0;s=d+96|0;t=d+104|0;u=d+208|0;v=d+216|0;w=d+224|0;pm(l,g);x=l|0;y=c[x>>2]|0;if(!((c[8584]|0)==-1)){c[k>>2]=34336;c[k+4>>2]=52;c[k+8>>2]=0;Sl(34336,k,138)}k=(c[8585]|0)-1|0;z=c[y+8>>2]|0;do{if((c[y+12>>2]|0)-z>>2>>>0>k>>>0){A=c[z+(k<<2)>>2]|0;if((A|0)==0){break}B=A;C=j;D=a[C]|0;E=(D&1)==0;if(E){F=(D&255)>>>1}else{F=c[j+4>>2]|0}if((F|0)==0){G=0}else{if(E){H=j+1|0}else{H=c[j+8>>2]|0}E=a[H]|0;G=E<<24>>24==(Hc[c[(c[A>>2]|0)+28>>2]&127](B,45)|0)<<24>>24}Nu(p|0,0,12)|0;A=q;Nu(A|0,0,12)|0;E=r;Nu(E|0,0,12)|0;_q(f,G,l,m,n,o,p,q,r,s);D=t|0;I=a[C]|0;J=(I&1)==0;if(J){K=(I&255)>>>1}else{K=c[j+4>>2]|0}L=c[s>>2]|0;if((K|0)>(L|0)){if(J){M=(I&255)>>>1}else{M=c[j+4>>2]|0}J=a[E]|0;if((J&1)==0){N=(J&255)>>>1}else{N=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){O=(J&255)>>>1}else{O=c[q+4>>2]|0}P=N+(M-L<<1|1)+O|0}else{J=a[E]|0;if((J&1)==0){Q=(J&255)>>>1}else{Q=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){R=(J&255)>>>1}else{R=c[q+4>>2]|0}P=Q+2+R|0}J=P+L|0;do{if(J>>>0>100>>>0){A=mu(J)|0;if((A|0)!=0){S=A;T=A;U=I;break}yu();S=0;T=0;U=a[C]|0}else{S=D;T=0;U=I}}while(0);if((U&1)==0){V=(U&255)>>>1;W=j+1|0}else{V=c[j+4>>2]|0;W=c[j+8>>2]|0}$q(S,u,v,c[g+4>>2]|0,W,W+V|0,B,G,m,a[n]|0,a[o]|0,p,q,r,L);c[w>>2]=c[e>>2];Mo(b,w,S,c[u>>2]|0,c[v>>2]|0,g,h);if((T|0)==0){Xl(r);Xl(q);Xl(p);X=c[x>>2]|0;Y=X|0;Z=yl(Y)|0;i=d;return}nu(T);Xl(r);Xl(q);Xl(p);X=c[x>>2]|0;Y=X|0;Z=yl(Y)|0;i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function br(a){a=a|0;wl(a|0);tu(a);return}function cr(a){a=a|0;wl(a|0);return}function dr(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+1040|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+528|0;o=d+536|0;p=d+544|0;q=d+552|0;r=d+560|0;s=d+576|0;t=d+592|0;u=d+608|0;v=d+616|0;w=d+1016|0;x=d+1024|0;y=d+1032|0;z=d+16|0;c[m>>2]=z;A=d+128|0;B=eb(z|0,100,16272,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;do{if(B>>>0>99>>>0){do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);C=Ro(m,c[8226]|0,16272,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;D=c[m>>2]|0;if((D|0)==0){yu();E=c[m>>2]|0}else{E=D}D=mu(C<<2)|0;F=D;if((D|0)!=0){G=F;H=C;I=F;J=E;break}yu();G=0;H=C;I=0;J=E}else{G=A;H=B;I=0;J=0}}while(0);pm(n,g);B=n|0;A=c[B>>2]|0;if(!((c[8582]|0)==-1)){c[l>>2]=34328;c[l+4>>2]=52;c[l+8>>2]=0;Sl(34328,l,138)}l=(c[8583]|0)-1|0;E=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-E>>2>>>0>l>>>0){z=c[E+(l<<2)>>2]|0;if((z|0)==0){break}C=z;F=c[m>>2]|0;Sc[c[(c[z>>2]|0)+48>>2]&63](C,F,F+H|0,G)|0;if((H|0)==0){K=0}else{K=(a[c[m>>2]|0]|0)==45}Nu(r|0,0,12)|0;F=s;Nu(F|0,0,12)|0;z=t;Nu(z|0,0,12)|0;er(f,K,n,o,p,q,r,s,t,u);D=v|0;L=c[u>>2]|0;if((H|0)>(L|0)){M=a[z]|0;if((M&1)==0){N=(M&255)>>>1}else{N=c[t+4>>2]|0}M=a[F]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[s+4>>2]|0}P=N+(H-L<<1|1)+O|0}else{M=a[z]|0;if((M&1)==0){Q=(M&255)>>>1}else{Q=c[t+4>>2]|0}M=a[F]|0;if((M&1)==0){R=(M&255)>>>1}else{R=c[s+4>>2]|0}P=Q+2+R|0}M=P+L|0;do{if(M>>>0>100>>>0){F=mu(M<<2)|0;z=F;if((F|0)!=0){S=z;T=z;break}yu();S=0;T=0}else{S=D;T=0}}while(0);fr(S,w,x,c[g+4>>2]|0,G,G+(H<<2)|0,C,K,o,c[p>>2]|0,c[q>>2]|0,r,s,t,L);c[y>>2]=c[e>>2];_o(b,y,S,c[w>>2]|0,c[x>>2]|0,g,j);if((T|0)!=0){nu(T)}gm(t);gm(s);Xl(r);yl(c[B>>2]|0)|0;if((I|0)!=0){nu(I)}if((J|0)==0){i=d;return}nu(J);i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function er(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=C;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[8698]|0)==-1)){c[p>>2]=34792;c[p+4>>2]=52;c[p+8>>2]=0;Sl(34792,p,138)}p=(c[8699]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=tc(4)|0;J=I;Tt(J);Hb(I|0,29040,174)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=tc(4)|0;J=I;Tt(J);Hb(I|0,29040,174)}I=e;J=c[e>>2]|0;if(d){Gc[c[J+44>>2]&127](r,I);r=f;B=c[q>>2]|0;a[r]=B;B=B>>8;a[r+1|0]=B;B=B>>8;a[r+2|0]=B;B=B>>8;a[r+3|0]=B;Gc[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}jm(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];Nu(q|0,0,12)|0;gm(s)}else{Gc[c[J+40>>2]&127](u,I);u=f;B=c[t>>2]|0;a[u]=B;B=B>>8;a[u+1|0]=B;B=B>>8;a[u+2|0]=B;B=B>>8;a[u+3|0]=B;Gc[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){c[l+4>>2]=0;a[u]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}jm(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];Nu(t|0,0,12)|0;gm(v)}v=e;c[g>>2]=Kc[c[(c[v>>2]|0)+12>>2]&255](I)|0;c[h>>2]=Kc[c[(c[v>>2]|0)+16>>2]&255](I)|0;Gc[c[(c[e>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}$l(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];Nu(u|0,0,12)|0;Xl(w);Gc[c[(c[e>>2]|0)+24>>2]&127](x,I);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}jm(k,0);w=x;c[e>>2]=c[w>>2];c[e+4>>2]=c[w+4>>2];c[e+8>>2]=c[w+8>>2];Nu(w|0,0,12)|0;gm(x);K=Kc[c[(c[v>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[8700]|0)==-1)){c[o>>2]=34800;c[o+4>>2]=52;c[o+8>>2]=0;Sl(34800,o,138)}o=(c[8701]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=tc(4)|0;M=L;Tt(M);Hb(L|0,29040,174)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=tc(4)|0;M=L;Tt(M);Hb(L|0,29040,174)}L=H;M=c[H>>2]|0;if(d){Gc[c[M+44>>2]&127](z,L);z=f;B=c[y>>2]|0;a[z]=B;B=B>>8;a[z+1|0]=B;B=B>>8;a[z+2|0]=B;B=B>>8;a[z+3|0]=B;Gc[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}jm(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];Nu(y|0,0,12)|0;gm(A)}else{Gc[c[M+40>>2]&127](D,L);D=f;B=c[C>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;Gc[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){c[l+4>>2]=0;a[D]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}jm(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];Nu(l|0,0,12)|0;gm(E)}E=H;c[g>>2]=Kc[c[(c[E>>2]|0)+12>>2]&255](L)|0;c[h>>2]=Kc[c[(c[E>>2]|0)+16>>2]&255](L)|0;Gc[c[(c[H>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}$l(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];Nu(j|0,0,12)|0;Xl(F);Gc[c[(c[H>>2]|0)+24>>2]&127](G,L);H=k;if((a[H]&1)==0){c[k+4>>2]=0;a[H]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}jm(k,0);k=G;c[H>>2]=c[k>>2];c[H+4>>2]=c[k+4>>2];c[H+8>>2]=c[k+8>>2];Nu(k|0,0,12)|0;gm(G);K=Kc[c[(c[E>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function fr(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=i;y=(q|0)>0;z=n;A=n+1|0;B=n+8|0;C=n+4|0;n=0;D=g;while(1){a:do{switch(a[k+n|0]|0){case 0:{c[d>>2]=c[e>>2];E=D;break};case 1:{c[d>>2]=c[e>>2];g=Hc[c[(c[r>>2]|0)+44>>2]&127](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=g;E=D;break};case 3:{g=a[s]|0;F=(g&1)==0;if(F){G=(g&255)>>>1}else{G=c[t>>2]|0}if((G|0)==0){E=D;break a}if(F){H=t}else{H=c[u>>2]|0}F=c[H>>2]|0;g=c[e>>2]|0;c[e>>2]=g+4;c[g>>2]=F;E=D;break};case 2:{F=a[p]|0;g=(F&1)==0;if(g){I=(F&255)>>>1}else{I=c[w>>2]|0}if((I|0)==0|v){E=D;break a}if(g){J=(F&255)>>>1;K=w;L=w}else{F=c[x>>2]|0;J=c[w>>2]|0;K=F;L=F}F=K+(J<<2)|0;g=c[e>>2]|0;if((L|0)==(F|0)){M=g}else{N=(K+(J-1<<2)+(-L|0)|0)>>>2;O=g;P=L;while(1){c[O>>2]=c[P>>2];Q=P+4|0;if((Q|0)==(F|0)){break}O=O+4|0;P=Q}M=g+(N+1<<2)|0}c[e>>2]=M;E=D;break};case 4:{P=c[e>>2]|0;O=j?D+4|0:D;F=O;while(1){if(!(F>>>0<h>>>0)){break}if(Ic[c[(c[o>>2]|0)+12>>2]&127](i,2048,c[F>>2]|0)|0){F=F+4|0}else{break}}if(y){do{if(F>>>0>O>>>0){N=F;g=q;Q=c[e>>2]|0;while(1){R=N-4|0;S=Q+4|0;c[Q>>2]=c[R>>2];T=g-1|0;U=(T|0)>0;if(R>>>0>O>>>0&U){N=R;g=T;Q=S}else{break}}c[e>>2]=S;if(U){V=T;W=R;X=34;break}Q=c[e>>2]|0;c[e>>2]=Q+4;Y=Q;Z=R}else{V=q;W=F;X=34}}while(0);do{if((X|0)==34){X=0;Q=Hc[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;g=c[e>>2]|0;N=g+4|0;c[e>>2]=N;if((V|0)>0){_=V;$=g;aa=N}else{Y=g;Z=W;break}while(1){c[$>>2]=Q;N=_-1|0;if((N|0)>0){_=N;$=aa;aa=aa+4|0}else{break}}c[e>>2]=g+(V+1<<2);Y=g+(V<<2)|0;Z=W}}while(0);c[Y>>2]=l;ba=Z}else{ba=F}if((ba|0)==(O|0)){Q=Hc[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;N=c[e>>2]|0;ca=N+4|0;c[e>>2]=ca;c[N>>2]=Q;da=ca}else{ca=a[z]|0;Q=(ca&1)==0;if(Q){ea=(ca&255)>>>1}else{ea=c[C>>2]|0}if((ea|0)==0){fa=ba;ga=0;ha=0;ia=-1}else{if(Q){ja=A}else{ja=c[B>>2]|0}fa=ba;ga=0;ha=0;ia=a[ja]|0}while(1){do{if((ga|0)==(ia|0)){Q=c[e>>2]|0;c[e>>2]=Q+4;c[Q>>2]=m;Q=ha+1|0;ca=a[z]|0;N=(ca&1)==0;if(N){ka=(ca&255)>>>1}else{ka=c[C>>2]|0}if(!(Q>>>0<ka>>>0)){la=ia;ma=Q;na=0;break}if(N){oa=A}else{oa=c[B>>2]|0}if((a[oa+Q|0]|0)==127){la=-1;ma=Q;na=0;break}if(N){pa=A}else{pa=c[B>>2]|0}la=a[pa+Q|0]|0;ma=Q;na=0}else{la=ia;ma=ha;na=ga}}while(0);g=fa-4|0;Q=c[g>>2]|0;N=c[e>>2]|0;c[e>>2]=N+4;c[N>>2]=Q;if((g|0)==(O|0)){break}else{fa=g;ga=na+1|0;ha=ma;ia=la}}da=c[e>>2]|0}if((P|0)==(da|0)){E=O;break a}F=da-4|0;if(F>>>0>P>>>0){qa=P;ra=F}else{E=O;break a}while(1){F=c[qa>>2]|0;c[qa>>2]=c[ra>>2];c[ra>>2]=F;F=qa+4|0;g=ra-4|0;if(F>>>0<g>>>0){qa=F;ra=g}else{E=O;break}}break};default:{E=D}}}while(0);O=n+1|0;if(O>>>0<4>>>0){n=O;D=E}else{break}}E=a[s]|0;s=(E&1)==0;if(s){sa=(E&255)>>>1}else{sa=c[t>>2]|0}if(sa>>>0>1>>>0){if(s){ta=(E&255)>>>1;ua=t;va=t}else{E=c[u>>2]|0;ta=c[t>>2]|0;ua=E;va=E}E=va+4|0;va=ua+(ta<<2)|0;t=c[e>>2]|0;if((E|0)==(va|0)){wa=t}else{u=(ua+(ta-1<<2)+(-E|0)|0)>>>2;ta=t;ua=E;while(1){c[ta>>2]=c[ua>>2];E=ua+4|0;if((E|0)==(va|0)){break}else{ta=ta+4|0;ua=E}}wa=t+(u+1<<2)|0}c[e>>2]=wa}wa=f&176;if((wa|0)==16){return}else if((wa|0)==32){c[d>>2]=c[e>>2];return}else{c[d>>2]=b;return}}function gr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;d=i;i=i+528|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=d+32|0;o=d+40|0;p=d+48|0;q=d+64|0;r=d+80|0;s=d+96|0;t=d+104|0;u=d+504|0;v=d+512|0;w=d+520|0;pm(l,g);x=l|0;y=c[x>>2]|0;if(!((c[8582]|0)==-1)){c[k>>2]=34328;c[k+4>>2]=52;c[k+8>>2]=0;Sl(34328,k,138)}k=(c[8583]|0)-1|0;z=c[y+8>>2]|0;do{if((c[y+12>>2]|0)-z>>2>>>0>k>>>0){A=c[z+(k<<2)>>2]|0;if((A|0)==0){break}B=A;C=j;D=a[C]|0;E=(D&1)==0;if(E){F=(D&255)>>>1}else{F=c[j+4>>2]|0}if((F|0)==0){G=0}else{if(E){H=j+4|0}else{H=c[j+8>>2]|0}E=c[H>>2]|0;G=(E|0)==(Hc[c[(c[A>>2]|0)+44>>2]&127](B,45)|0)}Nu(p|0,0,12)|0;A=q;Nu(A|0,0,12)|0;E=r;Nu(E|0,0,12)|0;er(f,G,l,m,n,o,p,q,r,s);D=t|0;I=a[C]|0;J=(I&1)==0;if(J){K=(I&255)>>>1}else{K=c[j+4>>2]|0}L=c[s>>2]|0;if((K|0)>(L|0)){if(J){M=(I&255)>>>1}else{M=c[j+4>>2]|0}J=a[E]|0;if((J&1)==0){N=(J&255)>>>1}else{N=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){O=(J&255)>>>1}else{O=c[q+4>>2]|0}P=N+(M-L<<1|1)+O|0}else{J=a[E]|0;if((J&1)==0){Q=(J&255)>>>1}else{Q=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){R=(J&255)>>>1}else{R=c[q+4>>2]|0}P=Q+2+R|0}J=P+L|0;do{if(J>>>0>100>>>0){A=mu(J<<2)|0;E=A;if((A|0)!=0){S=E;T=E;U=I;break}yu();S=0;T=0;U=a[C]|0}else{S=D;T=0;U=I}}while(0);if((U&1)==0){V=(U&255)>>>1;W=j+4|0}else{V=c[j+4>>2]|0;W=c[j+8>>2]|0}fr(S,u,v,c[g+4>>2]|0,W,W+(V<<2)|0,B,G,m,c[n>>2]|0,c[o>>2]|0,p,q,r,L);c[w>>2]=c[e>>2];_o(b,w,S,c[u>>2]|0,c[v>>2]|0,g,h);if((T|0)==0){gm(r);gm(q);Xl(p);X=c[x>>2]|0;Y=X|0;Z=yl(Y)|0;i=d;return}nu(T);gm(r);gm(q);Xl(p);X=c[x>>2]|0;Y=X|0;Z=yl(Y)|0;i=d;return}}while(0);d=tc(4)|0;Tt(d);Hb(d|0,29040,174)}function hr(a){a=a|0;wl(a|0);tu(a);return}function ir(a){a=a|0;wl(a|0);return}function jr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=vc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function kr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+16|0;j=d|0;k=j;Nu(k|0,0,12)|0;l=a[h]|0;if((l&1)==0){m=(l&255)>>>1;n=h+1|0;o=h+1|0}else{l=c[h+8>>2]|0;m=c[h+4>>2]|0;n=l;o=l}l=o+m|0;do{if(n>>>0<l>>>0){m=n;do{am(j,a[m]|0);m=m+1|0;}while(m>>>0<l>>>0);m=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){p=m;q=10;break}r=c[j+8>>2]|0;s=m}else{p=(e|0)==-1?-1:e<<1;q=10}}while(0);if((q|0)==10){r=j+1|0;s=p}p=rb(s|0,f|0,g|0,r|0)|0;Nu(b|0,0,12)|0;r=Lu(p|0)|0;g=p+r|0;if((r|0)>0){t=p}else{Xl(j);i=d;return}do{am(b,a[t]|0);t=t+1|0;}while(t>>>0<g>>>0);Xl(j);i=d;return}function lr(a,b){a=a|0;b=b|0;Yb(((b|0)==-1?-1:b<<1)|0)|0;return}function mr(a){a=a|0;wl(a|0);tu(a);return}function nr(a){a=a|0;wl(a|0);return}function or(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=vc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function pr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;d=i;i=i+240|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=d+224|0;t=d+232|0;u=r;Nu(u|0,0,12)|0;c[s+4>>2]=0;c[s>>2]=25016;v=a[h]|0;if((v&1)==0){w=(v&255)>>>1;x=h+4|0;y=h+4|0}else{v=c[h+8>>2]|0;w=c[h+4>>2]|0;x=v;y=v}v=y+(w<<2)|0;w=k|0;a:do{if(x>>>0<v>>>0){y=s|0;h=s;z=k+32|0;A=x;B=25016;while(1){c[m>>2]=A;C=(Oc[c[B+12>>2]&63](y,j,A,v,m,w,z,l)|0)==2;D=c[m>>2]|0;if(C|(D|0)==(A|0)){break}if(w>>>0<(c[l>>2]|0)>>>0){C=w;do{am(r,a[C]|0);C=C+1|0;}while(C>>>0<(c[l>>2]|0)>>>0);E=c[m>>2]|0}else{E=D}if(!(E>>>0<v>>>0)){break a}A=E;B=c[h>>2]|0}Kq(7984)}}while(0);wl(s|0);if((a[u]&1)==0){F=r+1|0}else{F=c[r+8>>2]|0}u=rb(((e|0)==-1?-1:e<<1)|0,f|0,g|0,F|0)|0;Nu(b|0,0,12)|0;c[t+4>>2]=0;c[t>>2]=24960;F=Lu(u|0)|0;g=u+F|0;if((F|0)<=0){G=t|0;wl(G);Xl(r);i=d;return}F=t|0;f=t;e=g;s=o|0;E=o+128|0;o=u;u=24960;while(1){c[q>>2]=o;v=(Oc[c[u+16>>2]&63](F,n,o,(e-o|0)>32?o+32|0:g,q,s,E,p)|0)==2;m=c[q>>2]|0;if(v|(m|0)==(o|0)){break}if(s>>>0<(c[p>>2]|0)>>>0){v=s;do{km(b,c[v>>2]|0);v=v+4|0;}while(v>>>0<(c[p>>2]|0)>>>0);H=c[q>>2]|0}else{H=m}if(!(H>>>0<g>>>0)){I=37;break}o=H;u=c[f>>2]|0}if((I|0)==37){G=t|0;wl(G);Xl(r);i=d;return}Kq(7984)}function qr(a,b){a=a|0;b=b|0;Yb(((b|0)==-1?-1:b<<1)|0)|0;return}function rr(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=24480;d=b+8|0;e=c[d>>2]|0;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);if((e|0)==(c[8226]|0)){f=b|0;wl(f);return}qb(c[d>>2]|0);f=b|0;wl(f);return}function sr(a){a=a|0;a=tc(8)|0;zl(a,15912);c[a>>2]=23416;Hb(a|0,29072,74)}function tr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=24736;d=b+8|0;I=b+12|0;J=b+136|0;a[J]=1;K=b+24|0;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0;}while((J|0)!=0);Vl(b+144|0,15576,1);J=c[d>>2]|0;d=c[I>>2]|0;if((d|0)!=(J|0)){c[I>>2]=d+(~((d-4+(-J|0)|0)>>>2)<<2)}c[8259]=0;c[8258]=24440;if(!((c[8504]|0)==-1)){c[G>>2]=34016;c[G+4>>2]=52;c[G+8>>2]=0;Sl(34016,G,138)}ur(b,33032,(c[8505]|0)-1|0);c[8257]=0;c[8256]=24400;if(!((c[8502]|0)==-1)){c[F>>2]=34008;c[F+4>>2]=52;c[F+8>>2]=0;Sl(34008,F,138)}ur(b,33024,(c[8503]|0)-1|0);c[8309]=0;c[8308]=24848;c[8310]=0;a[33244]=0;c[8310]=c[(pb()|0)>>2];if(!((c[8584]|0)==-1)){c[E>>2]=34336;c[E+4>>2]=52;c[E+8>>2]=0;Sl(34336,E,138)}ur(b,33232,(c[8585]|0)-1|0);c[8307]=0;c[8306]=24768;if(!((c[8582]|0)==-1)){c[D>>2]=34328;c[D+4>>2]=52;c[D+8>>2]=0;Sl(34328,D,138)}ur(b,33224,(c[8583]|0)-1|0);c[8261]=0;c[8260]=24536;if(!((c[8508]|0)==-1)){c[C>>2]=34032;c[C+4>>2]=52;c[C+8>>2]=0;Sl(34032,C,138)}ur(b,33040,(c[8509]|0)-1|0);c[5749]=0;c[5748]=24480;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);c[5750]=c[8226];if(!((c[8506]|0)==-1)){c[B>>2]=34024;c[B+4>>2]=52;c[B+8>>2]=0;Sl(34024,B,138)}ur(b,22992,(c[8507]|0)-1|0);c[8263]=0;c[8262]=24592;if(!((c[8510]|0)==-1)){c[A>>2]=34040;c[A+4>>2]=52;c[A+8>>2]=0;Sl(34040,A,138)}ur(b,33048,(c[8511]|0)-1|0);c[8265]=0;c[8264]=24648;if(!((c[8512]|0)==-1)){c[z>>2]=34048;c[z+4>>2]=52;c[z+8>>2]=0;Sl(34048,z,138)}ur(b,33056,(c[8513]|0)-1|0);c[8239]=0;c[8238]=23944;a[32960]=46;a[32961]=44;Nu(32964,0,12)|0;if(!((c[8488]|0)==-1)){c[y>>2]=33952;c[y+4>>2]=52;c[y+8>>2]=0;Sl(33952,y,138)}ur(b,32952,(c[8489]|0)-1|0);c[5741]=0;c[5740]=23896;c[5742]=46;c[5743]=44;Nu(22976,0,12)|0;if(!((c[8486]|0)==-1)){c[x>>2]=33944;c[x+4>>2]=52;c[x+8>>2]=0;Sl(33944,x,138)}ur(b,22960,(c[8487]|0)-1|0);c[8255]=0;c[8254]=24328;if(!((c[8500]|0)==-1)){c[w>>2]=34e3;c[w+4>>2]=52;c[w+8>>2]=0;Sl(34e3,w,138)}ur(b,33016,(c[8501]|0)-1|0);c[8253]=0;c[8252]=24256;if(!((c[8498]|0)==-1)){c[v>>2]=33992;c[v+4>>2]=52;c[v+8>>2]=0;Sl(33992,v,138)}ur(b,33008,(c[8499]|0)-1|0);c[8251]=0;c[8250]=24192;if(!((c[8496]|0)==-1)){c[u>>2]=33984;c[u+4>>2]=52;c[u+8>>2]=0;Sl(33984,u,138)}ur(b,33e3,(c[8497]|0)-1|0);c[8249]=0;c[8248]=24128;if(!((c[8494]|0)==-1)){c[t>>2]=33976;c[t+4>>2]=52;c[t+8>>2]=0;Sl(33976,t,138)}ur(b,32992,(c[8495]|0)-1|0);c[8319]=0;c[8318]=25776;if(!((c[8704]|0)==-1)){c[s>>2]=34816;c[s+4>>2]=52;c[s+8>>2]=0;Sl(34816,s,138)}ur(b,33272,(c[8705]|0)-1|0);c[8317]=0;c[8316]=25712;if(!((c[8702]|0)==-1)){c[r>>2]=34808;c[r+4>>2]=52;c[r+8>>2]=0;Sl(34808,r,138)}ur(b,33264,(c[8703]|0)-1|0);c[8315]=0;c[8314]=25648;if(!((c[8700]|0)==-1)){c[q>>2]=34800;c[q+4>>2]=52;c[q+8>>2]=0;Sl(34800,q,138)}ur(b,33256,(c[8701]|0)-1|0);c[8313]=0;c[8312]=25584;if(!((c[8698]|0)==-1)){c[p>>2]=34792;c[p+4>>2]=52;c[p+8>>2]=0;Sl(34792,p,138)}ur(b,33248,(c[8699]|0)-1|0);c[8237]=0;c[8236]=23600;if(!((c[8476]|0)==-1)){c[o>>2]=33904;c[o+4>>2]=52;c[o+8>>2]=0;Sl(33904,o,138)}ur(b,32944,(c[8477]|0)-1|0);c[8235]=0;c[8234]=23560;if(!((c[8474]|0)==-1)){c[n>>2]=33896;c[n+4>>2]=52;c[n+8>>2]=0;Sl(33896,n,138)}ur(b,32936,(c[8475]|0)-1|0);c[8233]=0;c[8232]=23520;if(!((c[8472]|0)==-1)){c[m>>2]=33888;c[m+4>>2]=52;c[m+8>>2]=0;Sl(33888,m,138)}ur(b,32928,(c[8473]|0)-1|0);c[8231]=0;c[8230]=23480;if(!((c[8470]|0)==-1)){c[l>>2]=33880;c[l+4>>2]=52;c[l+8>>2]=0;Sl(33880,l,138)}ur(b,32920,(c[8471]|0)-1|0);c[5737]=0;c[5736]=23800;c[5738]=23848;if(!((c[8484]|0)==-1)){c[k>>2]=33936;c[k+4>>2]=52;c[k+8>>2]=0;Sl(33936,k,138)}ur(b,22944,(c[8485]|0)-1|0);c[5733]=0;c[5732]=23704;c[5734]=23752;if(!((c[8482]|0)==-1)){c[j>>2]=33928;c[j+4>>2]=52;c[j+8>>2]=0;Sl(33928,j,138)}ur(b,22928,(c[8483]|0)-1|0);c[5729]=0;c[5728]=24704;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);c[5730]=c[8226];c[5728]=23672;if(!((c[8480]|0)==-1)){c[h>>2]=33920;c[h+4>>2]=52;c[h+8>>2]=0;Sl(33920,h,138)}ur(b,22912,(c[8481]|0)-1|0);c[5725]=0;c[5724]=24704;do{if((a[34896]|0)==0){if((wb(34896)|0)==0){break}c[8226]=Ya(2147483647,15576,0)|0}}while(0);c[5726]=c[8226];c[5724]=23640;if(!((c[8478]|0)==-1)){c[g>>2]=33912;c[g+4>>2]=52;c[g+8>>2]=0;Sl(33912,g,138)}ur(b,22896,(c[8479]|0)-1|0);c[8247]=0;c[8246]=24032;if(!((c[8492]|0)==-1)){c[f>>2]=33968;c[f+4>>2]=52;c[f+8>>2]=0;Sl(33968,f,138)}ur(b,32984,(c[8493]|0)-1|0);c[8245]=0;c[8244]=23992;if(!((c[8490]|0)==-1)){c[H>>2]=33960;c[H+4>>2]=52;c[H+8>>2]=0;Sl(33960,H,138)}ur(b,32976,(c[8491]|0)-1|0);i=e;return}function ur(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;xl(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(i>>>0>d>>>0){j=h}else{k=d+1|0;if(i>>>0<k>>>0){yt(e,k-i|0);j=c[g>>2]|0;break}if(!(i>>>0>k>>>0)){j=h;break}l=h+(k<<2)|0;if((a|0)==(l|0)){j=h;break}c[f>>2]=a+(~((a-4+(-l|0)|0)>>>2)<<2);j=h}}while(0);h=c[j+(d<<2)>>2]|0;if((h|0)==0){m=j;n=m+(d<<2)|0;c[n>>2]=b;return}yl(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function vr(a){a=a|0;wr(a);tu(a);return}function wr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=24736;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{yl(e|0)|0;j=c[d>>2]|0;k=c[f>>2]|0}e=h+1|0;if(e>>>0<j-k>>2>>>0){h=e;i=k;g=j}else{break}}}Xl(b+144|0);j=c[f>>2]|0;if((j|0)==0){l=b|0;wl(l);return}f=c[d>>2]|0;if((f|0)!=(j|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((b+24|0)==(j|0)){a[b+136|0]=0;l=b|0;wl(l);return}else{tu(j);l=b|0;wl(l);return}}function xr(){var b=0,d=0;if((a[34880]|0)!=0){b=c[8218]|0;return b|0}if((wb(34880)|0)==0){b=c[8218]|0;return b|0}do{if((a[34888]|0)==0){if((wb(34888)|0)==0){break}tr(33064,1);c[8222]=33064;c[8220]=32888}}while(0);d=c[c[8220]>>2]|0;c[8224]=d;xl(d|0);c[8218]=32896;b=c[8218]|0;return b|0}function yr(a){a=a|0;var b=0;b=c[(xr()|0)>>2]|0;c[a>>2]=b;xl(b|0);return}function zr(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;xl(d|0);return}function Ar(a){a=a|0;yl(c[a>>2]|0)|0;return}function Br(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=52;c[e+8>>2]=0;Sl(a,e,138)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=tc(4)|0;h=g;Tt(h);Hb(g|0,29040,174);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=tc(4)|0;h=g;Tt(h);Hb(g|0,29040,174);return 0}else{i=d;return f|0}return 0}function Cr(a){a=a|0;wl(a|0);tu(a);return}function Dr(a){a=a|0;if((a|0)==0){return}Fc[c[(c[a>>2]|0)+4>>2]&511](a);return}function Er(a){a=a|0;c[a+4>>2]=(H=c[8514]|0,c[8514]=H+1,H)+1;return}function Fr(a){a=a|0;wl(a|0);tu(a);return}function Gr(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(!(e>>>0<128>>>0)){f=0;return f|0}f=(b[(c[(pb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function Hr(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(pb()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function Ir(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0){if(!((b[(c[(pb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0)){g=h;i=7;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=7;break}else{h=e}}if((i|0)==7){return g|0}return 0}function Jr(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=e;while(1){if((a|0)==(f|0)){g=f;h=7;break}e=c[a>>2]|0;if(!(e>>>0<128>>>0)){g=a;h=7;break}if((b[(c[(pb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0){g=a;h=7;break}else{a=a+4|0}}if((h|0)==7){return g|0}return 0}function Kr(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(wc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function Lr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(wc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function Mr(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(xc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function Nr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(xc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function Or(a,b){a=a|0;b=b|0;return b<<24>>24|0}function Pr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function Qr(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function Rr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function Sr(b){b=b|0;var d=0;c[b>>2]=24848;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}uu(d)}}while(0);wl(b|0);tu(b);return}function Tr(b){b=b|0;var d=0;c[b>>2]=24848;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}uu(d)}}while(0);wl(b|0);return}function Ur(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(wc()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function Vr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(wc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function Wr(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(xc()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function Xr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(xc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function Yr(a,b){a=a|0;b=b|0;return b|0}function Zr(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function _r(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24<0?c:b)|0}function $r(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24<0?e:f;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function as(a){a=a|0;wl(a|0);tu(a);return}function bs(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function cs(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function ds(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function es(a){a=a|0;return 1}function fs(a){a=a|0;return 1}function gs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function hs(a){a=a|0;return 1}function is(a){a=a|0;rr(a);tu(a);return}function js(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=e;while(1){if((p|0)==(f|0)){q=f;break}if((c[p>>2]|0)==0){q=p;break}else{p=p+4|0}}c[k>>2]=h;c[g>>2]=e;a:do{if((e|0)==(f|0)|(h|0)==(j|0)){r=e}else{p=d;s=j;t=b+8|0;u=o|0;v=h;w=e;x=q;while(1){y=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=y;y=bc(c[t>>2]|0)|0;z=Mt(v,g,x-w>>2,s-v|0,d)|0;if((y|0)!=0){bc(y|0)|0}if((z|0)==(-1|0)){A=15;break}else if((z|0)==0){B=1;A=50;break}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){A=48;break}if((x|0)==(f|0)){C=f;D=y;E=c[g>>2]|0}else{y=bc(c[t>>2]|0)|0;z=Lt(u,0,d)|0;if((y|0)!=0){bc(y|0)|0}if((z|0)==-1){B=2;A=50;break}y=c[k>>2]|0;if(z>>>0>(s-y|0)>>>0){B=1;A=50;break}b:do{if((z|0)!=0){F=z;G=u;H=y;while(1){I=a[G]|0;c[k>>2]=H+1;a[H]=I;I=F-1|0;if((I|0)==0){break b}F=I;G=G+1|0;H=c[k>>2]|0}}}while(0);y=(c[g>>2]|0)+4|0;c[g>>2]=y;z=y;while(1){if((z|0)==(f|0)){J=f;break}if((c[z>>2]|0)==0){J=z;break}else{z=z+4|0}}C=J;D=c[k>>2]|0;E=y}if((E|0)==(f|0)|(D|0)==(j|0)){r=E;break a}else{v=D;w=E;x=C}}if((A|0)==15){c[k>>2]=v;c:do{if((w|0)==(c[g>>2]|0)){K=w}else{x=w;u=v;while(1){s=c[x>>2]|0;p=bc(c[t>>2]|0)|0;z=Lt(u,s,n)|0;if((p|0)!=0){bc(p|0)|0}if((z|0)==-1){K=x;break c}p=(c[k>>2]|0)+z|0;c[k>>2]=p;z=x+4|0;if((z|0)==(c[g>>2]|0)){K=z;break}else{x=z;u=p}}}}while(0);c[g>>2]=K;B=2;i=l;return B|0}else if((A|0)==48){r=c[g>>2]|0;break}else if((A|0)==50){i=l;return B|0}}}while(0);B=(r|0)!=(f|0)|0;i=l;return B|0}function ks(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+8|0;m=l|0;n=m;o=e;while(1){if((o|0)==(f|0)){p=f;break}if((a[o]|0)==0){p=o;break}else{o=o+1|0}}c[k>>2]=h;c[g>>2]=e;a:do{if((e|0)==(f|0)|(h|0)==(j|0)){q=e}else{o=d;r=j;s=b+8|0;t=h;u=e;v=p;while(1){w=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=w;x=v;w=bc(c[s>>2]|0)|0;y=It(t,g,x-u|0,r-t>>2,d)|0;if((w|0)!=0){bc(w|0)|0}if((y|0)==(-1|0)){z=15;break}else if((y|0)==0){A=2;z=49;break}w=(c[k>>2]|0)+(y<<2)|0;c[k>>2]=w;if((w|0)==(j|0)){z=47;break}y=c[g>>2]|0;if((v|0)==(f|0)){B=f;C=w;D=y}else{E=bc(c[s>>2]|0)|0;F=Ht(w,y,1,d)|0;if((E|0)!=0){bc(E|0)|0}if((F|0)!=0){A=2;z=49;break}c[k>>2]=(c[k>>2]|0)+4;F=(c[g>>2]|0)+1|0;c[g>>2]=F;E=F;while(1){if((E|0)==(f|0)){G=f;break}if((a[E]|0)==0){G=E;break}else{E=E+1|0}}B=G;C=c[k>>2]|0;D=F}if((D|0)==(f|0)|(C|0)==(j|0)){q=D;break a}else{t=C;u=D;v=B}}if((z|0)==15){c[k>>2]=t;b:do{if((u|0)==(c[g>>2]|0)){H=u}else{v=t;r=u;while(1){o=bc(c[s>>2]|0)|0;E=Ht(v,r,x-r|0,n)|0;if((o|0)!=0){bc(o|0)|0}if((E|0)==0){I=r+1|0}else if((E|0)==(-1|0)){z=26;break}else if((E|0)==(-2|0)){z=27;break}else{I=r+E|0}E=(c[k>>2]|0)+4|0;c[k>>2]=E;if((I|0)==(c[g>>2]|0)){H=I;break b}else{v=E;r=I}}if((z|0)==26){c[g>>2]=r;A=2;i=l;return A|0}else if((z|0)==27){c[g>>2]=r;A=1;i=l;return A|0}}}while(0);c[g>>2]=H;A=(H|0)!=(f|0)|0;i=l;return A|0}else if((z|0)==47){q=c[g>>2]|0;break}else if((z|0)==49){i=l;return A|0}}}while(0);A=(q|0)!=(f|0)|0;i=l;return A|0}function ls(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=bc(c[b+8>>2]|0)|0;b=Lt(e,0,d)|0;if((j|0)!=0){bc(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function ms(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=bc(c[b>>2]|0)|0;d=Kt(0,0,4)|0;if((a|0)!=0){bc(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=bc(d|0)|0;if((b|0)==0){e=0;return e|0}bc(b|0)|0;e=0;return e|0}function ns(a){a=a|0;return 0}function os(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=bc(c[i>>2]|0)|0;l=Gt(a,h-a|0,b)|0;if((k|0)!=0){bc(k|0)|0}if((l|0)==0){m=1;n=a+1|0}else if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;o=15;break}else{m=l;n=a+l|0}l=m+d|0;k=j+1|0;if(k>>>0>=f>>>0|(n|0)==(e|0)){g=l;o=15;break}else{a=n;d=l;j=k}}if((o|0)==15){return g|0}return 0}function ps(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;do{if((b|0)==0){d=1}else{a=bc(b|0)|0;if((a|0)==0){d=4;break}bc(a|0)|0;d=4}}while(0);return d|0}function qs(a){a=a|0;wl(a|0);tu(a);return}function rs(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=ss(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}



function Bh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0;e=i;f=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+48>>2]|0;k=c[f+52>>2]|0;l=c[f+56>>2]|0;m=c[f+72>>2]|0;n=c[f+80>>2]|0;o=c[f+156>>2]|0;p=c[f+160>>2]|0;q=0;r=1;while(1){if((r|0)>(g|0)){break}if((a[n+r|0]|0)==5){h[p+(r<<3)>>3]=0.0}else{s=c[m+(d+r<<2)>>2]|0;if((s|0)<=(d|0)){t=-0.0- +h[b+(s<<3)>>3]}else{u=c[j+(s-d+1<<2)>>2]|0;t=0.0;v=c[j+(s-d<<2)>>2]|0;while(1){if((v|0)>=(u|0)){break}t=t+ +h[b+(c[k+(v<<2)>>2]<<3)>>3]*+h[l+(v<<3)>>3];v=v+1|0}}if(t!=0.0){v=q+1|0;q=v;c[o+(v<<2)>>2]=r}h[p+(r<<3)>>3]=t}r=r+1|0}c[f+152>>2]=q;i=e;return}function Ch(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0,v=0;e=i;f=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+60>>2]|0;k=c[f+64>>2]|0;l=c[f+68>>2]|0;m=c[f+76>>2]|0;n=c[f+80>>2]|0;o=c[f+156>>2]|0;p=c[f+160>>2]|0;q=1;while(1){if((q|0)>(g|0)){break}h[p+(q<<3)>>3]=0.0;q=q+1|0}r=1;while(1){if((r|0)>(d|0)){break}s=+h[b+(r<<3)>>3];if(!(s==0.0)){q=(c[m+(r<<2)>>2]|0)-d|0;do{if((q|0)>=1){if((a[n+q|0]|0)==5){break}t=p+(q<<3)|0;h[t>>3]=+h[t>>3]-s}}while(0);t=c[j+(r+1<<2)>>2]|0;u=c[j+(r<<2)>>2]|0;while(1){if((u|0)>=(t|0)){break}q=(c[m+(d+(c[k+(u<<2)>>2]|0)<<2)>>2]|0)-d|0;do{if((q|0)>=1){if((a[n+q|0]|0)==5){break}v=p+(q<<3)|0;h[v>>3]=+h[v>>3]+s*+h[l+(u<<3)>>3]}}while(0);u=u+1|0}}r=r+1|0}r=0;q=1;while(1){if((q|0)>(g|0)){break}if(+h[p+(q<<3)>>3]!=0.0){l=r+1|0;r=l;c[o+(l<<2)>>2]=q}q=q+1|0}c[f+152>>2]=r;i=e;return}function Dh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0;e=i;f=a;a=d;d=c[f>>2]|0;g=c[f+204>>2]|0;Eh(f,b,a,c[f+204>>2]|0);if((c[f+84>>2]|0)!=0){j=1}else{Ji(9328,7e3,745);j=1}Bd(c[f+88>>2]|0,g);f=1;while(1){if((f|0)>(d|0)){break}j=a+(f<<3)|0;h[j>>3]=+h[j>>3]+ +h[g+(f<<3)>>3];f=f+1|0}i=e;return}function Eh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0;f=i;g=a;a=b;b=d;d=e;e=c[g>>2]|0;j=c[g+4>>2]|0;k=c[g+48>>2]|0;l=c[g+52>>2]|0;m=c[g+56>>2]|0;n=c[g+72>>2]|0;g=1;while(1){if((g|0)>(e|0)){break}o=c[n+(g<<2)>>2]|0;if(1<=(o|0)){if((o|0)<=(e+j|0)){p=1}else{q=5}}else{q=5}if((q|0)==5){q=0;Ji(9888,7e3,708);p=1}r=+h[a+(g<<3)>>3];if((o|0)<=(e|0)){r=r- +h[b+(o<<3)>>3]}else{s=c[k+(o-e+1<<2)>>2]|0;t=c[k+(o-e<<2)>>2]|0;while(1){if((t|0)>=(s|0)){break}r=r+ +h[m+(t<<3)>>3]*+h[b+(c[l+(t<<2)>>2]<<3)>>3];t=t+1|0}}h[d+(g<<3)>>3]=r;g=g+1|0}i=f;return}function Fh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;f=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+8>>2]|0;k=c[f+72>>2]|0;l=c[f+128>>2]|0;m=c[f+212>>2]|0;n=c[f+212>>2]|0;o=1;while(1){if((o|0)>(d|0)){break}p=c[k+(o<<2)>>2]|0;if(1<=(p|0)){if((p|0)<=(d+g|0)){q=1}else{r=5}}else{r=5}if((r|0)==5){r=0;Ji(9888,7e3,1037);q=1}if((a[j+p|0]|0)==1){h[b+(o<<3)>>3]=1.0}else{h[b+(o<<3)>>3]=(a[l+p|0]|0)!=0?1.0:0.0}o=o+1|0}q=1;while(1){if((q|0)>(g|0)){break}p=c[k+(d+q<<2)>>2]|0;if(1<=(p|0)){if((p|0)<=(d+g|0)){s=1}else{r=15}}else{r=15}if((r|0)==15){r=0;Ji(9888,7e3,1048);s=1}if((a[l+p|0]|0)!=0){if((a[j+p|0]|0)!=5){t=1}else{Ji(8256,7e3,1054);t=1}o=1;while(1){if((o|0)>(d|0)){break}h[n+(o<<3)>>3]=0.0;o=o+1|0}if((p|0)<=(d|0)){h[n+(p<<3)>>3]=-1.0}else{u=c[f+48>>2]|0;v=c[f+52>>2]|0;w=c[f+56>>2]|0;x=c[u+(p-d+1<<2)>>2]|0;y=c[u+(p-d<<2)>>2]|0;while(1){if((y|0)>=(x|0)){break}h[n+(c[v+(y<<2)>>2]<<3)>>3]=+h[w+(y<<3)>>3];y=y+1|0}}if((c[f+84>>2]|0)!=0){z=1}else{Ji(9328,7e3,1075);z=1}Ad(c[f+88>>2]|0,m);o=1;while(1){if((o|0)>(d|0)){break}p=c[k+(o<<2)>>2]|0;if((a[j+p|0]|0)!=1){y=b+(o<<3)|0;h[y>>3]=+h[y>>3]+ +h[m+(o<<3)>>3]*+h[m+(o<<3)>>3]}o=o+1|0}}q=q+1|0}i=e;return}function Gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+20>>2]|0;g=c[e+72>>2]|0;j=c[e+208>>2]|0;k=1;while(1){if((k|0)>(b|0)){break}h[j+(k<<3)>>3]=+h[f+(c[g+(k<<2)>>2]<<3)>>3];k=k+1|0}Ku(a+8|0,j+8|0,b<<3)|0;if((c[e+84>>2]|0)!=0){l=1;m=l&1;n=e;o=n+88|0;p=c[o>>2]|0;q=a;Bd(p,q);r=e;s=j;t=a;Dh(r,s,t);i=d;return}Ji(9328,7e3,877);l=1;m=l&1;n=e;o=n+88|0;p=c[o>>2]|0;q=a;Bd(p,q);r=e;s=j;t=a;Dh(r,s,t);i=d;return}function Hh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+20>>2]|0;k=c[f+72>>2]|0;if(1<=(b|0)){if((b|0)<=(g|0)){l=1}else{m=3}}else{m=3}if((m|0)==3){Ji(8504,7e3,908);l=1}l=c[k+(d+b<<2)>>2]|0;if(1<=(l|0)){if((l|0)<=(d+g|0)){n=1}else{m=6}}else{m=6}if((m|0)==6){Ji(9888,7e3,912);n=1}o=+h[j+(l<<3)>>3];if((l|0)<=(d|0)){o=o- +h[a+(l<<3)>>3];p=o;i=e;return+p}j=c[f+48>>2]|0;n=c[f+52>>2]|0;m=c[f+56>>2]|0;f=c[j+(l-d+1<<2)>>2]|0;g=c[j+(l-d<<2)>>2]|0;while(1){if((g|0)>=(f|0)){break}o=o+ +h[m+(g<<3)>>3]*+h[a+(c[n+(g<<2)>>2]<<3)>>3];g=g+1|0}p=o;i=e;return+p}function Ih(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[e+48>>2]|0;j=c[e+52>>2]|0;k=c[e+56>>2]|0;l=c[e+72>>2]|0;m=c[e+208>>2]|0;n=1;while(1){if((n|0)>(b|0)){break}h[m+(n<<3)>>3]=0.0;n=n+1|0}n=1;while(1){if((n|0)>(f|0)){break}o=c[l+(b+n<<2)>>2]|0;if(1<=(o|0)){if((o|0)<=(b+f|0)){p=1}else{q=9}}else{q=9}if((q|0)==9){q=0;Ji(9888,7e3,828);p=1}r=+yh(e,n);if(!(r==0.0)){if((o|0)<=(b|0)){s=m+(o<<3)|0;h[s>>3]=+h[s>>3]-r}else{s=c[g+(o-b+1<<2)>>2]|0;t=c[g+(o-b<<2)>>2]|0;while(1){if((t|0)>=(s|0)){break}o=m+(c[j+(t<<2)>>2]<<3)|0;h[o>>3]=+h[o>>3]+r*+h[k+(t<<3)>>3];t=t+1|0}}}n=n+1|0}Ku(a+8|0,m+8|0,b<<3)|0;if((c[e+84>>2]|0)!=0){u=1;v=u&1;w=e;x=w+88|0;y=c[x>>2]|0;z=a;Ad(y,z);A=e;B=m;C=a;zh(A,B,C);i=d;return}Ji(9328,7e3,847);u=1;v=u&1;w=e;x=w+88|0;y=c[x>>2]|0;z=a;Ad(y,z);A=e;B=m;C=a;zh(A,B,C);i=d;return}function Jh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;g=b;b=d;d=e;e=a;a=c[e>>2]|0;j=c[e+4>>2]|0;k=c[e+48>>2]|0;l=c[e+52>>2]|0;m=c[e+56>>2]|0;n=c[e+72>>2]|0;if(1<=(g|0)){if((g|0)<=(a|0)){o=1}else{p=3}}else{p=3}if((p|0)==3){Ji(10368,7e3,531);o=1}o=c[n+(g<<2)>>2]|0;if(1<=(o|0)){if((o|0)<=(a+j|0)){q=1}else{p=6}}else{p=6}if((p|0)==6){Ji(9888,7e3,535);q=1}if((o|0)<=(a|0)){r=1;c[b+4>>2]=o;h[d+8>>3]=1.0;s=r;i=f;return s|0}q=c[k+(o-a<<2)>>2]|0;r=(c[k+(o-a+1<<2)>>2]|0)-q|0;Ku(b+4|0,l+(q<<2)|0,r<<2)|0;Ku(d+8|0,m+(q<<3)|0,r<<3)|0;q=1;while(1){if((q|0)>(r|0)){break}h[d+(q<<3)>>3]=-0.0- +h[d+(q<<3)>>3];q=q+1|0}s=r;i=f;return s|0}function Kh(a,b,d,e,f,g,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0.0,aa=0.0;l=i;m=a;a=b;b=d;d=e;e=f;f=g;g=j;j=k;k=c[m>>2]|0;n=c[k>>2]|0;o=c[k+4>>2]|0;p=c[o+48>>2]|0;q=c[o+52>>2]|0;r=c[k+16>>2]|0;s=(c[o+8>>2]|0)+(r-1<<2)|0;t=(c[o+12>>2]|0)+(r-1<<2)|0;u=(c[o+16>>2]|0)+(r-1<<2)|0;v=c[k+20>>2]|0;w=c[k+24>>2]|0;x=(c[o+8>>2]|0)+(w-1<<2)|0;y=(c[o+12>>2]|0)+(w-1<<2)|0;z=(c[o+16>>2]|0)+(w-1<<2)|0;A=c[k+28>>2]|0;B=c[k+32>>2]|0;C=c[k+36>>2]|0;D=c[k+40>>2]|0;E=c[m+12>>2]|0;F=c[m+16>>2]|0;G=(c[o+8>>2]|0)+(F-1<<2)|0;H=(c[o+12>>2]|0)+(F-1<<2)|0;if(1<=(a|0)){if((a|0)<=(n|0)){I=1}else{J=3}}else{J=3}if((J|0)==3){Ji(8936,17544,181);I=1}I=1;while(1){if((I|0)>(n|0)){break}h[g+(I<<3)>>3]=0.0;I=I+1|0}if(0<=(b|0)){if((b|0)<=(n|0)){K=1}else{J=10}}else{J=10}if((J|0)==10){Ji(13136,17544,185);K=1}K=1;while(1){if((K|0)>(b|0)){break}I=c[d+(K<<2)>>2]|0;if(1<=(I|0)){if((I|0)<=(n|0)){L=1}else{J=15}}else{J=15}if((J|0)==15){J=0;Ji(9840,17544,188);L=1}if(+h[g+(I<<3)>>3]==0.0){M=1}else{Ji(6936,17544,189);M=1}if(+h[e+(K<<3)>>3]!=0.0){N=1}else{Ji(5648,17544,190);N=1}h[g+(I<<3)>>3]=+h[e+(K<<3)>>3];K=K+1|0}c[k+28>>2]=c[m+20>>2];c[k+32>>2]=c[m+24>>2];ai(k,g);c[k+28>>2]=A;c[k+32>>2]=B;Lh(m,g);k=c[D+(a<<2)>>2]|0;e=c[B+(k<<2)>>2]|0;O=0.0;N=0;I=1;while(1){if((I|0)>(n|0)){break}P=+h[g+(I<<3)>>3];do{if(-2.220446049250313e-16<P){if(!(P<2.220446049250313e-16)){J=27;break}}else{J=27}}while(0);if((J|0)==27){J=0;if((I|0)==(e|0)){O=P}else{M=N+1|0;N=M;c[f+(M<<2)>>2]=I;h[g+(N<<3)>>3]=P}}I=I+1|0}M=c[x+(a<<2)>>2]|0;L=M;d=M+(c[y+(a<<2)>>2]|0)|0;while(1){if((L|0)>=(d|0)){break}I=c[p+(L<<2)>>2]|0;M=c[s+(I<<2)>>2]|0;Q=M;R=M+(c[t+(I<<2)>>2]|0)|0;while(1){if((c[p+(Q<<2)>>2]|0)==(a|0)){break}Q=Q+1|0}if((Q|0)<(R|0)){S=1}else{Ji(4512,17544,233);S=1}c[p+(Q<<2)>>2]=c[p+(R-1<<2)>>2];h[q+(Q<<3)>>3]=+h[q+(R-1<<3)>>3];M=t+(I<<2)|0;c[M>>2]=(c[M>>2]|0)-1;L=L+1|0}c[y+(a<<2)>>2]=0;if((N|0)>0){if((c[z+(a<<2)>>2]|0)<(N|0)){if(((c[o+28>>2]|0)-(c[o+24>>2]|0)|0)<(N|0)){ti(o,N);p=c[o+48>>2]|0;q=c[o+52>>2]|0}ui(o,w-1+a|0,N,0)}T=c[x+(a<<2)>>2]|0;Ku(p+(T<<2)|0,f+4|0,N<<2)|0;Ku(q+(T<<3)|0,g+8|0,N<<3)|0;c[y+(a<<2)>>2]=N}if(O==0.0){V=0}else{V=k}L=V;K=1;while(1){if((K|0)>(N|0)){break}I=c[f+(K<<2)>>2]|0;if((c[u+(I<<2)>>2]|0)==(c[t+(I<<2)>>2]|0)){V=(c[t+(I<<2)>>2]|0)+5|0;if(((c[o+28>>2]|0)-(c[o+24>>2]|0)|0)<(V|0)){ti(o,V);p=c[o+48>>2]|0;q=c[o+52>>2]|0}ui(o,r-1+I|0,V,0)}V=c[s+(I<<2)>>2]|0;S=t+(I<<2)|0;d=c[S>>2]|0;c[S>>2]=d+1;S=V+d|0;T=S;c[p+(S<<2)>>2]=a;h[q+(T<<3)>>3]=+h[g+(K<<3)>>3];if((L|0)<(c[A+(I<<2)>>2]|0)){L=c[A+(I<<2)>>2]|0}K=K+1|0}if((k|0)>=(L|0)){h[v+(e<<3)>>3]=O;if((k|0)>(L|0)){if(O==0.0){W=1}else{Ji(3696,17544,295);W=1}X=1;Y=X;i=l;return Y|0}do{if(-1.0e-5<O){if(!(O<1.0e-5)){break}X=2;Y=X;i=l;return Y|0}}while(0);X=0;Y=X;i=l;return Y|0}if((e|0)==(c[B+(k<<2)>>2]|0)){if((a|0)==(c[C+(k<<2)>>2]|0)){Z=1}else{J=73}}else{J=73}if((J|0)==73){Ji(2840,17544,315);Z=1}K=k;while(1){if((K|0)>=(L|0)){break}Z=c[B+(K+1<<2)>>2]|0;c[B+(K<<2)>>2]=Z;c[A+(Z<<2)>>2]=K;Z=c[C+(K+1<<2)>>2]|0;c[C+(K<<2)>>2]=Z;c[D+(Z<<2)>>2]=K;K=K+1|0}Z=L;W=a;c[C+(L<<2)>>2]=W;c[D+(W<<2)>>2]=Z;W=e;c[B+(L<<2)>>2]=W;c[A+(W<<2)>>2]=Z;Z=c[s+(e<<2)>>2]|0;W=Z;A=Z+(c[t+(e<<2)>>2]|0)|0;while(1){if((W|0)>=(A|0)){break}if((c[D+(c[p+(W<<2)>>2]<<2)>>2]|0)<(L|0)){J=81;break}W=W+1|0}if((W|0)==(A|0)){h[v+(e<<3)>>3]=O;do{if(-1.0e-5<O){if(!(O<1.0e-5)){break}X=2;Y=X;i=l;return Y|0}}while(0);X=0;Y=X;i=l;return Y|0}D=1;while(1){if((D|0)>(n|0)){break}h[j+(D<<3)>>3]=0.0;D=D+1|0}h[j+(a<<3)>>3]=O;Z=c[s+(e<<2)>>2]|0;W=Z;A=Z+(c[t+(e<<2)>>2]|0)|0;while(1){if((W|0)>=(A|0)){break}Z=c[p+(W<<2)>>2]|0;D=Z;h[j+(Z<<3)>>3]=+h[q+(W<<3)>>3];Z=c[x+(D<<2)>>2]|0;S=Z;d=Z+(c[y+(D<<2)>>2]|0)|0;while(1){if((c[p+(S<<2)>>2]|0)==(e|0)){break}S=S+1|0}if((S|0)<(d|0)){_=1}else{Ji(2040,17544,368);_=1}c[p+(S<<2)>>2]=c[p+(d-1<<2)>>2];h[q+(S<<3)>>3]=+h[q+(d-1<<3)>>3];Z=y+(D<<2)|0;c[Z>>2]=(c[Z>>2]|0)-1;W=W+1|0}c[t+(e<<2)>>2]=0;W=0;K=k;while(1){if((K|0)>=(L|0)){break}I=c[B+(K<<2)>>2]|0;D=c[C+(K<<2)>>2]|0;P=+h[j+(D<<3)>>3];do{if(-2.220446049250313e-16<P){if(!(P<2.220446049250313e-16)){J=108;break}}else{J=108}}while(0);if((J|0)==108){J=0;d=W+1|0;W=d;c[f+(d<<2)>>2]=I;$=+h[j+(D<<3)>>3]/+h[v+(I<<3)>>3];aa=$;h[g+(W<<3)>>3]=$;d=c[s+(I<<2)>>2]|0;Q=d;R=d+(c[t+(I<<2)>>2]|0)|0;while(1){if((Q|0)>=(R|0)){break}d=j+(c[p+(Q<<2)>>2]<<3)|0;h[d>>3]=+h[d>>3]-aa*+h[q+(Q<<3)>>3];Q=Q+1|0}}K=K+1|0}do{if(-1.0e-5<+h[j+(a<<3)>>3]){if(!(+h[j+(a<<3)>>3]<1.0e-5)){break}X=3;Y=X;i=l;return Y|0}}while(0);if((W|0)>0){if((c[m+8>>2]|0)==(c[m+4>>2]|0)){X=4;Y=X;i=l;return Y|0}Q=m+8|0;R=(c[Q>>2]|0)+1|0;c[Q>>2]=R;K=R;c[E+(K<<2)>>2]=e;if(((c[o+28>>2]|0)-(c[o+24>>2]|0)|0)<(W|0)){ti(o,W);p=c[o+48>>2]|0;q=c[o+52>>2]|0}vi(o,(c[m+16>>2]|0)-1+K|0,W);T=c[G+(K<<2)>>2]|0;Ku(p+(T<<2)|0,f+4|0,W<<2)|0;Ku(q+(T<<3)|0,g+8|0,W<<3)|0;c[H+(K<<2)>>2]=W}N=0;K=L+1|0;while(1){if((K|0)>(n|0)){break}D=c[C+(K<<2)>>2]|0;P=+h[j+(D<<3)>>3];do{if(-2.220446049250313e-16<P){if(!(P<2.220446049250313e-16)){J=128;break}}else{J=128}}while(0);if((J|0)==128){J=0;if((c[z+(D<<2)>>2]|0)==(c[y+(D<<2)>>2]|0)){L=(c[y+(D<<2)>>2]|0)+5|0;if(((c[o+28>>2]|0)-(c[o+24>>2]|0)|0)<(L|0)){ti(o,L);p=c[o+48>>2]|0;q=c[o+52>>2]|0}ui(o,w-1+D|0,L,0)}L=c[x+(D<<2)>>2]|0;E=y+(D<<2)|0;R=c[E>>2]|0;c[E>>2]=R+1;E=L+R|0;T=E;c[p+(E<<2)>>2]=e;h[q+(T<<3)>>3]=P;E=N+1|0;N=E;c[f+(E<<2)>>2]=D;h[g+(N<<3)>>3]=P}K=K+1|0}if((c[u+(e<<2)>>2]|0)<(N|0)){if(((c[o+28>>2]|0)-(c[o+24>>2]|0)|0)<(N|0)){ti(o,N);p=c[o+48>>2]|0;q=c[o+52>>2]|0}ui(o,r-1+e|0,N,0)}T=c[s+(e<<2)>>2]|0;Ku(p+(T<<2)|0,f+4|0,N<<2)|0;Ku(q+(T<<3)|0,g+8|0,N<<3)|0;c[t+(e<<2)>>2]=N;h[v+(e<<3)>>3]=+h[j+(a<<3)>>3];do{if((W|0)>0){D=1;while(1){if((D|0)>(n|0)){break}h[j+(D<<3)>>3]=0.0;D=D+1|0}K=c[m+8>>2]|0;N=c[G+(K<<2)>>2]|0;T=N;t=N+(c[H+(K<<2)>>2]|0)|0;while(1){if((T|0)>=(t|0)){break}h[j+(c[p+(T<<2)>>2]<<3)>>3]=+h[q+(T<<3)>>3];T=T+1|0}P=+h[v+(e<<3)>>3];T=c[x+(a<<2)>>2]|0;t=T+(c[y+(a<<2)>>2]|0)|0;while(1){if((T|0)>=(t|0)){break}P=P+ +h[j+(c[p+(T<<2)>>2]<<3)>>3]*+h[q+(T<<3)>>3];T=T+1|0}P=+U(+(O-P))/(+U(+O)+1.0);if(!(P>1.0e-10)){break}X=5;Y=X;i=l;return Y|0}}while(0);X=0;Y=X;i=l;return Y|0}function Lh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0;d=i;e=a;a=b;b=c[(c[e>>2]|0)+4>>2]|0;f=c[b+48>>2]|0;g=c[b+52>>2]|0;j=c[e+8>>2]|0;k=c[e+12>>2]|0;l=c[e+16>>2]|0;e=(c[b+8>>2]|0)+(l-1<<2)|0;m=(c[b+12>>2]|0)+(l-1<<2)|0;l=1;while(1){if((l|0)>(j|0)){break}b=c[k+(l<<2)>>2]|0;n=b;o=+h[a+(b<<3)>>3];b=c[e+(l<<2)>>2]|0;p=b;q=b+(c[m+(l<<2)>>2]|0)|0;while(1){if((p|0)>=(q|0)){break}o=o- +h[g+(p<<3)>>3]*+h[a+(c[f+(p<<2)>>2]<<3)>>3];p=p+1|0}h[a+(n<<3)>>3]=o;l=l+1|0}i=d;return}function Mh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0;d=i;e=a;a=b;b=c[(c[e>>2]|0)+4>>2]|0;f=c[b+48>>2]|0;g=c[b+52>>2]|0;j=c[e+12>>2]|0;k=c[e+16>>2]|0;l=(c[b+8>>2]|0)+(k-1<<2)|0;m=(c[b+12>>2]|0)+(k-1<<2)|0;k=c[e+8>>2]|0;while(1){if((k|0)<1){break}n=+h[a+(c[j+(k<<2)>>2]<<3)>>3];o=n;if(!(n==0.0)){e=c[l+(k<<2)>>2]|0;b=e;p=e+(c[m+(k<<2)>>2]|0)|0;while(1){if((b|0)>=(p|0)){break}e=a+(c[f+(b<<2)>>2]<<3)|0;h[e>>3]=+h[e>>3]- +h[g+(b<<3)>>3]*o;b=b+1|0}}k=k-1|0}i=d;return}function Nh(){var a=0,b=0;a=i;b=yi(1,16)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;i=a;return b|0}function Oh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=a;a=b;if((a|0)>0){h=1}else{Ji(8928,17504,44);h=1}c[g>>2]=0;h=c[g+12>>2]|0;if((h|0)==0){h=100}if((h|0)>0){j=1}else{Ji(13120,17504,50);j=1}j=c[g+8>>2]|0;if((j|0)==0){b=ei()|0;c[g+8>>2]=b;j=b;c[j+20>>2]=(a<<2)+h;c[j+24>>2]=a*10|0;c[j+28>>2]=0;c[j+32>>2]=100;c[j+36>>2]=1}b=c[j>>2]|0;k=fi(j,a,d,e)|0;e=c[j>>2]|0;d=c[g+4>>2]|0;if((d|0)==0){l=yi(1,28)|0;c[g+4>>2]=l;d=l;c[d>>2]=c[j+12>>2];c[d+4>>2]=0;c[d+12>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0}if((c[d+4>>2]|0)!=(h|0)){c[d+4>>2]=h;if((c[d+12>>2]|0)!=0){Bi(c[d+12>>2]|0)}c[d+12>>2]=yi(h+1|0,4)|0}if((b|0)<(e|0)){if((c[d+20>>2]|0)!=0){Bi(c[d+20>>2]|0)}if((c[d+24>>2]|0)!=0){Bi(c[d+24>>2]|0)}c[d+20>>2]=yi(e+1|0,4)|0;c[d+24>>2]=yi(e+1|0,4)|0}c[d+8>>2]=0;c[d+16>>2]=qi(c[(c[g+8>>2]|0)+8>>2]|0,h)|0;h=1;while(1){if((h|0)>(a|0)){break}c[(c[d+20>>2]|0)+(h<<2)>>2]=c[(c[(c[(c[g+8>>2]|0)+12>>2]|0)+28>>2]|0)+(h<<2)>>2];c[(c[d+24>>2]|0)+(h<<2)>>2]=c[(c[(c[(c[g+8>>2]|0)+12>>2]|0)+32>>2]|0)+(h<<2)>>2];h=h+1|0}if((k|0)!=0){m=k;i=f;return m|0}c[g>>2]=1;m=k;i=f;return m|0}function Ph(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;h=a;a=c[(c[h+8>>2]|0)+16>>2]|0;j=c[a+12>>2]|0;k=c[a+28>>2]|0;l=c[a+36>>2]|0;if((c[h>>2]|0)!=0){m=1}else{Ji(9824,17504,112);m=1}m=Kh(c[h+4>>2]|0,b,d,e,f,j,k,l)|0;if((m|0)==0){n=m;i=g;return n|0}c[h>>2]=0;n=m;i=g;return n|0}function Qh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=a;a=b;b=c[e+4>>2]|0;f=c[b>>2]|0;g=c[f>>2]|0;h=c[f+28>>2]|0;j=c[f+32>>2]|0;k=c[(c[(c[e+8>>2]|0)+16>>2]|0)+36>>2]|0;if((c[e>>2]|0)!=0){l=1}else{Ji(9824,17504,128);l=1}c[f+28>>2]=c[b+20>>2];c[f+32>>2]=c[b+24>>2];ai(f,a);c[f+28>>2]=h;c[f+32>>2]=j;Lh(b,a);ci(f,a,k);Ku(a+8|0,k+8|0,g<<3)|0;i=d;return}function Rh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=a;a=b;b=c[e+4>>2]|0;f=c[b>>2]|0;g=c[f>>2]|0;h=c[f+28>>2]|0;j=c[f+32>>2]|0;k=c[(c[(c[e+8>>2]|0)+16>>2]|0)+36>>2]|0;if((c[e>>2]|0)!=0){l=1}else{Ji(9824,17504,151);l=1}di(f,a,k);Mh(b,k);c[f+28>>2]=c[b+20>>2];c[f+32>>2]=c[b+24>>2];bi(f,k);c[f+28>>2]=h;c[f+32>>2]=j;Ku(a+8|0,k+8|0,g<<3)|0;i=d;return}function Sh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;a=c[d+4>>2]|0;e=c[d+8>>2]|0;if((a|0)!=0){Bi(c[a+12>>2]|0);Bi(c[a+20>>2]|0);Bi(c[a+24>>2]|0);Bi(a)}if((e|0)==0){f=d;g=f;Bi(g);i=b;return}hi(c[d+8>>2]|0);f=d;g=f;Bi(g);i=b;return}function Th(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;var f=0,g=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0.0;f=i;g=a;a=b;b=d;j=e;d=c[g>>2]|0;k=c[g+4>>2]|0;l=c[g+8>>2]|0;m=c[g+12>>2]|0;if(0<=(k|0)){if((k|0)<(d|0)){n=1}else{o=3}}else{o=3}if((o|0)==3){Ji(8904,17472,66);n=1}a=a+8|0;b=b+8|0;n=0;while(1){if((n|0)>=(k|0)){break}h[l+((fa(n,d)|0)+k<<3)>>3]=0.0;n=n+1|0}o=0;while(1){if((o|0)>=(k|0)){break}h[l+((fa(k,d)|0)+o<<3)>>3]=0.0;o=o+1|0}h[l+((fa(k,d)|0)+k<<3)>>3]=1.0;n=0;while(1){if((n|0)>=(k|0)){break}e=0.0;o=0;while(1){if((o|0)>=(k|0)){break}p=+h[l+((fa(n,d)|0)+o<<3)>>3];e=e+p*+h[a+(o<<3)>>3];o=o+1|0}h[m+((fa(n,d)|0)+k<<3)>>3]=e;n=n+1|0}o=0;while(1){if((o|0)>=(k|0)){break}h[m+((fa(k,d)|0)+o<<3)>>3]=+h[b+(o<<3)>>3];o=o+1|0}h[m+((fa(k,d)|0)+k<<3)>>3]=j;k=g+4|0;c[k>>2]=(c[k>>2]|0)+1;i=f;return}function Uh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;var f=0,g=0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0,q=0,r=0;f=i;g=a;a=c[g>>2]|0;j=c[g+4>>2]|0;k=c[g+8>>2]|0;l=c[g+12>>2]|0;m=1.0e-5;Th(g,b,d,e);d=0;while(1){if((d|0)>=(j|0)){break}e=+U(+(+h[l+((fa(d,a)|0)+d<<3)>>3]));if(e<+U(+(+h[l+((fa(j,a)|0)+d<<3)>>3]))){n=d;while(1){if((n|0)>(j|0)){break}o=+h[l+((fa(d,a)|0)+n<<3)>>3];h[l+((fa(d,a)|0)+n<<3)>>3]=+h[l+((fa(j,a)|0)+n<<3)>>3];h[l+((fa(j,a)|0)+n<<3)>>3]=o;n=n+1|0}n=0;while(1){if((n|0)>(j|0)){break}o=+h[k+((fa(d,a)|0)+n<<3)>>3];h[k+((fa(d,a)|0)+n<<3)>>3]=+h[k+((fa(j,a)|0)+n<<3)>>3];h[k+((fa(j,a)|0)+n<<3)>>3]=o;n=n+1|0}}if(+U(+(+h[l+((fa(d,a)|0)+d<<3)>>3]))<m){p=14;break}if(!(+h[l+((fa(j,a)|0)+d<<3)>>3]==0.0)){e=+h[l+((fa(j,a)|0)+d<<3)>>3];o=e/+h[l+((fa(d,a)|0)+d<<3)>>3];n=d+1|0;while(1){if((n|0)>(j|0)){break}e=o*+h[l+((fa(d,a)|0)+n<<3)>>3];b=l+((fa(j,a)|0)+n<<3)|0;h[b>>3]=+h[b>>3]-e;n=n+1|0}n=0;while(1){if((n|0)>(j|0)){break}e=o*+h[k+((fa(d,a)|0)+n<<3)>>3];b=k+((fa(j,a)|0)+n<<3)|0;h[b>>3]=+h[b>>3]-e;n=n+1|0}}d=d+1|0}if((p|0)==14){q=1;r=q;i=f;return r|0}if(+U(+(+h[l+((fa(j,a)|0)+j<<3)>>3]))<m){q=2;r=q;i=f;return r|0}else{q=0;r=q;i=f;return r|0}return 0}function Vh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0.0,r=0,s=0;f=i;i=i+16|0;g=f|0;j=f+8|0;k=a;a=c[k>>2]|0;l=c[k+4>>2]|0;m=c[k+8>>2]|0;n=c[k+12>>2]|0;o=1.0e-5;Th(k,b,d,e);d=0;while(1){if((d|0)>=(l|0)){break}if(+U(+(+h[n+((fa(d,a)|0)+d<<3)>>3]))<o){if(+U(+(+h[n+((fa(l,a)|0)+d<<3)>>3]))<o){p=5;break}}if(!(+h[n+((fa(l,a)|0)+d<<3)>>3]==0.0)){e=+h[n+((fa(d,a)|0)+d<<3)>>3];Wh(e,+h[n+((fa(l,a)|0)+d<<3)>>3],g,j);b=d;while(1){if((b|0)>(l|0)){break}e=+h[n+((fa(d,a)|0)+b<<3)>>3];q=+h[n+((fa(l,a)|0)+b<<3)>>3];h[n+((fa(d,a)|0)+b<<3)>>3]=+h[g>>3]*e- +h[j>>3]*q;h[n+((fa(l,a)|0)+b<<3)>>3]=+h[j>>3]*e+ +h[g>>3]*q;b=b+1|0}b=0;while(1){if((b|0)>(l|0)){break}q=+h[m+((fa(d,a)|0)+b<<3)>>3];e=+h[m+((fa(l,a)|0)+b<<3)>>3];h[m+((fa(d,a)|0)+b<<3)>>3]=+h[g>>3]*q- +h[j>>3]*e;h[m+((fa(l,a)|0)+b<<3)>>3]=+h[j>>3]*q+ +h[g>>3]*e;b=b+1|0}}d=d+1|0}if((p|0)==5){r=1;s=r;i=f;return s|0}if(+U(+(+h[n+((fa(l,a)|0)+l<<3)>>3]))<o){r=2;s=r;i=f;return s|0}else{r=0;s=r;i=f;return s|0}return 0}function Wh(a,b,c,d){a=+a;b=+b;c=c|0;d=d|0;var e=0,f=0.0,g=0,j=0.0;e=i;f=a;a=b;g=c;c=d;if(a==0.0){h[g>>3]=1.0;h[c>>3]=0.0;i=e;return}if(+U(+f)<=+U(+a)){j=(-0.0-f)/a;h[c>>3]=1.0/+V(j*j+1.0);h[g>>3]=+h[c>>3]*j}else{j=(-0.0-a)/f;h[g>>3]=1.0/+V(j*j+1.0);h[c>>3]=+h[g>>3]*j}i=e;return}function Xh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0,p=0.0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+8>>2]|0;k=c[f+12>>2]|0;if(0<=(g|0)){if((g|0)<=(d|0)){l=1}else{m=3}}else{m=3}if((m|0)==3){Ji(13096,17472,312);l=1}a=a+8|0;b=b+8|0;Ku(b|0,a|0,g<<3)|0;l=0;while(1){if((l|0)>=(g|0)){break}n=0.0;o=0;while(1){if((o|0)>=(g|0)){break}p=+h[j+((fa(l,d)|0)+o<<3)>>3];n=n+p*+h[b+(o<<3)>>3];o=o+1|0}h[a+(l<<3)>>3]=n;l=l+1|0}l=g-1|0;while(1){if((l|0)<0){break}n=+h[a+(l<<3)>>3];o=l+1|0;while(1){if((o|0)>=(g|0)){break}p=+h[k+((fa(l,d)|0)+o<<3)>>3];n=n-p*+h[a+(o<<3)>>3];o=o+1|0}h[a+(l<<3)>>3]=n/+h[k+((fa(l,d)|0)+l<<3)>>3];l=l-1|0}i=e;return}function Yh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[f+8>>2]|0;k=c[f+12>>2]|0;if(0<=(g|0)){if((g|0)<=(d|0)){l=1}else{m=3}}else{m=3}if((m|0)==3){Ji(13096,17472,369);l=1}a=a+8|0;b=b+8|0;l=0;while(1){if((l|0)>=(g|0)){break}n=+h[k+((fa(l,d)|0)+l<<3)>>3];m=a+(l<<3)|0;o=+h[m>>3]/n;h[m>>3]=o;p=o;q=l+1|0;while(1){if((q|0)>=(g|0)){break}o=+h[k+((fa(l,d)|0)+q<<3)>>3]*p;m=a+(q<<3)|0;h[m>>3]=+h[m>>3]-o;q=q+1|0}l=l+1|0}q=0;while(1){if((q|0)>=(g|0)){break}p=0.0;l=0;while(1){if((l|0)>=(g|0)){break}o=+h[j+((fa(l,d)|0)+q<<3)>>3];p=p+o*+h[a+(l<<3)>>3];l=l+1|0}h[b+(q<<3)>>3]=p;q=q+1|0}Ku(a|0,b|0,g<<3)|0;i=e;return}function Zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[f+48>>2]|0;j=c[f+52>>2]|0;k=c[e+16>>2]|0;l=(c[f+8>>2]|0)+(k-1<<2)|0;m=(c[f+12>>2]|0)+(k-1<<2)|0;n=c[e+24>>2]|0;e=(c[f+8>>2]|0)+(n-1<<2)|0;o=(c[f+12>>2]|0)+(n-1<<2)|0;n=0;p=1;while(1){if((p|0)>(b|0)){break}c[a+(p<<2)>>2]=0;p=p+1|0}q=1;while(1){if((q|0)>(b|0)){break}n=n+(c[o+(q<<2)>>2]|0)|0;r=c[e+(q<<2)>>2]|0;s=r;t=r+(c[o+(q<<2)>>2]|0)|0;while(1){if((s|0)>=(t|0)){break}r=a+(c[g+(s<<2)>>2]<<2)|0;c[r>>2]=(c[r>>2]|0)+1;s=s+1|0}q=q+1|0}if(((c[f+28>>2]|0)-(c[f+24>>2]|0)|0)<(n|0)){ti(f,n);g=c[f+48>>2]|0;j=c[f+52>>2]|0}p=1;while(1){if((p|0)>(b|0)){break}if((c[a+(p<<2)>>2]|0)>0){ui(f,k-1+p|0,c[a+(p<<2)>>2]|0,0)}c[m+(p<<2)>>2]=c[a+(p<<2)>>2];p=p+1|0}q=1;while(1){if((q|0)>(b|0)){break}m=c[e+(q<<2)>>2]|0;s=m;t=m+(c[o+(q<<2)>>2]|0)|0;while(1){if((s|0)>=(t|0)){break}p=c[g+(s<<2)>>2]|0;m=c[l+(p<<2)>>2]|0;k=a+(p<<2)|0;f=(c[k>>2]|0)-1|0;c[k>>2]=f;k=m+f|0;c[g+(k<<2)>>2]=q;h[j+(k<<3)>>3]=+h[j+(s<<3)>>3];s=s+1|0}q=q+1|0}i=d;return}function _h(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[f+48>>2]|0;j=c[f+52>>2]|0;k=c[e+8>>2]|0;l=(c[f+8>>2]|0)+(k-1<<2)|0;m=(c[f+12>>2]|0)+(k-1<<2)|0;n=c[e+12>>2]|0;e=(c[f+8>>2]|0)+(n-1<<2)|0;o=(c[f+12>>2]|0)+(n-1<<2)|0;n=0;p=1;while(1){if((p|0)>(b|0)){break}c[a+(p<<2)>>2]=0;p=p+1|0}q=1;while(1){if((q|0)>(b|0)){break}n=n+(c[o+(q<<2)>>2]|0)|0;r=c[e+(q<<2)>>2]|0;s=r;t=r+(c[o+(q<<2)>>2]|0)|0;while(1){if((s|0)>=(t|0)){break}r=a+(c[g+(s<<2)>>2]<<2)|0;c[r>>2]=(c[r>>2]|0)+1;s=s+1|0}q=q+1|0}if(((c[f+28>>2]|0)-(c[f+24>>2]|0)|0)<(n|0)){ti(f,n);g=c[f+48>>2]|0;j=c[f+52>>2]|0}p=1;while(1){if((p|0)>(b|0)){break}if((c[a+(p<<2)>>2]|0)>0){vi(f,k-1+p|0,c[a+(p<<2)>>2]|0)}c[m+(p<<2)>>2]=c[a+(p<<2)>>2];p=p+1|0}q=1;while(1){if((q|0)>(b|0)){break}m=c[e+(q<<2)>>2]|0;s=m;t=m+(c[o+(q<<2)>>2]|0)|0;while(1){if((s|0)>=(t|0)){break}p=c[g+(s<<2)>>2]|0;m=c[l+(p<<2)>>2]|0;k=a+(p<<2)|0;f=(c[k>>2]|0)-1|0;c[k>>2]=f;k=m+f|0;c[g+(k<<2)>>2]=q;h[j+(k<<3)>>3]=+h[j+(s<<3)>>3];s=s+1|0}q=q+1|0}i=d;return}function $h(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[g+48>>2]|0;k=c[g+52>>2]|0;l=c[f+16>>2]|0;m=(c[g+8>>2]|0)+(l-1<<2)|0;n=(c[g+12>>2]|0)+(l-1<<2)|0;l=c[f+24>>2]|0;f=(c[g+8>>2]|0)+(l-1<<2)|0;o=(c[g+12>>2]|0)+(l-1<<2)|0;p=0;q=1;while(1){if((q|0)>(d|0)){break}c[b+(q<<2)>>2]=0;q=q+1|0}r=1;while(1){if((r|0)>(d|0)){break}p=p+(c[n+(r<<2)>>2]|0)|0;s=c[m+(r<<2)>>2]|0;t=s;u=s+(c[n+(r<<2)>>2]|0)|0;while(1){if((t|0)>=(u|0)){break}s=b+(c[j+(t<<2)>>2]<<2)|0;c[s>>2]=(c[s>>2]|0)+1;t=t+1|0}r=r+1|0}if(((c[g+28>>2]|0)-(c[g+24>>2]|0)|0)<(p|0)){ti(g,p);j=c[g+48>>2]|0;k=c[g+52>>2]|0}q=1;while(1){if((q|0)>(d|0)){break}if((c[b+(q<<2)>>2]|0)>0){if((a|0)!=0){ui(g,l-1+q|0,c[b+(q<<2)>>2]|0,0)}else{vi(g,l-1+q|0,c[b+(q<<2)>>2]|0)}}c[o+(q<<2)>>2]=c[b+(q<<2)>>2];q=q+1|0}r=1;while(1){if((r|0)>(d|0)){break}o=c[m+(r<<2)>>2]|0;t=o;u=o+(c[n+(r<<2)>>2]|0)|0;while(1){if((t|0)>=(u|0)){break}q=c[j+(t<<2)>>2]|0;o=c[f+(q<<2)>>2]|0;l=b+(q<<2)|0;g=(c[l>>2]|0)-1|0;c[l>>2]=g;l=o+g|0;c[j+(l<<2)>>2]=r;h[k+(l<<3)>>3]=+h[k+(t<<3)>>3];t=t+1|0}r=r+1|0}i=e;return}function ai(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0,r=0;d=i;e=a;a=b;b=c[e>>2]|0;f=c[e+4>>2]|0;g=c[f+48>>2]|0;j=c[f+52>>2]|0;k=c[e+12>>2]|0;l=(c[f+8>>2]|0)+(k-1<<2)|0;m=(c[f+12>>2]|0)+(k-1<<2)|0;k=c[e+32>>2]|0;e=1;while(1){if((e|0)>(b|0)){break}f=c[k+(e<<2)>>2]|0;n=+h[a+(f<<3)>>3];o=n;if(n!=0.0){p=c[l+(f<<2)>>2]|0;q=p;r=p+(c[m+(f<<2)>>2]|0)|0;while(1){if((q|0)>=(r|0)){break}f=a+(c[g+(q<<2)>>2]<<3)|0;h[f>>3]=+h[f>>3]- +h[j+(q<<3)>>3]*o;q=q+1|0}}e=e+1|0}i=d;return}function bi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0,p=0,q=0;d=i;e=a;a=b;b=c[e+4>>2]|0;f=c[b+48>>2]|0;g=c[b+52>>2]|0;j=c[e+8>>2]|0;k=(c[b+8>>2]|0)+(j-1<<2)|0;l=(c[b+12>>2]|0)+(j-1<<2)|0;j=c[e+32>>2]|0;b=c[e>>2]|0;while(1){if((b|0)<1){break}e=c[j+(b<<2)>>2]|0;m=+h[a+(e<<3)>>3];n=m;if(m!=0.0){o=c[k+(e<<2)>>2]|0;p=o;q=o+(c[l+(e<<2)>>2]|0)|0;while(1){if((p|0)>=(q|0)){break}e=a+(c[f+(p<<2)>>2]<<3)|0;h[e>>3]=+h[e>>3]- +h[g+(p<<3)>>3]*n;p=p+1|0}}b=b-1|0}i=d;return}function ci(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0;e=i;f=a;a=b;b=d;d=c[f+4>>2]|0;g=c[d+48>>2]|0;j=c[d+52>>2]|0;k=c[f+20>>2]|0;l=c[f+24>>2]|0;m=(c[d+8>>2]|0)+(l-1<<2)|0;n=(c[d+12>>2]|0)+(l-1<<2)|0;l=c[f+32>>2]|0;d=c[f+36>>2]|0;o=c[f>>2]|0;while(1){if((o|0)<1){break}f=c[l+(o<<2)>>2]|0;p=c[d+(o<<2)>>2]|0;q=+h[a+(f<<3)>>3]/+h[k+(f<<3)>>3];h[b+(p<<3)>>3]=q;r=q;if(q!=0.0){f=c[m+(p<<2)>>2]|0;s=f;t=f+(c[n+(p<<2)>>2]|0)|0;while(1){if((s|0)>=(t|0)){break}p=a+(c[g+(s<<2)>>2]<<3)|0;h[p>>3]=+h[p>>3]- +h[j+(s<<3)>>3]*r;s=s+1|0}}o=o-1|0}i=e;return}function di(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0,u=0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[g+48>>2]|0;k=c[g+52>>2]|0;l=c[f+20>>2]|0;m=c[f+16>>2]|0;n=(c[g+8>>2]|0)+(m-1<<2)|0;o=(c[g+12>>2]|0)+(m-1<<2)|0;m=c[f+32>>2]|0;g=c[f+36>>2]|0;f=1;while(1){if((f|0)>(d|0)){break}p=c[m+(f<<2)>>2]|0;q=+h[a+(c[g+(f<<2)>>2]<<3)>>3]/+h[l+(p<<3)>>3];h[b+(p<<3)>>3]=q;r=q;if(q!=0.0){s=c[n+(p<<2)>>2]|0;t=s;u=s+(c[o+(p<<2)>>2]|0)|0;while(1){if((t|0)>=(u|0)){break}p=a+(c[j+(t<<2)>>2]<<3)|0;h[p>>3]=+h[p>>3]- +h[k+(t<<3)>>3]*r;t=t+1|0}}f=f+1|0}i=e;return}function ei(){var a=0,b=0;a=i;b=yi(1,64)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+24>>2]=0;c[b+20>>2]=0;c[b+32>>2]=0;c[b+28>>2]=0;c[b+36>>2]=0;h[b+40>>3]=.1;c[b+48>>2]=4;c[b+52>>2]=1;h[b+56>>3]=2.220446049250313e-16;i=a;return b|0}function fi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;g=a;a=b;b=d;d=e;if((a|0)>0){j=1}else{Ji(8736,17432,89);j=1}c[g+4>>2]=0;j=c[g+8>>2]|0;if((j|0)==0){e=c[g+20>>2]|0;k=c[g+24>>2]|0;if((e|0)==0){e=a<<2}if((k|0)==0){k=a*10|0}l=pi(e,k)|0;c[g+8>>2]=l;j=l}if((c[g>>2]|0)<(a|0)){l=c[g>>2]|0;if((l|0)==0){k=a+(c[g+28>>2]|0)|0;c[g>>2]=k;l=k}else{k=a+(c[g+32>>2]|0)|0;c[g>>2]=k;l=k}if((l|0)>=(a|0)){m=1}else{Ji(13080,17432,109);m=1}n=c[g+12>>2]|0;if((n|0)==0){m=yi(1,44)|0;c[g+12>>2]=m;n=m;Nu(n|0,0,44)|0;c[n+4>>2]=j}else{Bi(c[n+20>>2]|0);Bi(c[n+28>>2]|0);Bi(c[n+32>>2]|0);Bi(c[n+36>>2]|0);Bi(c[n+40>>2]|0)}c[n+20>>2]=yi(l+1|0,8)|0;c[n+28>>2]=yi(l+1|0,4)|0;c[n+32>>2]=yi(l+1|0,4)|0;c[n+36>>2]=yi(l+1|0,4)|0;c[n+40>>2]=yi(l+1|0,4)|0;o=c[g+16>>2]|0;if((o|0)==0){m=yi(1,72)|0;c[g+16>>2]=m;o=m;Nu(o|0,0,72)|0;c[o>>2]=n}else{Bi(c[o+4>>2]|0);Bi(c[o+8>>2]|0);Bi(c[o+12>>2]|0);Bi(c[o+16>>2]|0);Bi(c[o+20>>2]|0);Bi(c[o+24>>2]|0);Bi(c[o+28>>2]|0);Bi(c[o+32>>2]|0);Bi(c[o+36>>2]|0)}c[o+4>>2]=yi(l+1|0,4)|0;c[o+8>>2]=yi(l+1|0,4)|0;c[o+12>>2]=yi(l+1|0,4)|0;c[o+16>>2]=yi(l+1|0,4)|0;c[o+20>>2]=yi(l+1|0,4)|0;c[o+24>>2]=yi(l+1|0,4)|0;c[o+28>>2]=yi(l+1|0,8)|0;c[o+32>>2]=yi(l+1|0,1)|0;c[o+36>>2]=yi(l+1|0,8)|0}n=c[g+12>>2]|0;o=c[g+16>>2]|0;c[j+4>>2]=0;c[j+24>>2]=1;c[j+28>>2]=(c[j+20>>2]|0)+1;c[j+36>>2]=0;c[j+32>>2]=0;c[n>>2]=a;c[n+8>>2]=qi(j,a)|0;c[n+12>>2]=qi(j,a)|0;c[n+16>>2]=qi(j,a)|0;c[n+24>>2]=qi(j,a)|0;gi(n,b,d,c[o+8>>2]|0,c[o+36>>2]|0)|0;c[o+40>>2]=c[g+36>>2];h[o+48>>3]=+h[g+40>>3];c[o+56>>2]=c[g+48>>2];c[o+60>>2]=c[g+52>>2];h[o+64>>3]=+h[g+56>>3];d=oi(o,1)|0;if((d|0)!=0){p=d;i=f;return p|0}c[g+4>>2]=1;p=d;i=f;return p|0}function gi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;h=a;a=b;b=d;d=e;e=f;f=c[h>>2]|0;j=c[h+4>>2]|0;k=c[j+48>>2]|0;l=c[j+52>>2]|0;m=c[h+24>>2]|0;h=(c[j+8>>2]|0)+(m-1<<2)|0;n=(c[j+12>>2]|0)+(m-1<<2)|0;o=(c[j+16>>2]|0)+(m-1<<2)|0;p=0;q=1;while(1){if((q|0)>(f|0)){break}r=Sc[a&63](b,q,d,e)|0;if(0<=(r|0)){if((r|0)<=(f|0)){s=1}else{t=5}}else{t=5}if((t|0)==5){t=0;Ji(9760,17432,62);s=1}if((c[o+(q<<2)>>2]|0)<(r|0)){if(((c[j+28>>2]|0)-(c[j+24>>2]|0)|0)<(r|0)){ti(j,r);k=c[j+48>>2]|0;l=c[j+52>>2]|0}ui(j,m-1+q|0,r,0)}u=c[h+(q<<2)>>2]|0;Ku(k+(u<<2)|0,d+4|0,r<<2)|0;Ku(l+(u<<3)|0,e+8|0,r<<3)|0;c[n+(q<<2)>>2]=r;p=p+r|0;q=q+1|0}i=g;return p|0}function hi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;a=c[d+8>>2]|0;e=c[d+12>>2]|0;f=c[d+16>>2]|0;if((a|0)!=0){xi(a)}if((e|0)!=0){Bi(c[e+20>>2]|0);Bi(c[e+28>>2]|0);Bi(c[e+32>>2]|0);Bi(c[e+36>>2]|0);Bi(c[e+40>>2]|0);Bi(e)}if((f|0)==0){g=d;h=g;Bi(h);i=b;return}Bi(c[f+4>>2]|0);Bi(c[f+8>>2]|0);Bi(c[f+12>>2]|0);Bi(c[f+16>>2]|0);Bi(c[f+20>>2]|0);Bi(c[f+24>>2]|0);Bi(c[f+28>>2]|0);Bi(c[f+32>>2]|0);Bi(c[f+36>>2]|0);Bi(f);g=d;h=g;Bi(h);i=b;return}function ii(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;g=i;h=a;a=b;b=d;d=e;e=f;f=c[h>>2]|0;j=c[h+4>>2]|0;k=c[j+48>>2]|0;l=c[h+16>>2]|0;m=(c[j+8>>2]|0)+(l-1<<2)|0;n=(c[j+12>>2]|0)+(l-1<<2)|0;l=c[h+24>>2]|0;o=(c[j+8>>2]|0)+(l-1<<2)|0;p=(c[j+12>>2]|0)+(l-1<<2)|0;l=c[h+28>>2]|0;j=c[h+32>>2]|0;q=c[h+36>>2]|0;r=c[h+40>>2]|0;h=1;s=f;t=0;u=1;while(1){if((u|0)>(f|0)){break}v=c[p+(u<<2)>>2]|0;c[d+(u<<2)>>2]=v;if((v|0)==1){v=t+1|0;t=v;c[e+(v<<2)>>2]=u}u=u+1|0}while(1){if((t|0)<=0){break}v=t;t=v-1|0;u=c[e+(v<<2)>>2]|0;w=c[o+(u<<2)>>2]|0;x=w+(c[p+(u<<2)>>2]|0)|0;while(1){v=c[k+(w<<2)>>2]|0;y=v;if((c[l+(v<<2)>>2]|0)>=(h|0)){break}w=w+1|0}if((w|0)<(x|0)){z=1}else{Ji(8704,17400,99);z=1}A=c[l+(y<<2)>>2]|0;v=c[j+(h<<2)>>2]|0;B=c[j+(A<<2)>>2]|0;c[l+(v<<2)>>2]=A;c[j+(A<<2)>>2]=v;c[l+(B<<2)>>2]=h;c[j+(h<<2)>>2]=B;C=c[r+(u<<2)>>2]|0;B=c[q+(h<<2)>>2]|0;v=c[q+(C<<2)>>2]|0;c[q+(h<<2)>>2]=v;c[r+(v<<2)>>2]=h;c[q+(C<<2)>>2]=B;c[r+(B<<2)>>2]=C;h=h+1|0;w=c[m+(y<<2)>>2]|0;x=w+(c[n+(y<<2)>>2]|0)|0;while(1){if((w|0)>=(x|0)){break}B=c[k+(w<<2)>>2]|0;u=B;v=d+(B<<2)|0;B=(c[v>>2]|0)-1|0;c[v>>2]=B;if((B|0)==1){B=t+1|0;t=B;c[e+(B<<2)>>2]=u}w=w+1|0}}if((h|0)>(f|0)){D=h;E=a;c[E>>2]=D;F=s;G=b;c[G>>2]=F;i=g;return}t=0;y=1;while(1){if((y|0)>(f|0)){break}if((c[l+(y<<2)>>2]|0)<(h|0)){c[d+(y<<2)>>2]=0}else{z=c[n+(y<<2)>>2]|0;c[d+(y<<2)>>2]=z;if((z|0)==1){z=t+1|0;t=z;c[e+(z<<2)>>2]=y}}y=y+1|0}while(1){if((t|0)<=0){break}f=t;t=f-1|0;y=c[e+(f<<2)>>2]|0;w=c[m+(y<<2)>>2]|0;x=w+(c[n+(y<<2)>>2]|0)|0;while(1){f=c[k+(w<<2)>>2]|0;u=f;if((c[r+(f<<2)>>2]|0)<=(s|0)){break}w=w+1|0}if((w|0)<(x|0)){H=1}else{Ji(8704,17400,146);H=1}A=c[l+(y<<2)>>2]|0;f=c[j+(s<<2)>>2]|0;z=c[j+(A<<2)>>2]|0;c[l+(f<<2)>>2]=A;c[j+(A<<2)>>2]=f;c[l+(z<<2)>>2]=s;c[j+(s<<2)>>2]=z;C=c[r+(u<<2)>>2]|0;z=c[q+(s<<2)>>2]|0;f=c[q+(C<<2)>>2]|0;c[q+(s<<2)>>2]=f;c[r+(f<<2)>>2]=s;c[q+(C<<2)>>2]=z;c[r+(z<<2)>>2]=C;s=s-1|0;w=c[o+(u<<2)>>2]|0;x=w+(c[p+(u<<2)>>2]|0)|0;while(1){if((w|0)>=(x|0)){break}z=c[k+(w<<2)>>2]|0;y=z;f=d+(z<<2)|0;z=(c[f>>2]|0)-1|0;c[f>>2]=z;if((z|0)==1){z=t+1|0;t=z;c[e+(z<<2)>>2]=y}w=w+1|0}}if((h|0)<(s|0)){I=1}else{Ji(13072,17400,165);I=1}D=h;E=a;c[E>>2]=D;F=s;G=b;c[G>>2]=F;i=g;return}function ji(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0.0,M=0,N=0;j=i;k=a;a=b;b=d;d=e;e=f;f=g;g=c[k>>2]|0;l=c[k+4>>2]|0;m=c[l+48>>2]|0;n=c[l+52>>2]|0;o=c[k+12>>2]|0;p=(c[l+8>>2]|0)+(o-1<<2)|0;q=(c[l+12>>2]|0)+(o-1<<2)|0;r=c[k+16>>2]|0;s=(c[l+8>>2]|0)+(r-1<<2)|0;t=(c[l+12>>2]|0)+(r-1<<2)|0;u=c[k+20>>2]|0;v=c[k+24>>2]|0;w=(c[l+8>>2]|0)+(v-1<<2)|0;x=(c[l+12>>2]|0)+(v-1<<2)|0;v=c[k+28>>2]|0;y=c[k+32>>2]|0;z=c[k+36>>2]|0;A=c[k+40>>2]|0;do{if(1<=(a|0)){if((a|0)>=(b|0)){B=4;break}if((b|0)<=(g|0)){C=1}else{B=4}}else{B=4}}while(0);do{if((B|0)==4){if((a|0)==(g+1|0)){if((b|0)==(g|0)){C=1;break}}Ji(9696,17400,262);C=1}}while(0);C=a;while(1){if((C|0)>(b|0)){break}B=C-b+g|0;c[A+(c[z+(C<<2)>>2]<<2)>>2]=B;c[v+(c[y+(C<<2)>>2]<<2)>>2]=B;C=C+1|0}C=b+1|0;while(1){if((C|0)>(g|0)){break}B=g-C+a|0;c[A+(c[z+(C<<2)>>2]<<2)>>2]=B;c[v+(c[y+(C<<2)>>2]<<2)>>2]=B;C=C+1|0}C=1;while(1){if((C|0)>(g|0)){break}B=C;c[z+(c[A+(C<<2)>>2]<<2)>>2]=B;c[y+(c[v+(C<<2)>>2]<<2)>>2]=B;C=C+1|0}b=g-b+a|0;C=1;while(1){if((C|0)>=(a|0)){break}D=c[y+(C<<2)>>2]|0;E=c[s+(D<<2)>>2]|0;F=E+(c[t+(D<<2)>>2]|0)|0;while(1){if((c[A+(c[m+(E<<2)>>2]<<2)>>2]|0)==(C|0)){break}E=E+1|0}if((E|0)<(F|0)){G=1}else{Ji(8704,17400,282);G=1}h[u+(D<<3)>>3]=+h[n+(E<<3)>>3];c[m+(E<<2)>>2]=c[m+(F-1<<2)>>2];h[n+(E<<3)>>3]=+h[n+(F-1<<3)>>3];B=t+(D<<2)|0;c[B>>2]=(c[B>>2]|0)-1;c[x+(c[z+(C<<2)>>2]<<2)>>2]=0;C=C+1|0}C=a;while(1){if((C|0)>=(b|0)){break}c[t+(c[y+(C<<2)>>2]<<2)>>2]=0;C=C+1|0}C=b;while(1){if((C|0)>(g|0)){break}D=c[y+(C<<2)>>2]|0;G=c[s+(D<<2)>>2]|0;H=G;E=G;F=E+(c[t+(D<<2)>>2]|0)|0;while(1){if((E|0)>=(F|0)){break}if((c[A+(c[m+(E<<2)>>2]<<2)>>2]|0)>=(b|0)){c[m+(H<<2)>>2]=c[m+(E<<2)>>2];h[n+(H<<3)>>3]=+h[n+(E<<3)>>3];H=H+1|0}E=E+1|0}c[t+(D<<2)>>2]=H-(c[s+(D<<2)>>2]|0);I=c[z+(C<<2)>>2]|0;G=c[w+(I<<2)>>2]|0;H=G;E=G;F=E+(c[x+(I<<2)>>2]|0)|0;while(1){if((E|0)>=(F|0)){break}if((c[v+(c[m+(E<<2)>>2]<<2)>>2]|0)>=(b|0)){G=H;H=G+1|0;c[m+(G<<2)>>2]=c[m+(E<<2)>>2]}E=E+1|0}c[x+(I<<2)>>2]=H-(c[w+(I<<2)>>2]|0);C=C+1|0}C=a;while(1){if((C|0)>=(b|0)){break}I=c[z+(C<<2)>>2]|0;J=0;K=0.0;E=c[w+(I<<2)>>2]|0;F=E+(c[x+(I<<2)>>2]|0)|0;while(1){if((E|0)>=(F|0)){break}D=c[m+(E<<2)>>2]|0;if((c[v+(D<<2)>>2]|0)==(C|0)){L=+h[n+(E<<3)>>3];h[u+(D<<3)>>3]=L;K=L}else{if((c[v+(D<<2)>>2]|0)>(C|0)){J=J+1|0;c[e+(J<<2)>>2]=D;h[f+(J<<3)>>3]=+h[n+(E<<3)>>3]}}E=E+1|0}c[x+(I<<2)>>2]=0;I=c[y+(C<<2)>>2]|0;if(K!=0.0){M=1}else{Ji(6920,17400,355);M=1}if((J|0)>0){if(((c[l+28>>2]|0)-(c[l+24>>2]|0)|0)<(J|0)){ti(l,J);m=c[l+48>>2]|0;n=c[l+52>>2]|0}vi(l,o-1+I|0,J);E=c[p+(I<<2)>>2]|0;H=1;while(1){if((H|0)>(J|0)){break}c[m+(E<<2)>>2]=c[e+(H<<2)>>2];h[n+(E<<3)>>3]=+h[f+(H<<3)>>3]/K;E=E+1|0;H=H+1|0}c[q+(I<<2)>>2]=J}C=C+1|0}if((d|0)!=0){N=b;i=j;return N|0}C=1;while(1){if((C|0)>=(b|0)){break}D=c[y+(C<<2)>>2]|0;J=c[t+(D<<2)>>2]|0;if(((c[l+28>>2]|0)-(c[l+24>>2]|0)|0)<(J|0)){ti(l,J);m=c[l+48>>2]|0;n=c[l+52>>2]|0}wi(l,r-1+D|0);C=C+1|0}N=b;i=j;return N|0}function ki(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0,T=0.0,U=0,V=0,W=0.0,X=0,Y=0,Z=0.0,_=0,$=0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[d>>2]|0;j=c[d+4>>2]|0;k=c[j+48>>2]|0;l=c[j+52>>2]|0;m=c[d+16>>2]|0;n=(c[j+8>>2]|0)+(m-1<<2)|0;o=(c[j+12>>2]|0)+(m-1<<2)|0;m=c[d+24>>2]|0;d=(c[j+8>>2]|0)+(m-1<<2)|0;p=(c[j+12>>2]|0)+(m-1<<2)|0;m=c[f+4>>2]|0;j=c[f+12>>2]|0;q=c[f+16>>2]|0;r=c[f+20>>2]|0;s=c[f+24>>2]|0;t=c[f+28>>2]|0;u=+h[f+48>>3];v=c[f+56>>2]|0;w=c[f+60>>2]|0;f=0;x=0;y=1.7976931348623157e+308;z=0;A=c[q+4>>2]|0;if((A|0)!=0){if((c[p+(A<<2)>>2]|0)==1){B=1}else{Ji(5632,17400,478);B=1}x=c[k+(c[d+(A<<2)>>2]<<2)>>2]|0;f=A;C=x;D=a;c[D>>2]=C;E=f;F=b;c[F>>2]=E;G=x;H=(G|0)==0;I=H&1;i=e;return I|0}B=c[m+4>>2]|0;if((B|0)!=0){if((c[o+(B<<2)>>2]|0)==1){J=1}else{Ji(4496,17400,486);J=1}x=B;f=c[k+(c[n+(B<<2)>>2]<<2)>>2]|0;C=x;D=a;c[D>>2]=C;E=f;F=b;c[F>>2]=E;G=x;H=(G|0)==0;I=H&1;i=e;return I|0}J=2;a:while(1){if((J|0)>(g|0)){K=101;break}A=c[q+(J<<2)>>2]|0;while(1){if((A|0)==0){break}L=c[s+(A<<2)>>2]|0;M=0;N=0;O=2147483647;P=c[d+(A<<2)>>2]|0;Q=P;R=P+(c[p+(A<<2)>>2]|0)|0;while(1){if((Q|0)>=(R|0)){break}B=c[k+(Q<<2)>>2]|0;do{if((c[o+(B<<2)>>2]|0)<(O|0)){S=+h[t+(B<<3)>>3];T=S;if(S<0.0){P=c[n+(B<<2)>>2]|0;U=P;V=P+(c[o+(B<<2)>>2]|0)|0;while(1){if((U|0)>=(V|0)){break}S=+h[l+(U<<3)>>3];W=S;if(S<0.0){W=-0.0-W}if(T<W){T=W}U=U+1|0}if(T>0.0){X=1}else{Ji(3664,17400,518);X=1}h[t+(B<<3)>>3]=T}P=c[n+(B<<2)>>2]|0;U=P;V=P+(c[o+(B<<2)>>2]|0)|0;while(1){if((c[k+(U<<2)>>2]|0)==(A|0)){break}U=U+1|0}if((U|0)<(V|0)){Y=1}else{Ji(2808,17400,525);Y=1}S=+h[l+(U<<3)>>3];W=S;if(S<0.0){W=-0.0-W}if(W<u*T){break}N=B;M=A;O=c[o+(B<<2)>>2]|0;if((O|0)<=(J|0)){K=40;break a}}}while(0);Q=Q+1|0}if((N|0)!=0){z=z+1|0;Z=+(O-1|0)*+(J-1|0);if(Z<y){x=N;f=M;y=Z}if((z|0)==(v|0)){K=47;break a}}else{if((w|0)!=0){if((c[r+(A<<2)>>2]|0)==0){c[q+(c[p+(A<<2)>>2]<<2)>>2]=c[s+(A<<2)>>2]}else{c[s+(c[r+(A<<2)>>2]<<2)>>2]=c[s+(A<<2)>>2]}if((c[s+(A<<2)>>2]|0)!=0){c[r+(c[s+(A<<2)>>2]<<2)>>2]=c[r+(A<<2)>>2]}c[s+(A<<2)>>2]=-1;c[r+(A<<2)>>2]=-1;Q=A;c[s+(A<<2)>>2]=Q;c[r+(A<<2)>>2]=Q}}A=L}B=c[m+(J<<2)>>2]|0;while(1){if((B|0)==0){break}S=+h[t+(B<<3)>>3];T=S;if(S<0.0){Q=c[n+(B<<2)>>2]|0;U=Q;V=Q+(c[o+(B<<2)>>2]|0)|0;while(1){if((U|0)>=(V|0)){break}S=+h[l+(U<<3)>>3];W=S;if(S<0.0){W=-0.0-W}if(T<W){T=W}U=U+1|0}if(T>0.0){_=1}else{Ji(3664,17400,580);_=1}h[t+(B<<3)>>3]=T}M=0;N=0;O=2147483647;L=c[n+(B<<2)>>2]|0;U=L;V=L+(c[o+(B<<2)>>2]|0)|0;while(1){if((U|0)>=(V|0)){break}A=c[k+(U<<2)>>2]|0;do{if((c[p+(A<<2)>>2]|0)<(O|0)){S=+h[l+(U<<3)>>3];W=S;if(S<0.0){W=-0.0-W}if(W<u*T){break}N=B;M=A;O=c[p+(A<<2)>>2]|0;if((O|0)<=(J|0)){K=85;break a}}}while(0);U=U+1|0}if((N|0)!=0){z=z+1|0;Z=+(J-1|0)*+(O-1|0);if(Z<y){x=N;f=M;y=Z}if((z|0)==(v|0)){K=92;break a}}else{if((N|0)!=(N|0)){$=1}else{Ji(2008,17400,627);$=1}}B=c[j+(B<<2)>>2]|0}J=J+1|0}if((K|0)==40){x=N;f=M;C=x;D=a;c[D>>2]=C;E=f;F=b;c[F>>2]=E;G=x;H=(G|0)==0;I=H&1;i=e;return I|0}else if((K|0)==47){C=x;D=a;c[D>>2]=C;E=f;F=b;c[F>>2]=E;G=x;H=(G|0)==0;I=H&1;i=e;return I|0}else if((K|0)==85){x=N;f=M;C=x;D=a;c[D>>2]=C;E=f;F=b;c[F>>2]=E;G=x;H=(G|0)==0;I=H&1;i=e;return I|0}else if((K|0)==92){C=x;D=a;c[D>>2]=C;E=f;F=b;c[F>>2]=E;G=x;H=(G|0)==0;I=H&1;i=e;return I|0}else if((K|0)==101){C=x;D=a;c[D>>2]=C;E=f;F=b;c[F>>2]=E;G=x;H=(G|0)==0;I=H&1;i=e;return I|0}return 0}function li(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0,$=0,aa=0,ba=0;f=i;g=b;b=d;d=e;e=c[g>>2]|0;j=c[e>>2]|0;k=c[e+4>>2]|0;l=c[k+48>>2]|0;m=c[k+52>>2]|0;n=c[e+12>>2]|0;o=(c[k+8>>2]|0)+(n-1<<2)|0;p=(c[k+12>>2]|0)+(n-1<<2)|0;q=c[e+16>>2]|0;r=(c[k+8>>2]|0)+(q-1<<2)|0;s=(c[k+12>>2]|0)+(q-1<<2)|0;t=(c[k+16>>2]|0)+(q-1<<2)|0;u=c[e+20>>2]|0;v=c[e+24>>2]|0;e=(c[k+8>>2]|0)+(v-1<<2)|0;w=(c[k+12>>2]|0)+(v-1<<2)|0;x=(c[k+16>>2]|0)+(v-1<<2)|0;y=c[g+4>>2]|0;z=c[g+8>>2]|0;A=c[g+12>>2]|0;B=c[g+16>>2]|0;C=c[g+20>>2]|0;D=c[g+24>>2]|0;E=c[g+28>>2]|0;F=c[g+32>>2]|0;G=c[g+36>>2]|0;H=+h[g+64>>3];I=0;if(1<=(b|0)){if((b|0)<=(j|0)){J=1}else{K=3}}else{K=3}if((K|0)==3){Ji(21416,17400,722);J=1}if(1<=(d|0)){if((d|0)<=(j|0)){L=1}else{K=6}}else{K=6}if((K|0)==6){Ji(20144,17400,723);L=1}if((c[z+(b<<2)>>2]|0)==0){c[y+(c[s+(b<<2)>>2]<<2)>>2]=c[A+(b<<2)>>2]}else{c[A+(c[z+(b<<2)>>2]<<2)>>2]=c[A+(b<<2)>>2]}if((c[A+(b<<2)>>2]|0)!=0){c[z+(c[A+(b<<2)>>2]<<2)>>2]=c[z+(b<<2)>>2]}c[A+(b<<2)>>2]=-1;c[z+(b<<2)>>2]=-1;L=0;j=c[r+(b<<2)>>2]|0;J=j;M=j+(c[s+(b<<2)>>2]|0)|0;while(1){if((J|0)>=(M|0)){break}N=c[l+(J<<2)>>2]|0;if((N|0)==(d|0)){L=J}else{a[F+N|0]=1;h[G+(N<<3)>>3]=+h[m+(J<<3)>>3]}if((c[D+(N<<2)>>2]|0)==(N|0)){if((c[C+(N<<2)>>2]|0)==(N|0)){O=1}else{Ji(19096,17400,748);O=1}}else{if((c[C+(N<<2)>>2]|0)==0){c[B+(c[w+(N<<2)>>2]<<2)>>2]=c[D+(N<<2)>>2]}else{c[D+(c[C+(N<<2)>>2]<<2)>>2]=c[D+(N<<2)>>2]}if((c[D+(N<<2)>>2]|0)!=0){c[C+(c[D+(N<<2)>>2]<<2)>>2]=c[C+(N<<2)>>2]}c[D+(N<<2)>>2]=-1;c[C+(N<<2)>>2]=-1}I=I-(c[w+(N<<2)>>2]|0)|0;j=c[e+(N<<2)>>2]|0;P=j;Q=j+(c[w+(N<<2)>>2]|0)|0;while(1){if((c[l+(P<<2)>>2]|0)==(b|0)){break}P=P+1|0}if((P|0)<(Q|0)){R=1}else{Ji(17808,17400,757);R=1}c[l+(P<<2)>>2]=c[l+(Q-1<<2)>>2];j=w+(N<<2)|0;c[j>>2]=(c[j>>2]|0)-1;J=J+1|0}if((L|0)>0){S=1}else{Ji(16648,17400,762);S=1}T=+h[m+(L<<3)>>3];h[u+(b<<3)>>3]=T;U=T;c[l+(L<<2)>>2]=c[l+(M-1<<2)>>2];h[m+(L<<3)>>3]=+h[m+(M-1<<3)>>3];u=s+(b<<2)|0;c[u>>2]=(c[u>>2]|0)-1;if((c[g+40>>2]|0)==0){V=c[s+(b<<2)>>2]|0;if(((c[k+28>>2]|0)-(c[k+24>>2]|0)|0)<(V|0)){ti(k,V);l=c[k+48>>2]|0;m=c[k+52>>2]|0}wi(k,q-1+b|0)}V=c[w+(d<<2)>>2]|0;if((V|0)>0){if(((c[k+28>>2]|0)-(c[k+24>>2]|0)|0)<(V|0)){ti(k,V);l=c[k+48>>2]|0;m=c[k+52>>2]|0}vi(k,n-1+b|0,V);Ku(l+(c[o+(b<<2)>>2]<<2)|0,l+(c[e+(d<<2)>>2]<<2)|0,V<<2)|0;c[p+(b<<2)>>2]=V}c[w+(d<<2)>>2]=0;n=(c[p+(b<<2)>>2]|0)-1|0;while(1){if((n|0)<0){break}p=c[l+((c[o+(b<<2)>>2]|0)+n<<2)>>2]|0;if((p|0)!=(b|0)){W=1}else{Ji(16248,17400,799);W=1}if((c[z+(p<<2)>>2]|0)==0){c[y+(c[s+(p<<2)>>2]<<2)>>2]=c[A+(p<<2)>>2]}else{c[A+(c[z+(p<<2)>>2]<<2)>>2]=c[A+(p<<2)>>2]}if((c[A+(p<<2)>>2]|0)!=0){c[z+(c[A+(p<<2)>>2]<<2)>>2]=c[z+(p<<2)>>2]}c[A+(p<<2)>>2]=-1;c[z+(p<<2)>>2]=-1;g=c[r+(p<<2)>>2]|0;J=g;M=g+(c[s+(p<<2)>>2]|0)|0;while(1){if((c[l+(J<<2)>>2]|0)==(d|0)){break}J=J+1|0}if((J|0)<(M|0)){X=1}else{Ji(2808,17400,807);X=1}T=+h[m+(J<<3)>>3]/U;h[m+((c[o+(b<<2)>>2]|0)+n<<3)>>3]=T;Y=T;c[l+(J<<2)>>2]=c[l+(M-1<<2)>>2];h[m+(J<<3)>>3]=+h[m+(M-1<<3)>>3];g=s+(p<<2)|0;c[g>>2]=(c[g>>2]|0)-1;g=c[s+(b<<2)>>2]|0;u=c[r+(p<<2)>>2]|0;L=u;J=u;M=u+(c[s+(p<<2)>>2]|0)|0;while(1){if((J|0)>=(M|0)){break}N=c[l+(J<<2)>>2]|0;Z=+h[m+(J<<3)>>3];a:do{if((a[F+N|0]|0)!=0){a[F+N|0]=0;g=g-1|0;Z=Z-Y*+h[G+(N<<3)>>3];do{if(-0.0-H<Z){if(!(Z<H)){break}u=c[e+(N<<2)>>2]|0;P=u;Q=u+(c[w+(N<<2)>>2]|0)|0;while(1){if((c[l+(P<<2)>>2]|0)==(p|0)){break}P=P+1|0}if((P|0)<(Q|0)){_=1}else{Ji(17808,17400,838);_=1}c[l+(P<<2)>>2]=c[l+(Q-1<<2)>>2];u=w+(N<<2)|0;c[u>>2]=(c[u>>2]|0)-1;break a}}while(0);K=82}else{K=82}}while(0);if((K|0)==82){K=0;c[l+(L<<2)>>2]=N;h[m+(L<<3)>>3]=Z;L=L+1|0}J=J+1|0}u=L-(c[r+(p<<2)>>2]|0)|0;V=u;c[s+(p<<2)>>2]=u;if((g|0)==0){u=c[r+(b<<2)>>2]|0;J=u;M=u+(c[s+(b<<2)>>2]|0)|0;while(1){if((J|0)>=(M|0)){break}a[F+(c[l+(J<<2)>>2]|0)|0]=1;J=J+1|0}}else{if((c[t+(p<<2)>>2]|0)<(V+g|0)){if(((c[k+28>>2]|0)-(c[k+24>>2]|0)|0)<(V+g|0)){ti(k,V+g|0);l=c[k+48>>2]|0;m=c[k+52>>2]|0}ui(k,q-1+p|0,V+g|0,0)}u=s+(p<<2)|0;c[u>>2]=(c[u>>2]|0)+g;u=(c[s+(b<<2)>>2]|0)-1|0;while(1){if((u|0)<0){break}N=c[l+((c[r+(b<<2)>>2]|0)+u<<2)>>2]|0;b:do{if((a[F+N|0]|0)!=0){Z=(-0.0-Y)*+h[G+(N<<3)>>3];do{if(-0.0-H<Z){if(!(Z<H)){break}break b}}while(0);S=V;V=S+1|0;R=(c[r+(p<<2)>>2]|0)+S|0;L=R;c[l+(R<<2)>>2]=N;h[m+(L<<3)>>3]=Z;if((c[x+(N<<2)>>2]|0)==(c[w+(N<<2)>>2]|0)){R=(c[w+(N<<2)>>2]|0)+10|0;if(((c[k+28>>2]|0)-(c[k+24>>2]|0)|0)<(R|0)){ti(k,R);l=c[k+48>>2]|0;m=c[k+52>>2]|0}ui(k,v-1+N|0,R,1)}R=c[e+(N<<2)>>2]|0;S=w+(N<<2)|0;O=c[S>>2]|0;c[S>>2]=O+1;c[l+(R+O<<2)>>2]=p}else{a[F+N|0]=1}}while(0);u=u-1|0}if((V|0)<=(c[s+(p<<2)>>2]|0)){$=1}else{Ji(15872,17400,914);$=1}c[s+(p<<2)>>2]=V}u=c[s+(p<<2)>>2]|0;c[z+(p<<2)>>2]=0;c[A+(p<<2)>>2]=c[y+(u<<2)>>2];if((c[A+(p<<2)>>2]|0)!=0){c[z+(c[A+(p<<2)>>2]<<2)>>2]=p}c[y+(u<<2)>>2]=p;h[E+(p<<3)>>3]=-1.0;n=n-1|0}n=c[r+(b<<2)>>2]|0;J=n;M=n+(c[s+(b<<2)>>2]|0)|0;while(1){if((J|0)>=(M|0)){break}N=c[l+(J<<2)>>2]|0;if((N|0)!=(d|0)){aa=1}else{Ji(15568,17400,927);aa=1}do{if((c[D+(N<<2)>>2]|0)==(N|0)){if((c[w+(N<<2)>>2]|0)==1){K=125;break}if((c[C+(N<<2)>>2]|0)==(N|0)){ba=1}else{Ji(19096,17400,932);ba=1}}else{K=125}}while(0);if((K|0)==125){K=0;p=c[w+(N<<2)>>2]|0;c[C+(N<<2)>>2]=0;c[D+(N<<2)>>2]=c[B+(p<<2)>>2];if((c[D+(N<<2)>>2]|0)!=0){c[C+(c[D+(N<<2)>>2]<<2)>>2]=N}c[B+(p<<2)>>2]=N}I=I+(c[w+(N<<2)>>2]|0)|0;a[F+N|0]=0;h[G+(N<<3)>>3]=0.0;J=J+1|0}i=f;return I|0}function mi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0,u=0;g=i;j=a;a=b;b=d;d=e;k=f;e=0;while(1){if((e|0)>=(j|0)){l=41;break}m=-1;n=-1;f=k;o=e;while(1){if((o|0)>=(j|0)){break}p=e;while(1){if((p|0)>=(j|0)){break}q=+h[a+((fa(o,j)|0)+p<<3)>>3];r=q;if(q<0.0){r=-0.0-r}if(f<r){n=o;m=p;f=r}p=p+1|0}o=o+1|0}if((n|0)<0){l=16;break}if((e|0)!=(n|0)){p=0;while(1){if((p|0)>=(j|0)){break}r=+h[a+((fa(e,j)|0)+p<<3)>>3];h[a+((fa(e,j)|0)+p<<3)>>3]=+h[a+((fa(n,j)|0)+p<<3)>>3];h[a+((fa(n,j)|0)+p<<3)>>3]=r;p=p+1|0}s=c[b+(e<<2)>>2]|0;c[b+(e<<2)>>2]=c[b+(n<<2)>>2];c[b+(n<<2)>>2]=s}if((e|0)!=(m|0)){o=0;while(1){if((o|0)>=(j|0)){break}r=+h[a+((fa(o,j)|0)+e<<3)>>3];h[a+((fa(o,j)|0)+e<<3)>>3]=+h[a+((fa(o,j)|0)+m<<3)>>3];h[a+((fa(o,j)|0)+m<<3)>>3]=r;o=o+1|0}s=c[d+(e<<2)>>2]|0;c[d+(e<<2)>>2]=c[d+(m<<2)>>2];c[d+(m<<2)>>2]=s}f=+h[a+((fa(e,j)|0)+e<<3)>>3];o=e+1|0;while(1){if((o|0)>=(j|0)){break}if(+h[a+((fa(o,j)|0)+e<<3)>>3]!=0.0){n=a+((fa(o,j)|0)+e<<3)|0;q=+h[n>>3]/f;h[n>>3]=q;r=q;p=e+1|0;while(1){if((p|0)>=(j|0)){break}q=r*+h[a+((fa(e,j)|0)+p<<3)>>3];n=a+((fa(o,j)|0)+p<<3)|0;h[n>>3]=+h[n>>3]-q;p=p+1|0}}o=o+1|0}e=e+1|0}if((l|0)==16){t=e+1|0;u=t;i=g;return u|0}else if((l|0)==41){t=0;u=t;i=g;return u|0}return 0}function ni(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;f=a;a=b;b=d;d=c[f>>2]|0;g=c[f+4>>2]|0;j=c[g+48>>2]|0;k=c[g+52>>2]|0;l=c[f+12>>2]|0;m=(c[g+8>>2]|0)+(l-1<<2)|0;n=(c[g+12>>2]|0)+(l-1<<2)|0;o=(c[g+16>>2]|0)+(l-1<<2)|0;p=c[f+16>>2]|0;q=(c[g+8>>2]|0)+(p-1<<2)|0;r=(c[g+12>>2]|0)+(p-1<<2)|0;s=(c[g+16>>2]|0)+(p-1<<2)|0;t=c[f+20>>2]|0;u=(c[g+12>>2]|0)+((c[f+24>>2]|0)-1<<2)|0;v=c[f+32>>2]|0;w=c[f+28>>2]|0;x=c[f+36>>2]|0;y=c[f+40>>2]|0;if(1<=(a|0)){if((a|0)<=(d|0)){z=1}else{A=3}}else{A=3}if((A|0)==3){Ji(15264,17400,1105);z=1}z=a;while(1){if((z|0)>(d|0)){break}c[u+(c[x+(z<<2)>>2]<<2)>>2]=0;z=z+1|0}u=d-a+1|0;if(1<=(u|0)){if((u|0)<=(d|0)){B=1}else{A=10}}else{A=10}if((A|0)==10){Ji(14984,17400,1113);B=1}B=(fa(u,u-1|0)|0)/2|0;f=(fa(u,u)|0)+B+B|0;if(((c[g+28>>2]|0)-(c[g+24>>2]|0)|0)<(f|0)){ti(g,f);j=c[g+48>>2]|0;k=c[g+52>>2]|0}f=(c[g+24>>2]|0)+B|0;B=f+(fa(u,u)|0)|0;C=(c[g+52>>2]|0)+(f<<3)|0;D=1;while(1){if((D|0)>(u|0)){break}E=1;while(1){if((E|0)>(u|0)){break}h[C+((fa(D-1|0,u)|0)+(E-1)<<3)>>3]=0.0;E=E+1|0}F=c[v+(a-1+D<<2)>>2]|0;G=c[q+(F<<2)>>2]|0;H=G+(c[r+(F<<2)>>2]|0)|0;while(1){if((G|0)>=(H|0)){break}I=fa(D-1|0,u)|0;h[C+(I+((c[y+(c[j+(G<<2)>>2]<<2)>>2]|0)-a+1-1)<<3)>>3]=+h[k+(G<<3)>>3];G=G+1|0}c[r+(F<<2)>>2]=0;D=D+1|0}H=mi(u,C+(0<<3)|0,v+(a<<2)|0,x+(a<<2)|0,1.0e-20)|0;I=a;while(1){if((I|0)>(d|0)){break}c[w+(c[v+(I<<2)>>2]<<2)>>2]=I;I=I+1|0}z=a;while(1){if((z|0)>(d|0)){break}c[y+(c[x+(z<<2)>>2]<<2)>>2]=z;z=z+1|0}if((H|0)!=0){if(1<=(H|0)){if((H|0)<=(u|0)){J=1}else{A=36}}else{A=36}if((A|0)==36){Ji(14752,17400,1170);J=1}K=a-1+H|0;L=K;i=e;return L|0}D=1;while(1){if((D|0)>(u|0)){break}F=c[v+(a-1+D<<2)>>2]|0;if((c[r+(F<<2)>>2]|0)==0){M=1}else{Ji(14240,17400,1177);M=1}h[t+(F<<3)>>3]=+h[C+((fa(D-1|0,u)|0)+(D-1)<<3)>>3];N=0;E=D+1|0;while(1){if((E|0)>(u|0)){break}if(+h[C+((fa(D-1|0,u)|0)+(E-1)<<3)>>3]!=0.0){N=N+1|0}E=E+1|0}if((c[s+(F<<2)>>2]|0)<(N|0)){if(((c[g+28>>2]|0)-(c[g+24>>2]|0)|0)>=(N|0)){O=1}else{Ji(13712,17400,1191);O=1}ui(g,p-1+F|0,N,0);if((c[g+24>>2]|0)<=(f|0)){P=1}else{Ji(13248,17400,1194);P=1}}G=c[q+(F<<2)>>2]|0;E=D+1|0;while(1){if((E|0)>(u|0)){break}if(+h[C+((fa(D-1|0,u)|0)+(E-1)<<3)>>3]!=0.0){c[j+(G<<2)>>2]=c[x+(a-1+E<<2)>>2];h[k+(G<<3)>>3]=+h[C+((fa(D-1|0,u)|0)+(E-1)<<3)>>3];G=G+1|0}E=E+1|0}if((G-(c[q+(F<<2)>>2]|0)|0)==(N|0)){Q=1}else{Ji(12720,17400,1206);Q=1}c[r+(F<<2)>>2]=N;D=D+1|0}E=1;while(1){if((E|0)>(u|0)){break}Q=c[v+(a-1+E<<2)>>2]|0;if((c[n+(Q<<2)>>2]|0)==0){R=1}else{Ji(12488,17400,1214);R=1}if((c[o+(Q<<2)>>2]|0)==0){S=1}else{Ji(12240,17400,1215);S=1}N=0;D=E+1|0;while(1){if((D|0)>(u|0)){break}if(+h[C+((fa(D-1|0,u)|0)+(E-1)<<3)>>3]!=0.0){N=N+1|0}D=D+1|0}if(((c[g+28>>2]|0)-(c[g+24>>2]|0)|0)>=(N|0)){T=1}else{Ji(13712,17400,1226);T=1}if((N|0)>0){vi(g,l-1+Q|0,N)}if((B|0)<=(c[g+28>>2]|0)){U=1}else{Ji(12e3,17400,1230);U=1}G=c[m+(Q<<2)>>2]|0;D=E+1|0;while(1){if((D|0)>(u|0)){break}if(+h[C+((fa(D-1|0,u)|0)+(E-1)<<3)>>3]!=0.0){c[j+(G<<2)>>2]=c[v+(a-1+D<<2)>>2];h[k+(G<<3)>>3]=+h[C+((fa(D-1|0,u)|0)+(E-1)<<3)>>3];G=G+1|0}D=D+1|0}if((G-(c[m+(Q<<2)>>2]|0)|0)==(N|0)){V=1}else{Ji(11768,17400,1241);V=1}c[n+(Q<<2)>>2]=N;E=E+1|0}if((b|0)==0){D=1;while(1){if((D|0)>(u|0)){break}F=c[v+(a-1+D<<2)>>2]|0;N=c[r+(F<<2)>>2]|0;if(((c[g+28>>2]|0)-(c[g+24>>2]|0)|0)<(N|0)){ti(g,N);j=c[g+48>>2]|0;k=c[g+52>>2]|0}wi(g,p-1+F|0);D=D+1|0}}K=0;L=K;i=e;return L|0}function oi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0;e=i;i=i+32|0;f=e|0;g=e+8|0;j=e+16|0;k=e+24|0;l=b;b=d;d=c[l>>2]|0;m=c[d>>2]|0;n=c[d+4>>2]|0;o=(c[n+12>>2]|0)+((c[d+16>>2]|0)-1<<2)|0;p=c[d+20>>2]|0;q=(c[n+12>>2]|0)+((c[d+24>>2]|0)-1<<2)|0;r=c[d+28>>2]|0;s=c[d+32>>2]|0;t=c[d+36>>2]|0;u=c[d+40>>2]|0;v=c[l+4>>2]|0;w=c[l+8>>2]|0;x=c[l+12>>2]|0;y=c[l+16>>2]|0;z=c[l+20>>2]|0;A=c[l+24>>2]|0;B=c[l+28>>2]|0;C=c[l+32>>2]|0;D=c[l+36>>2]|0;Zh(d,w);E=1;while(1){if((E|0)>(m|0)){break}h[p+(E<<3)>>3]=0.0;F=E;c[u+(E<<2)>>2]=F;c[t+(E<<2)>>2]=F;c[s+(E<<2)>>2]=F;c[r+(E<<2)>>2]=F;E=E+1|0}if((b|0)!=0){ii(d,f,g,w,x);c[g>>2]=ji(d,c[f>>2]|0,c[g>>2]|0,c[l+40>>2]|0,w,D)|0}else{c[g>>2]=1}c[y>>2]=0;c[v>>2]=0;E=1;while(1){if((E|0)>(m|0)){break}c[y+(E<<2)>>2]=0;c[v+(E<<2)>>2]=0;h[B+(E<<3)>>3]=-1.0;a[C+E|0]=0;h[D+(E<<3)>>3]=0.0;E=E+1|0}D=0;E=c[g>>2]|0;while(1){if((E|0)>(m|0)){break}G=c[s+(E<<2)>>2]|0;C=c[o+(G<<2)>>2]|0;c[w+(G<<2)>>2]=0;c[x+(G<<2)>>2]=c[v+(C<<2)>>2];if((c[x+(G<<2)>>2]|0)!=0){c[w+(c[x+(G<<2)>>2]<<2)>>2]=G}c[v+(C<<2)>>2]=G;D=D+(c[o+(G<<2)>>2]|0)|0;H=c[t+(E<<2)>>2]|0;C=c[q+(H<<2)>>2]|0;c[z+(H<<2)>>2]=0;c[A+(H<<2)>>2]=c[y+(C<<2)>>2];if((c[A+(H<<2)>>2]|0)!=0){c[z+(c[A+(H<<2)>>2]<<2)>>2]=H}c[y+(C<<2)>>2]=H;E=E+1|0}E=c[g>>2]|0;while(1){if((E|0)>(m|0)){break}g=m-E+1|0;I=+(D|0)/+(fa(g,g)|0);if((g|0)>=5){if(I>=.71){J=28;break}}if((ki(l,j,k)|0)!=0){J=30;break}G=c[r+(c[j>>2]<<2)>>2]|0;if((E|0)<=(G|0)){if((G|0)<=(m|0)){K=1}else{J=33}}else{J=33}if((J|0)==33){J=0;Ji(11496,17400,1371);K=1}H=c[u+(c[k>>2]<<2)>>2]|0;if((E|0)<=(H|0)){if((H|0)<=(m|0)){L=1}else{J=36}}else{J=36}if((J|0)==36){J=0;Ji(11192,17400,1373);L=1}g=c[s+(E<<2)>>2]|0;y=c[s+(G<<2)>>2]|0;c[r+(g<<2)>>2]=G;c[s+(G<<2)>>2]=g;c[r+(y<<2)>>2]=E;c[s+(E<<2)>>2]=y;y=c[t+(E<<2)>>2]|0;g=c[t+(H<<2)>>2]|0;c[t+(E<<2)>>2]=g;c[u+(g<<2)>>2]=E;c[t+(H<<2)>>2]=y;c[u+(y<<2)>>2]=H;D=D+(li(l,c[j>>2]|0,c[k>>2]|0)|0)|0;E=E+1|0}if((J|0)!=28)if((J|0)==30){M=E;N=M;i=e;return N|0}do{if((E|0)<=(m|0)){E=ni(d,E,c[l+40>>2]|0)|0;if((E|0)==0){break}M=E;N=M;i=e;return N|0}}while(0);si(n);_h(d,v);$h(d,c[l+40>>2]|0,v);M=0;N=M;i=e;return N|0}function pi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;a=b;if(0<(e|0)){if((e|0)<2147483647){f=1}else{g=3}}else{g=3}if((g|0)==3){Ji(8656,17368,43);f=1}if(0<(a|0)){if((a|0)<2147483647){h=1}else{g=6}}else{g=6}if((g|0)==6){Ji(13040,17368,44);h=1}h=yi(1,60)|0;c[h>>2]=e;c[h+4>>2]=0;c[h+8>>2]=yi(e+1|0,4)|0;c[h+12>>2]=yi(e+1|0,4)|0;c[h+16>>2]=yi(e+1|0,4)|0;c[h+20>>2]=a;c[h+24>>2]=1;c[h+28>>2]=a+1;c[h+36>>2]=0;c[h+32>>2]=0;c[h+40>>2]=yi(e+1|0,4)|0;c[h+44>>2]=yi(e+1|0,4)|0;c[h+48>>2]=yi(a+1|0,4)|0;c[h+52>>2]=yi(a+1|0,8)|0;c[h+56>>2]=0;i=d;return h|0}function qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;e=a;a=b;b=c[e+4>>2]|0;f=c[e>>2]|0;g=c[e+8>>2]|0;h=c[e+12>>2]|0;j=c[e+16>>2]|0;k=c[e+40>>2]|0;l=c[e+44>>2]|0;if((c[e+56>>2]|0)!=0){Li(9664,(m=i,i=i+8|0,c[m>>2]=a,m)|0);i=m}if((a|0)>0){n=1}else{Ji(6912,17368,86);n=1}n=b+a|0;if((n|0)>(b|0)){o=1}else{Ji(5616,17368,89);o=1}if((f|0)<(n|0)){while(1){if((f|0)>=(n|0)){break}f=f+f|0;if((f|0)>0){p=1}else{Ji(4480,17368,94);p=1}}c[e>>2]=f;p=Ai(g,f+1|0,4)|0;g=p;c[e+8>>2]=p;p=Ai(h,f+1|0,4)|0;h=p;c[e+12>>2]=p;p=Ai(j,f+1|0,4)|0;j=p;c[e+16>>2]=p;p=Ai(k,f+1|0,4)|0;k=p;c[e+40>>2]=p;p=Ai(l,f+1|0,4)|0;l=p;c[e+44>>2]=p}c[e+4>>2]=n;p=b+1|0;while(1){if((p|0)>(n|0)){break}c[j+(p<<2)>>2]=0;c[h+(p<<2)>>2]=0;c[g+(p<<2)>>2]=0;c[l+(p<<2)>>2]=-1;c[k+(p<<2)>>2]=-1;p=p+1|0}if((c[e+56>>2]|0)==0){q=b;r=q+1|0;i=d;return r|0}p=c[e+4>>2]|0;Li(3624,(m=i,i=i+16|0,c[m>>2]=c[e>>2],c[m+8>>2]=p,m)|0);i=m;q=b;r=q+1|0;i=d;return r|0}function ri(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a;a=b;b=c[e+4>>2]|0;f=c[e+8>>2]|0;g=c[e+20>>2]|0;h=c[e+24>>2]|0;j=c[e+28>>2]|0;if((c[e+56>>2]|0)!=0){Li(2776,(k=i,i=i+8|0,c[k>>2]=a,k)|0);i=k}if((a|0)!=0){l=1}else{Ji(1992,17368,146);l=1}l=g-j+1|0;if((a|0)<0){if((a|0)>=(h-j|0)){m=1}else{Ji(21392,17368,151);m=1}m=e+28|0;c[m>>2]=(c[m>>2]|0)+a;Ou((c[e+48>>2]|0)+(c[e+28>>2]<<2)|0,(c[e+48>>2]|0)+(j<<2)|0,l<<2|0)|0;Ou((c[e+52>>2]|0)+(c[e+28>>2]<<3)|0,(c[e+52>>2]|0)+(j<<3)|0,l<<3|0)|0}if((a|0)<(2147483647-(c[e+20>>2]|0)|0)){n=1}else{Ji(20112,17368,159);n=1}n=e+20|0;c[n>>2]=(c[n>>2]|0)+a;c[e+48>>2]=Ai(c[e+48>>2]|0,(c[e+20>>2]|0)+1|0,4)|0;c[e+52>>2]=Ai(c[e+52>>2]|0,(c[e+20>>2]|0)+1|0,8)|0;if((a|0)>0){n=e+28|0;c[n>>2]=(c[n>>2]|0)+a;Ou((c[e+48>>2]|0)+(c[e+28>>2]<<2)|0,(c[e+48>>2]|0)+(j<<2)|0,l<<2|0)|0;Ou((c[e+52>>2]|0)+(c[e+28>>2]<<3)|0,(c[e+52>>2]|0)+(j<<3)|0,l<<3|0)|0}l=1;while(1){if((l|0)>(b|0)){break}if((c[f+(l<<2)>>2]|0)>=(j|0)){n=f+(l<<2)|0;c[n>>2]=(c[n>>2]|0)+a}l=l+1|0}if((c[e+56>>2]|0)==0){i=d;return}Li(19072,(k=i,i=i+8|0,c[k>>2]=c[e+20>>2],k)|0);i=k;i=d;return}function si(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;b=i;d=a;a=c[d+8>>2]|0;e=c[d+12>>2]|0;f=c[d+16>>2]|0;g=c[d+40>>2]|0;h=c[d+44>>2]|0;j=c[d+48>>2]|0;k=c[d+52>>2]|0;if((c[d+56>>2]|0)!=0){Li(17776,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;m=(c[d+28>>2]|0)-(c[d+24>>2]|0)|0;n=(c[d+20>>2]|0)+1-(c[d+28>>2]|0)|0;Li(16608,(l=i,i=i+24|0,c[l>>2]=(c[d+24>>2]|0)-1,c[l+8>>2]=m,c[l+16>>2]=n,l)|0);i=l}n=1;m=0;o=0;p=c[d+32>>2]|0;while(1){if((p|0)==0){break}q=c[h+(p<<2)>>2]|0;r=c[e+(p<<2)>>2]|0;if((r|0)==0){c[f+(p<<2)>>2]=0;c[a+(p<<2)>>2]=0;c[h+(p<<2)>>2]=-1;c[g+(p<<2)>>2]=-1}else{s=c[a+(p<<2)>>2]|0;if((n|0)<=(s|0)){t=1}else{Ji(16232,17368,225);t=1}if((n|0)<(s|0)){Ou(j+(n<<2)|0,j+(s<<2)|0,r<<2|0)|0;Ou(k+(n<<3)|0,k+(s<<3)|0,r<<3|0)|0;c[a+(p<<2)>>2]=n}c[f+(p<<2)>>2]=r;n=n+r|0;c[g+(p<<2)>>2]=m;c[h+(p<<2)>>2]=0;if((o|0)==0){o=p}else{c[h+(m<<2)>>2]=p}m=p}p=q}if((n|0)<=(c[d+28>>2]|0)){u=1}else{Ji(15848,17368,250);u=1}c[d+24>>2]=n;c[d+32>>2]=o;c[d+36>>2]=m;if((c[d+56>>2]|0)==0){i=b;return}m=(c[d+28>>2]|0)-(c[d+24>>2]|0)|0;o=(c[d+20>>2]|0)+1-(c[d+28>>2]|0)|0;Li(15520,(l=i,i=i+24|0,c[l>>2]=(c[d+24>>2]|0)-1,c[l+8>>2]=m,c[l+16>>2]=o,l)|0);i=l;i=b;return}function ti(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a;a=b;if((c[e+56>>2]|0)!=0){Li(15208,(b=i,i=i+8|0,c[b>>2]=a,b)|0);i=b}if((a|0)>((c[e+28>>2]|0)-(c[e+24>>2]|0)|0)){f=1}else{Ji(14928,17368,283);f=1}si(e);if((a|0)<((c[e+24>>2]|0)-1|0)){a=(c[e+24>>2]|0)-1|0}if(((c[e+28>>2]|0)-(c[e+24>>2]|0)|0)>=(a|0)){i=d;return}f=c[e+20>>2]|0;while(1){g=f-(c[e+20>>2]|0)|0;if(((c[e+28>>2]|0)-(c[e+24>>2]|0)+g|0)>=(a|0)){break}f=f+f|0;if((f|0)>0){h=1}else{Ji(14736,17368,299);h=1}}ri(e,g);if(((c[e+28>>2]|0)-(c[e+24>>2]|0)|0)>=(a|0)){j=1}else{Ji(14200,17368,302);j=1}i=d;return}function ui(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;g=a;a=b;b=d;d=e;e=c[g+8>>2]|0;h=c[g+12>>2]|0;j=c[g+16>>2]|0;k=c[g+40>>2]|0;l=c[g+44>>2]|0;m=c[g+48>>2]|0;n=c[g+52>>2]|0;if(1<=(a|0)){if((a|0)<=(c[g+4>>2]|0)){o=1}else{p=3}}else{p=3}if((p|0)==3){Ji(13688,17368,336);o=1}if((b|0)>(c[j+(a<<2)>>2]|0)){q=1}else{Ji(13224,17368,337);q=1}if(((c[g+28>>2]|0)-(c[g+24>>2]|0)|0)>=(b|0)){r=1}else{Ji(12680,17368,339);r=1}if((c[j+(a<<2)>>2]|0)==0){if((c[e+(a<<2)>>2]|0)==0){s=1}else{Ji(12464,17368,343);s=1}if((c[h+(a<<2)>>2]|0)==0){t=1}else{Ji(12224,17368,344);t=1}}else{if(((c[e+(a<<2)>>2]|0)+(c[h+(a<<2)>>2]|0)|0)<=(c[g+24>>2]|0)){u=1}else{Ji(11968,17368,348);u=1}if((c[h+(a<<2)>>2]|0)>0){Ku(m+(c[g+24>>2]<<2)|0,m+(c[e+(a<<2)>>2]<<2)|0,c[h+(a<<2)>>2]<<2)|0;if((d|0)==0){Ku(n+(c[g+24>>2]<<3)|0,n+(c[e+(a<<2)>>2]<<3)|0,c[h+(a<<2)>>2]<<3)|0}}if((c[k+(a<<2)>>2]|0)==0){c[g+32>>2]=c[l+(a<<2)>>2]}else{h=j+(c[k+(a<<2)>>2]<<2)|0;c[h>>2]=(c[h>>2]|0)+(c[j+(a<<2)>>2]|0);c[l+(c[k+(a<<2)>>2]<<2)>>2]=c[l+(a<<2)>>2]}if((c[l+(a<<2)>>2]|0)==0){c[g+36>>2]=c[k+(a<<2)>>2]}else{c[k+(c[l+(a<<2)>>2]<<2)>>2]=c[k+(a<<2)>>2]}}c[e+(a<<2)>>2]=c[g+24>>2];c[j+(a<<2)>>2]=b;c[k+(a<<2)>>2]=c[g+36>>2];c[l+(a<<2)>>2]=0;if((c[g+32>>2]|0)==0){c[g+32>>2]=a}else{c[l+(c[g+36>>2]<<2)>>2]=a}c[g+36>>2]=a;a=g+24|0;c[a>>2]=(c[a>>2]|0)+b;if((c[g+24>>2]|0)<=(c[g+28>>2]|0)){v=1;w=v&1;i=f;return}Ji(11736,17368,384);v=1;w=v&1;i=f;return}function vi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=a;a=b;b=d;d=c[f+8>>2]|0;g=c[f+12>>2]|0;h=c[f+16>>2]|0;if(1<=(a|0)){if((a|0)<=(c[f+4>>2]|0)){j=1}else{k=3}}else{k=3}if((k|0)==3){Ji(13688,17368,407);j=1}if((b|0)>0){l=1}else{Ji(11480,17368,408);l=1}do{if((c[d+(a<<2)>>2]|0)==0){if((c[g+(a<<2)>>2]|0)!=0){k=9;break}if((c[h+(a<<2)>>2]|0)==0){m=1}else{k=9}}else{k=9}}while(0);if((k|0)==9){Ji(11144,17368,409);m=1}if(((c[f+28>>2]|0)-(c[f+24>>2]|0)|0)>=(b|0)){n=1}else{Ji(12680,17368,411);n=1}c[d+(a<<2)>>2]=(c[f+28>>2]|0)-b;c[h+(a<<2)>>2]=b;a=f+28|0;c[a>>2]=(c[a>>2]|0)-b;i=e;return}function wi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;e=a;a=b;b=c[e+8>>2]|0;f=c[e+12>>2]|0;g=c[e+16>>2]|0;h=c[e+40>>2]|0;j=c[e+44>>2]|0;k=c[e+48>>2]|0;l=c[e+52>>2]|0;if(1<=(a|0)){if((a|0)<=(c[e+4>>2]|0)){m=1}else{n=3}}else{n=3}if((n|0)==3){Ji(13688,17368,444);m=1}if((c[g+(a<<2)>>2]|0)==0){if((c[b+(a<<2)>>2]|0)==0){o=1}else{Ji(12464,17368,447);o=1}if((c[f+(a<<2)>>2]|0)==0){p=1}else{Ji(12224,17368,448);p=1}i=d;return}p=c[f+(a<<2)>>2]|0;if(((c[e+28>>2]|0)-(c[e+24>>2]|0)|0)>=(p|0)){q=1}else{Ji(10704,17368,453);q=1}if((c[h+(a<<2)>>2]|0)==0){c[e+32>>2]=c[j+(a<<2)>>2]}else{q=g+(c[h+(a<<2)>>2]<<2)|0;c[q>>2]=(c[q>>2]|0)+(c[g+(a<<2)>>2]|0);c[j+(c[h+(a<<2)>>2]<<2)>>2]=c[j+(a<<2)>>2]}if((c[j+(a<<2)>>2]|0)==0){c[e+36>>2]=c[h+(a<<2)>>2]}else{c[h+(c[j+(a<<2)>>2]<<2)>>2]=c[h+(a<<2)>>2]}if((p|0)==0){c[g+(a<<2)>>2]=0;c[b+(a<<2)>>2]=0;i=d;return}else{h=(c[e+28>>2]|0)-p|0;Ku(k+(h<<2)|0,k+(c[b+(a<<2)>>2]<<2)|0,p<<2)|0;Ku(l+(h<<3)|0,l+(c[b+(a<<2)>>2]<<3)|0,p<<3)|0;c[b+(a<<2)>>2]=h;c[g+(a<<2)>>2]=p;a=e+28|0;c[a>>2]=(c[a>>2]|0)-p;i=d;return}}function xi(a){a=a|0;var b=0,d=0;b=i;d=a;Bi(c[d+8>>2]|0);Bi(c[d+12>>2]|0);Bi(c[d+16>>2]|0);Bi(c[d+40>>2]|0);Bi(c[d+44>>2]|0);Bi(c[d+48>>2]|0);Bi(c[d+52>>2]|0);Bi(d);i=b;return}function yi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;a=b;if((e|0)<1){Gc[(Hi(8336,135)|0)&127](17296,(f=i,i=i+8|0,c[f>>2]=e,f)|0);i=f}if((a|0)<1){Gc[(Hi(8336,137)|0)&127](12992,(f=i,i=i+8|0,c[f>>2]=a,f)|0);i=f}if(!(e>>>0>(4294967295/(a>>>0)|0)>>>0)){g=e;h=a;j=fa(g,h)|0;k=zi(6848,0,j)|0;i=d;return k|0}Gc[(Hi(8336,139)|0)&127](9568,(f=i,i=i+16|0,c[f>>2]=e,c[f+8>>2]=a,f)|0);i=f;g=e;h=a;j=fa(g,h)|0;k=zi(6848,0,j)|0;i=d;return k|0}function zi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=a;a=b;b=d;d=Ei()|0;do{if((a|0)==0){g=0}else{g=a-16|0;if((c[g+4>>2]|0)!=(g|0)){Gc[(Hi(8336,59)|0)&127](17696,(h=i,i=i+16|0,c[h>>2]=f,c[h+8>>2]=a,h)|0);i=h}c[g+4>>2]=0;if((c[g+8>>2]|0)==0){c[d+56>>2]=c[g+12>>2]}else{c[(c[g+8>>2]|0)+12>>2]=c[g+12>>2]}if((c[g+12>>2]|0)!=0){c[(c[g+12>>2]|0)+8>>2]=c[g+8>>2]}if((c[d+60>>2]|0)>=1){if(!((c[d+68>>2]|0)>>>0>=(c[g>>2]|0)>>>0)){j=13}}else{j=13}if((j|0)==13){Gc[(Hi(8336,72)|0)&127](16576,(h=i,i=i+8|0,c[h>>2]=f,h)|0);i=h}k=d+60|0;c[k>>2]=(c[k>>2]|0)-1;k=d+68|0;c[k>>2]=(c[k>>2]|0)-(c[g>>2]|0);if((b|0)!=0){break}nu(g);l=0;m=l;i=e;return m|0}}while(0);if(b>>>0>4294967279>>>0){Gc[(Hi(8336,83)|0)&127](16208,(h=i,i=i+8|0,c[h>>2]=f,h)|0);i=h}b=b+16|0;if(b>>>0>((c[d+52>>2]|0)-(c[d+68>>2]|0)|0)>>>0){Gc[(Hi(8336,86)|0)&127](15808,(h=i,i=i+8|0,c[h>>2]=f,h)|0);i=h}if((c[d+60>>2]|0)==2147483647){Gc[(Hi(8336,88)|0)&127](15480,(h=i,i=i+8|0,c[h>>2]=f,h)|0);i=h}if((g|0)==0){n=mu(b)|0}else{n=ou(g,b)|0}g=n;if((g|0)==0){Gc[(Hi(8336,91)|0)&127](15176,(h=i,i=i+8|0,c[h>>2]=f,h)|0);i=h}c[g>>2]=b;c[g+4>>2]=g;c[g+8>>2]=0;c[g+12>>2]=c[d+56>>2];if((c[g+12>>2]|0)!=0){c[(c[g+12>>2]|0)+8>>2]=g}c[d+56>>2]=g;h=d+60|0;c[h>>2]=(c[h>>2]|0)+1;if((c[d+64>>2]|0)<(c[d+60>>2]|0)){c[d+64>>2]=c[d+60>>2]}h=d+68|0;c[h>>2]=(c[h>>2]|0)+b;if((c[d+72>>2]|0)>>>0<(c[d+68>>2]|0)>>>0){c[d+72>>2]=c[d+68>>2]}l=g+16|0;m=l;i=e;return m|0}function Ai(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=a;a=b;b=d;if((f|0)==0){Gc[(Hi(8336,149)|0)&127](5528,(g=i,i=i+8|0,c[g>>2]=f,g)|0);i=g}if((a|0)<1){Gc[(Hi(8336,151)|0)&127](4392,(g=i,i=i+8|0,c[g>>2]=a,g)|0);i=g}if((b|0)<1){Gc[(Hi(8336,153)|0)&127](3528,(g=i,i=i+8|0,c[g>>2]=b,g)|0);i=g}if(!(a>>>0>(4294967295/(b>>>0)|0)>>>0)){h=f;j=a;k=b;l=fa(j,k)|0;m=zi(1928,h,l)|0;i=e;return m|0}Gc[(Hi(8336,155)|0)&127](2672,(g=i,i=i+16|0,c[g>>2]=a,c[g+8>>2]=b,g)|0);i=g;h=f;j=a;k=b;l=fa(j,k)|0;m=zi(1928,h,l)|0;i=e;return m|0}function Bi(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;if((d|0)!=0){e=d;f=zi(20048,e,0)|0;i=b;return}Gc[(Hi(8336,177)|0)&127](21304,(a=i,i=i+8|0,c[a>>2]=d,a)|0);i=a;e=d;f=zi(20048,e,0)|0;i=b;return}function Ci(a){a=a|0;var b=0,c=0,d=0;b=i;c=a;if((c|0)!=(c|0)){d=1}else{Ji(9560,17264,161);d=1}i=b;return}function Di(){var b=0,d=0,e=0,f=0,g=0;b=i;if(1==0){d=3;e=d;i=b;return e|0}if((Qi()|0)!=0){d=1;e=d;i=b;return e|0}f=mu(84)|0;if((f|0)==0){d=2;e=d;i=b;return e|0}Nu(f|0,0,84)|0;ob(f|0,8224,(g=i,i=i+16|0,c[g>>2]=4,c[g+8>>2]=53,g)|0)|0;i=g;c[f+8>>2]=f;c[f+12>>2]=mu(4096)|0;if((c[f+12>>2]|0)==0){nu(f);d=2;e=d;i=b;return e|0}c[f+16>>2]=1;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[f+32>>2]=0;c[f+36>>2]=0;c[f+40>>2]=0;c[f+44>>2]=0;c[f+48>>2]=mu(1024)|0;if((c[f+48>>2]|0)==0){nu(c[f+12>>2]|0);nu(f);d=2;e=d;i=b;return e|0}else{a[c[f+48>>2]|0]=0;c[f+52>>2]=-1;c[f+56>>2]=0;c[f+64>>2]=0;c[f+60>>2]=0;c[f+72>>2]=0;c[f+68>>2]=0;c[f+80>>2]=0;c[f+76>>2]=0;Pi(f);d=0;e=d;i=b;return e|0}return 0}function Ei(){var a=0,b=0,d=0;a=i;b=Qi()|0;do{if((b|0)==0){if((Di()|0)!=0){jc(c[r>>2]|0,17232,(d=i,i=i+1|0,i=i+7&-8,c[d>>2]=0,d)|0)|0;i=d;Ka(c[r>>2]|0)|0;ic();return 0}else{b=Qi()|0;break}}}while(0);if((c[b+8>>2]|0)!=(b|0)){jc(c[r>>2]|0,12960,(d=i,i=i+1|0,i=i+7&-8,c[d>>2]=0,d)|0)|0;i=d;Ka(c[r>>2]|0)|0;ic();return 0}else{i=a;return b|0}return 0}function Fi(){var a=0,b=0;a=i;b=Ei()|0;i=a;return b|0}function Gi(){var a=0,b=0,d=0,e=0,f=0;a=i;b=Qi()|0;if((b|0)==0){d=1;e=d;i=a;return e|0}if((c[b+8>>2]|0)!=(b|0)){jc(c[r>>2]|0,12960,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0)|0;i=f;Ka(c[r>>2]|0)|0;ic();return 0}if((c[b+76>>2]|0)!=0){Ci(c[b+76>>2]|0)}if((c[b+80>>2]|0)!=0){Ci(c[b+80>>2]|0)}while(1){if((c[b+56>>2]|0)==0){break}f=c[b+56>>2]|0;c[b+56>>2]=c[f+12>>2];nu(f)}if((c[b+28>>2]|0)!=0){Ga(c[b+28>>2]|0)|0}c[b+8>>2]=0;nu(c[b+12>>2]|0);nu(c[b+48>>2]|0);nu(b);Pi(0);d=0;e=d;i=a;return e|0}function Hi(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=Ei()|0;c[e+32>>2]=a;c[e+36>>2]=b;i=d;return 86}function Ii(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;d=Ei()|0;c[d+16>>2]=1;f=e|0;c[f>>2]=b;c[f+4>>2]=0;Mi(a,e|0);e=c[d+36>>2]|0;Li(17192,(a=i,i=i+16|0,c[a>>2]=c[d+32>>2],c[a+8>>2]=e,a)|0);i=a;if((c[d+40>>2]|0)==0){ic()}Fc[c[d+40>>2]&511](c[d+44>>2]|0);ic()}function Ji(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;Gc[(Hi(b,d)|0)&127](8200,(d=i,i=i+8|0,c[d>>2]=a,d)|0);i=d;i=e;return}function Ki(a){a=a|0;var b=0,d=0;b=i;d=a;a=Ei()|0;if((c[a+16>>2]|0)==0){i=b;return}do{if((c[a+20>>2]|0)!=0){if((Hc[c[a+20>>2]&127](c[a+24>>2]|0,d)|0)==0){break}i=b;return}}while(0);Qa(d|0,c[s>>2]|0)|0;Ka(c[s>>2]|0)|0;if((c[a+28>>2]|0)!=0){Qa(d|0,c[a+28>>2]|0)|0;Ka(c[a+28>>2]|0)|0}i=b;return}function Li(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=Ei()|0;if((c[f+16>>2]|0)==0){i=d;return}g=e|0;c[g>>2]=b;c[g+4>>2]=0;ac(c[f+12>>2]|0,a|0,e|0)|0;if((Lu(c[f+12>>2]|0)|0)>>>0<4096>>>0){}else{fc(8160,17152,84,22040)}Ki(c[f+12>>2]|0);i=d;return}function Mi(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=Ei()|0;if((c[e+16>>2]|0)==0){i=d;return}ac(c[e+12>>2]|0,a|0,b|0)|0;if((Lu(c[e+12>>2]|0)|0)>>>0<4096>>>0){}else{fc(8160,17152,114,22024)}Ki(c[e+12>>2]|0);i=d;return}function Ni(){var a=0,b=0,d=0,e=0;a=i;i=i+8|0;b=a|0;c[b>>2]=Bc(0)|0;d=ub(b|0)|0;b=Vi(c[d+12>>2]|0,(c[d+16>>2]|0)+1|0,(c[d+20>>2]|0)+1900|0)|0;if((b|0)>=0){e=1}else{Ji(8080,17120,102);e=1}i=a;return+((((+(b-2440588|0)*24.0+ +(c[d+8>>2]|0))*60.0+ +(c[d+4>>2]|0))*60.0+ +(c[d>>2]|0))*1.0e3)}function Oi(a,b){a=+a;b=+b;i=i;return+((a-b)/1.0e3)}function Pi(a){a=a|0;c[7682]=a;i=i;return}function Qi(){i=i;return c[7682]|0}function Ri(){var a=0,b=0,d=0;a=i;if((c[7844]|0)!=0){Li(7936,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b}b=yi(1,140)|0;d=0;while(1){if((d|0)>31){break}c[b+(d<<2)>>2]=0;d=d+1|0}c[b+128>>2]=0;c[b+132>>2]=8e3;c[b+136>>2]=0;i=a;return b|0}function Si(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a;a=b;if(1<=(a|0)){if((a|0)<=256){f=1}else{g=3}}else{g=3}if((g|0)==3){Ji(17088,12928,119);f=1}f=a+7&-8;g=(f>>3)-1|0;if((c[e+(g<<2)>>2]|0)==0){if((c[7844]|0)!=0){f=f+8|0}if(((c[e+132>>2]|0)+f|0)>8e3){b=yi(8e3,1)|0;c[b>>2]=c[e+128>>2];c[e+128>>2]=b;c[e+132>>2]=8}h=(c[e+128>>2]|0)+(c[e+132>>2]|0)|0;b=e+132|0;c[b>>2]=(c[b>>2]|0)+f}else{h=c[e+(g<<2)>>2]|0;c[e+(g<<2)>>2]=c[h>>2]}if((c[7844]|0)==0){j=e;k=j+136|0;l=c[k>>2]|0;m=l+1|0;c[k>>2]=m;n=h;i=d;return n|0}c[h>>2]=e;c[h+4>>2]=a;h=h+8|0;j=e;k=j+136|0;l=c[k>>2]|0;m=l+1|0;c[k>>2]=m;n=h;i=d;return n|0}function Ti(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=a;a=b;b=d;if(1<=(b|0)){if((b|0)<=256){g=1}else{h=3}}else{h=3}if((h|0)==3){Ji(17088,12928,180);g=1}g=(b+7>>3)-1|0;if((c[7844]|0)!=0){a=a-8|0;if((c[a>>2]|0)==(f|0)){j=1}else{Ji(9520,12928,186);j=1}if((c[a+4>>2]|0)==(b|0)){k=1}else{Ji(6808,12928,187);k=1}}c[a>>2]=c[f+(g<<2)>>2];c[f+(g<<2)>>2]=a;if((c[f+136>>2]|0)>>>0>0>>>0){l=1;m=l&1;n=f;o=n+136|0;p=c[o>>2]|0;q=p-1|0;c[o>>2]=q;i=e;return}Ji(5512,12928,193);l=1;m=l&1;n=f;o=n+136|0;p=c[o>>2]|0;q=p-1|0;c[o>>2]=q;i=e;return}function Ui(a){a=a|0;var b=0,d=0;b=i;d=a;while(1){if((c[d+128>>2]|0)==0){break}a=c[d+128>>2]|0;c[d+128>>2]=c[a>>2];Bi(a)}Bi(d);i=b;return}function Vi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+8|0;f=e|0;g=a;a=b;b=d;do{if(1<=(g|0)){if((g|0)>31){break}if(1>(a|0)){break}if((a|0)>12){break}if(1>(b|0)){break}if((b|0)>4e3){break}if((a|0)>=3){a=a-3|0}else{a=a+9|0;b=b-1|0}d=(b|0)/100|0;h=((d*146097|0|0)/4|0)+(((b-(d*100|0)|0)*1461|0|0)/4|0)+(((a*153|0)+2|0)/5|0)+g+1721119|0;Wi(h,f,0,0)|0;if((g|0)!=(c[f>>2]|0)){j=-1;k=j;i=e;return k|0}else{j=h;k=j;i=e;return k|0}}}while(0);j=-1;k=j;i=e;return k|0}function Wi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=a;a=b;b=d;d=e;do{if(1721426<=(g|0)){if((g|0)>3182395){break}g=g-1721119|0;e=((g<<2)-1|0)/146097|0;g=((g<<2)-1|0)%146097|0;h=(g|0)/4|0;g=((h<<2)+3|0)/1461|0;h=((h<<2)+3|0)%1461|0;h=(h+4|0)/4|0;j=((h*5|0)-3|0)/153|0;h=((h*5|0)-3|0)%153|0;h=(h+5|0)/5|0;e=(e*100|0)+g|0;if((j|0)<=9){j=j+3|0}else{j=j-9|0;e=e+1|0}if((a|0)!=0){c[a>>2]=h}if((b|0)!=0){c[b>>2]=j}if((d|0)!=0){c[d>>2]=e}k=0;l=k;i=f;return l|0}}while(0);k=1;l=k;i=f;return l|0}function Xi(a){a=+a;var b=0,d=0,e=0.0,f=0,g=0,h=0.0;b=i;i=i+8|0;d=b|0;e=a;if(e>0.0){f=1}else{Ji(7752,17040,59);f=1}if(+Pa(+e,d|0)<=.75){g=(c[d>>2]|0)-1|0;h=+Ft(1.0,g);i=b;return+h}else{g=c[d>>2]|0;h=+Ft(1.0,g);i=b;return+h}return 0.0}function Yi(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;k=k|0;var l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,V=0,W=0,X=0;l=i;m=b;b=d;d=e;e=f;n=g;f=j;j=k;k=yi(m+1|0,4)|0;o=yi(m+1|0,8)|0;p=yi(b+1|0,4)|0;q=yi(b+1|0,8)|0;r=yi(m+1|0,4)|0;s=r;t=r;r=yi(b+1|0,4)|0;u=yi(b+1|0,4)|0;v=yi(b+1|0,4)|0;w=yi(b+1|0,8)|0;x=yi(b+1|0,1)|0;y=0;while(1){if((y|0)>(m|0)){break}c[s+(y<<2)>>2]=0;y=y+1|0}z=1;while(1){if((z|0)>(b|0)){break}y=Sc[d&63](e,-z|0,k,o)|0;if(0<=(y|0)){if((y|0)<=(m|0)){A=1}else{B=9}}else{B=9}if((B|0)==9){B=0;Ji(7728,17e3,136);A=1}c[v+(z<<2)>>2]=c[s+(y<<2)>>2];c[s+(y<<2)>>2]=z;h[w+(z<<3)>>3]=0.0;C=1;while(1){if((C|0)>(y|0)){break}if(+h[w+(z<<3)>>3]<+U(+(+h[o+(C<<3)>>3]))){h[w+(z<<3)>>3]=+U(+(+h[o+(C<<3)>>3]))}C=C+1|0}z=z+1|0}A=0;y=0;while(1){if((y|0)>(m|0)){break}z=c[s+(y<<2)>>2]|0;while(1){if((z|0)==0){break}D=c[v+(z<<2)>>2]|0;c[u+(z<<2)>>2]=0;c[v+(z<<2)>>2]=A;if((A|0)!=0){c[u+(A<<2)>>2]=z}A=z;z=D}y=y+1|0}z=1;while(1){if((z|0)>(b|0)){break}a[x+z|0]=1;z=z+1|0}D=0;E=1;while(1){if((E|0)>(m|0)){break}F=Sc[d&63](e,E,p,q)|0;c[t+(E<<2)>>2]=F;y=F;if(0<=(y|0)){if((y|0)<=(b|0)){G=1}else{B=36}}else{B=36}if((B|0)==36){B=0;Ji(12856,17e3,194);G=1}if((y|0)==1){z=c[p+4>>2]|0;if(1<=(z|0)){if((z|0)<=(b|0)){H=1}else{B=40}}else{B=40}if((B|0)==40){B=0;Ji(9440,17e3,198);H=1}if((a[x+z|0]|0)!=2){a[x+z|0]=2;F=D+1|0;D=F;c[r+(F<<2)>>2]=z}}E=E+1|0}H=0;while(1){if((A|0)==0){break}do{if((D|0)==0){z=A;y=Sc[d&63](e,-z|0,k,o)|0;if(0<=(y|0)){if((y|0)<=(m|0)){I=1}else{B=51}}else{B=51}if((B|0)==51){B=0;Ji(7728,17e3,219);I=1}}else{G=D;D=G-1|0;z=c[r+(G<<2)>>2]|0;if((a[x+z|0]|0)==2){J=1}else{Ji(6728,17e3,224);J=1}y=Sc[d&63](e,-z|0,k,o)|0;if(0<=(y|0)){if((y|0)<=(m|0)){K=1}else{B=57}}else{B=57}if((B|0)==57){B=0;Ji(7728,17e3,228);K=1}L=0;C=1;while(1){if((C|0)>(y|0)){break}E=c[k+(C<<2)>>2]|0;if(1<=(E|0)){if((E|0)<=(m|0)){M=1}else{B=62}}else{B=62}if((B|0)==62){B=0;Ji(5488,17e3,232);M=1}if((c[t+(E<<2)>>2]|0)==1){if((L|0)==0){B=66}else{g=+U(+(+h[o+(L<<3)>>3]));if(g<+U(+(+h[o+(C<<3)>>3]))){B=66}}if((B|0)==66){B=0;L=C}}C=C+1|0}if((L|0)>0){N=1}else{Ji(4384,17e3,239);N=1}g=+U(+(+h[o+(L<<3)>>3]));if(g<n*+h[w+(z<<3)>>3]){break}else{H=H+1|0;c[f+(H<<2)>>2]=c[k+(L<<2)>>2];c[j+(H<<2)>>2]=z;break}}}while(0);if((a[x+z|0]|0)!=0){O=1}else{Ji(3520,17e3,252);O=1}a[x+z|0]=0;if((c[u+(z<<2)>>2]|0)==0){A=c[v+(z<<2)>>2]|0}else{c[v+(c[u+(z<<2)>>2]<<2)>>2]=c[v+(z<<2)>>2]}if((c[v+(z<<2)>>2]|0)!=0){c[u+(c[v+(z<<2)>>2]<<2)>>2]=c[u+(z<<2)>>2]}C=1;while(1){if((C|0)>(y|0)){break}E=c[k+(C<<2)>>2]|0;if(1<=(E|0)){if((E|0)<=(m|0)){P=1}else{B=87}}else{B=87}if((B|0)==87){B=0;Ji(5488,17e3,265);P=1}if((c[t+(E<<2)>>2]|0)>0){Q=1}else{Ji(2656,17e3,266);Q=1}G=t+(E<<2)|0;c[G>>2]=(c[G>>2]|0)-1;if((c[t+(E<<2)>>2]|0)==1){G=Sc[d&63](e,E,p,q)|0;if(0<=(G|0)){if((G|0)<=(b|0)){R=1}else{B=93}}else{B=93}if((B|0)==93){B=0;Ji(1904,17e3,273);R=1}F=0;L=1;while(1){if((L|0)>(G|0)){break}S=c[p+(L<<2)>>2]|0;if(1<=(S|0)){if((S|0)<=(b|0)){T=1}else{B=98}}else{B=98}if((B|0)==98){B=0;Ji(21280,17e3,277);T=1}if((a[x+S|0]|0)!=0){if((F|0)==0){V=1}else{Ji(20040,17e3,279);V=1}F=L}L=L+1|0}if((F|0)>0){W=1}else{Ji(19016,17e3,283);W=1}S=c[p+(F<<2)>>2]|0;if((a[x+S|0]|0)!=2){a[x+S|0]=2;G=D+1|0;D=G;c[r+(G<<2)>>2]=S}}C=C+1|0}}E=1;while(1){if((E|0)>(m|0)){break}if((c[t+(E<<2)>>2]|0)==0){X=1}else{Ji(17680,17e3,296);X=1}E=E+1|0}Bi(k);Bi(o);Bi(p);Bi(q);Bi(s);Bi(r);Bi(u);Bi(v);Bi(w);Bi(x);i=l;return H|0}function Zi(a){a=a|0;var b=0,d=0;b=i;d=a;if((d|0)==0){i=b;return}if((c[d+36>>2]|0)!=(d+52|0)){Fc[c[d+3684>>2]&511](c[d+36>>2]|0)}if((c[d+40>>2]|0)!=(d+180|0)){Fc[c[d+3684>>2]&511](c[d+40>>2]|0)}Fc[c[d+3684>>2]&511](d);i=b;return}function _i(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;e=b;if(0==(e|0)){f=0;g=f;i=d;return g|0}a[e+8|0]=0;c[e+28>>2]=-1;if(0==(c[e+40>>2]|0)){if((c[e+24>>2]|0)>0){c[e+32>>2]=c[e+24>>2];do{if((c[e+24>>2]|0)<=128){c[e+36>>2]=e+52}else{c[e+36>>2]=Kc[c[e+3680>>2]&255](c[e+32>>2]|0)|0;if((c[e+36>>2]|0)!=0){break}f=0;g=f;i=d;return g|0}}while(0)}else{c[e+32>>2]=128;c[e+24>>2]=-1;c[e+36>>2]=e+52}c[e+40>>2]=e+180;c[e+44>>2]=3500}$i(e,2)|0;c[e+48>>2]=0;a[c[e+40>>2]|0]=0;f=1;g=f;i=d;return g|0}function $i(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=b;b=d;if((c[f+28>>2]|0)<=(c[f+32>>2]|0)){}else{fc(17576,17608,608,21936);return 0}do{if((c[f+24>>2]|0)<0){if((c[f+28>>2]|0)==(c[f+32>>2]|0)){d=c[f+32>>2]|0;g=c[f+32>>2]<<1;h=Kc[c[f+3680>>2]&255](g)|0;if((h|0)==0){a[f+15|0]=10;j=0;k=j;i=e;return k|0}c[f+32>>2]=g;Ku(h|0,c[f+36>>2]|0,d)|0;if((c[f+36>>2]|0)!=(f+52|0)){Fc[c[f+3684>>2]&511](c[f+36>>2]|0)}c[f+36>>2]=h}}else{if((c[f+28>>2]|0)!=(c[f+24>>2]|0)){break}a[f+15|0]=6;j=0;k=j;i=e;return k|0}}while(0);h=f+28|0;d=(c[h>>2]|0)+1|0;c[h>>2]=d;a[(c[f+36>>2]|0)+d|0]=b;j=1;k=j;i=e;return k|0}function aj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d|0;f=b;b=0;if(0==(f|0)){bj(e);f=e}if(0==(c[f+20>>2]|0)){g=1}else{g=0==(c[f+24>>2]|0)}b=g&1;if((b|0)!=0){h=66}else{h=c[f+20>>2]|0}g=h;h=Kc[g&255](3688)|0;if(0==(h|0)){j=0;k=j;i=d;return k|0}Nu(h|0,0,3688)|0;c[h+3680>>2]=g;if((b|0)!=0){l=122}else{l=c[f+24>>2]|0}c[h+3684>>2]=l;c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];a[h+13|0]=(c[f+12>>2]|0)!=0;a[h+14|0]=(c[f+16>>2]|0)!=0;a[h+16|0]=a[c[(Vb()|0)>>2]|0]|0;if((c[f+8>>2]|0)==0){m=1}else{m=c[f+8>>2]|0}c[h+24>>2]=m;if((_i(h)|0)!=0){j=h;k=j;i=d;return k|0}else{Fc[c[h+3684>>2]&511](h);j=0;k=j;i=d;return k|0}return 0}function bj(a){a=a|0;var b=0,d=0;b=i;d=a;if((d|0)==0){i=b;return}Nu(d|0,0,28)|0;c[d+8>>2]=127;c[d+20>>2]=66;c[d+24>>2]=122;i=b;return}function cj(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;g=f|0;h=d;d=e;c[h+20>>2]=d;if((d|0)<0){a[h+15|0]=1;j=0;k=j;i=f;return k|0}do{if((d|0)>=128){l=30}else{l=a[1568+d|0]|0;if(!((l|0)<=-1)){break}dj(h);j=0;k=j;i=f;return k|0}}while(0);if((ej(h,d,l)|0)==0){j=0;k=j;i=f;return k|0}d=a[16+(a[h+8|0]<<5)+l|0]|0;if((d|0)>=0){a[h+8|0]=d}else{a:do{switch(d|0){case-14:{if((a[h+10|0]|0)==0){}else{fc(4528,17608,1143,22664);return 0}a[h+10|0]=7;a[h+8|0]=27;break};case-17:{c[h+48>>2]=0;a[c[h+40>>2]|0]=0;if((a[h+10|0]|0)==0){}else{fc(4528,17608,1136,22664);return 0}a[h+10|0]=10;a[h+8|0]=7;break};case-4:{if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1270,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;l=a[(c[h+36>>2]|0)+(c[h+28>>2]|0)|0]|0;do{if((l|0)==3){if((a[h+10|0]|0)==10){}else{fc(2056,17608,1273,22664);return 0}a[h+10|0]=0;a[h+8|0]=4;do{if((c[h>>2]|0)!=0){c[g>>2]=c[h+40>>2];c[g+4>>2]=c[h+48>>2];if((Ic[c[h>>2]&127](c[h+4>>2]|0,11,g)|0)!=0){break}j=0;k=j;i=f;return k|0}}while(0);c[h+48>>2]=0;a[c[h+40>>2]|0]=0}else if((l|0)==1|(l|0)==4){if((a[h+10|0]|0)==10){}else{fc(2056,17608,1289,22664);return 0}if((gj(h)|0)!=0){a[h+10|0]=0;a[h+8|0]=1;break}j=0;k=j;i=f;return k|0}else{j=0;k=j;i=f;return k|0}}while(0);break};case-9:{c[h+48>>2]=0;a[c[h+40>>2]|0]=0;do{if((c[h>>2]|0)!=0){if((Ic[c[h>>2]&127](c[h+4>>2]|0,4,0)|0)!=0){break}j=0;k=j;i=f;return k|0}}while(0);if((hj(h,3)|0)!=0){a[h+8|0]=1;break a}j=0;k=j;i=f;return k|0};case-12:{if((a[h+10|0]|0)==0){}else{fc(4528,17608,1149,22664);return 0}a[h+10|0]=9;a[h+8|0]=23;break};case-16:{if((a[h+10|0]|0)!=9){}else{fc(9224,17608,1121,22664);return 0}if((a[h+10|0]|0)!=8){}else{fc(13168,17608,1121,22664);return 0}if((a[h+10|0]|0)!=7){}else{fc(9864,17608,1121,22664);return 0}if((a[h+10|0]|0)!=10){}else{fc(6952,17608,1121,22664);return 0}if((a[h+14|0]|0)==0){if((a[(c[h+40>>2]|0)+((c[h+48>>2]|0)-1)|0]|0)==46){}else{fc(5672,17608,1127,22664);return 0}a[(c[h+40>>2]|0)+((c[h+48>>2]|0)-1)|0]=a[h+16|0]|0}a[h+10|0]=6;a[h+8|0]=33;break};case-15:{if((a[h+10|0]|0)!=9){}else{fc(9224,17608,1114,22664);return 0}if((a[h+10|0]|0)!=8){}else{fc(13168,17608,1114,22664);return 0}if((a[h+10|0]|0)!=7){}else{fc(9864,17608,1114,22664);return 0}if((a[h+10|0]|0)!=10){}else{fc(6952,17608,1114,22664);return 0}a[h+10|0]=6;a[h+8|0]=17;break};case-22:{if((fj(h)|0)==0){a[h+15|0]=4;j=0;k=j;i=f;return k|0}if((b[h+18>>1]|0)!=0){a[h+8|0]=34}else{a[h+8|0]=7}break};case-6:{if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1246,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;do{if((c[h>>2]|0)!=0){if((Ic[c[h>>2]&127](c[h+4>>2]|0,3,0)|0)!=0){break}j=0;k=j;i=f;return k|0}}while(0);if(($i(h,3)|0)==0){j=0;k=j;i=f;return k|0}if((a[h+10|0]|0)==0){}else{fc(4528,17608,1253,22664);return 0}a[h+8|0]=2;break};case-13:{if((a[h+10|0]|0)==0){}else{fc(4528,17608,1155,22664);return 0}a[h+10|0]=8;a[h+8|0]=20;break};case-11:{a[h+12|0]=0;if((c[h+48>>2]|0)==0){}else{fc(3712,17608,1163,22664);return 0}if((a[h+10|0]|0)==0){}else{fc(4528,17608,1164,22664);return 0}a[h+8|0]=a[h+9|0]|0;break};case-2:{if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1332,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;do{if((hj(h,3)|0)!=0){if(($i(h,4)|0)==0){break}if((a[h+10|0]|0)==0){}else{fc(4528,17608,1336,22664);return 0}a[h+8|0]=5;break a}}while(0);j=0;k=j;i=f;return k|0};case-10:{if((a[h+13|0]|0)==0){j=0;k=j;i=f;return k|0}if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1173,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;if((gj(h)|0)==0){j=0;k=j;i=f;return k|0}if((c[h+48>>2]|0)==0){}else{fc(3712,17608,1177,22664);return 0}if((a[h+10|0]|0)!=10){}else{fc(6952,17608,1178,22664);return 0}l=a[(c[h+36>>2]|0)+(c[h+28>>2]|0)|0]|0;if((l|0)==1|(l|0)==4){l=a[h+8|0]|0;if((l|0)==5|(l|0)==6){a[h+9|0]=a[h+8|0]|0}else{a[h+9|0]=1}}else{a[h+9|0]=a[h+8|0]|0}a[h+10|0]=0;a[h+8|0]=30;a[h+12|0]=1;break};case-7:{if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1229,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;if((gj(h)|0)==0){j=0;k=j;i=f;return k|0}do{if((c[h>>2]|0)!=0){if((Ic[c[h>>2]&127](c[h+4>>2]|0,2,0)|0)!=0){break}j=0;k=j;i=f;return k|0}}while(0);if((hj(h,1)|0)!=0){a[h+10|0]=0;a[h+8|0]=1;break a}a[h+15|0]=7;j=0;k=j;i=f;return k|0};case-18:{a[h+10|0]=5;a[h+8|0]=13;break};case-19:{a[h+10|0]=5;a[h+8|0]=14;break};case-20:{a[h+10|0]=5;a[h+8|0]=15;break};case-21:{a[h+11|0]=1;a[h+8|0]=8;break};case-3:{if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1302,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;if((gj(h)|0)==0){j=0;k=j;i=f;return k|0}l=a[(c[h+36>>2]|0)+(c[h+28>>2]|0)|0]|0;b:do{if((l|0)==1){if((a[h+10|0]|0)!=10){}else{fc(6952,17608,1319,22664);return 0}a[h+10|0]=0;a[h+8|0]=5}else if((l|0)==4){do{if((hj(h,4)|0)!=0){if(($i(h,3)|0)==0){break}if((a[h+10|0]|0)!=10){}else{fc(6952,17608,1314,22664);return 0}a[h+10|0]=0;a[h+8|0]=3;break b}}while(0);j=0;k=j;i=f;return k|0}else{j=0;k=j;i=f;return k|0}}while(0);break};case-8:{if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1213,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;if((gj(h)|0)==0){j=0;k=j;i=f;return k|0}do{if((c[h>>2]|0)!=0){if((Ic[c[h>>2]&127](c[h+4>>2]|0,4,0)|0)!=0){break}j=0;k=j;i=f;return k|0}}while(0);if((hj(h,4)|0)!=0){a[h+10|0]=0;a[h+8|0]=1;break a}a[h+15|0]=7;j=0;k=j;i=f;return k|0};case-5:{if((c[h+48>>2]|0)>>>0>=1>>>0){}else{fc(2880,17608,1258,22664);return 0}l=h+48|0;c[l>>2]=(c[l>>2]|0)-1;a[(c[h+40>>2]|0)+(c[h+48>>2]|0)|0]=0;do{if((c[h>>2]|0)!=0){if((Ic[c[h>>2]&127](c[h+4>>2]|0,1,0)|0)!=0){break}j=0;k=j;i=f;return k|0}}while(0);if(($i(h,1)|0)==0){j=0;k=j;i=f;return k|0}if((a[h+10|0]|0)==0){}else{fc(4528,17608,1265,22664);return 0}a[h+8|0]=6;break};default:{dj(h);j=0;k=j;i=f;return k|0}}}while(0)}j=1;k=j;i=f;return k|0}function dj(b){b=b|0;var d=0;d=b;switch(a[d+8|0]|0){case 3:{a[d+15|0]=8;break};case 0:{b=c[d+20>>2]|0;if((b|0)==123|(b|0)==125|(b|0)==91|(b|0)==93){a[d+15|0]=7}else{a[d+15|0]=1}break};case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:{a[d+15|0]=2;break};case 4:{a[d+15|0]=9;break};case 13:case 14:case 15:case 16:case 17:case 18:case 19:{a[d+15|0]=5;break};case 9:case 10:case 11:case 12:case 34:case 35:{a[d+15|0]=4;break};case 6:{a[d+15|0]=7;break};case 2:{a[d+15|0]=8;break};default:{a[d+15|0]=1}}i=i;return}function ej(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=b;b=d;d=e;if((Qk(g,1)|0)==0){if(10==(a[g+15|0]|0)){}else{fc(18312,17608,1002,22632);return 0}h=0;j=h;i=f;return j|0}do{if((a[g+11|0]|0)!=0){if((Rk(g,b)|0)!=0){break}a[g+15|0]=3;h=0;j=h;i=f;return j|0}else{if((a[g+12|0]|0)==0){if(((a[g+10|0]|0)!=0|(((d|0)==0|(d|0)==1|0)!=0^1)&1|0)!=0){if(((c[g+48>>2]|0)+2|0)>>>0<=(c[g+44>>2]|0)>>>0){}else{fc(18144,17608,1013,22632);return 0}e=g+48|0;k=c[e>>2]|0;c[e>>2]=k+1;a[(c[g+40>>2]|0)+k|0]=b;a[(c[g+40>>2]|0)+(c[g+48>>2]|0)|0]=0}}}}while(0);h=1;j=h;i=f;return j|0}function fj(e){e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=e;e=0;if((c[g+48>>2]|0)>>>0>=6>>>0){}else{fc(18664,17608,890,22056);return 0}h=(c[g+40>>2]|0)+((c[g+48>>2]|0)-4)|0;j=12;while(1){if((j|0)<0){break}k=a[h]|0;if(k>>>0>=97>>>0){k=k-87|0}else{if(k>>>0>=65>>>0){k=k-55|0}else{k=k&-49}}if(k>>>0<16>>>0){}else{fc(18536,17608,905,22056);return 0}e=e|k<<j;j=j-4|0;h=h+1|0}h=g+48|0;c[h>>2]=(c[h>>2]|0)-6;a[(c[g+40>>2]|0)+(c[g+48>>2]|0)|0]=0;do{if((e|0)!=65535){if((e|0)==65534){break}do{if((b[g+18>>1]|0)!=0){if((e&64512|0)==56320){e=((b[g+18>>1]&1023)<<10)+(e&1023)+65536|0;l=3;b[g+18>>1]=0;break}else{m=0;n=m;i=f;return n|0}}else{if(e>>>0<128>>>0){l=0}else{if(e>>>0<2048>>>0){l=1}else{if((e&64512|0)==55296){b[g+18>>1]=e;m=1;n=m;i=f;return n|0}if((e&64512|0)==56320){m=0;n=m;i=f;return n|0}l=2}}}}while(0);h=(e>>>((l*6|0)>>>0)|d[8+l|0])&255;k=g+48|0;o=c[k>>2]|0;c[k>>2]=o+1;a[(c[g+40>>2]|0)+o|0]=h;j=(l*6|0)-6|0;while(1){if((j|0)<0){break}h=g+48|0;o=c[h>>2]|0;c[h>>2]=o+1;a[(c[g+40>>2]|0)+o|0]=e>>>(j>>>0)&63|128;j=j-6|0}a[(c[g+40>>2]|0)+(c[g+48>>2]|0)|0]=0;m=1;n=m;i=f;return n|0}}while(0);m=0;n=m;i=f;return n|0}function gj(b){b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;if((c[f>>2]|0)!=0){b=0;do{if((a[f+10|0]|0)!=0){do{if((a[f+10|0]|0)==7){g=1}else{if((a[f+10|0]|0)==9){g=1;break}if((a[f+10|0]|0)==8){g=1;break}if((a[f+10|0]|0)==6){g=1;break}if((a[f+10|0]|0)==5){g=1;break}if((a[f+10|0]|0)==10){g=1;break}fc(18704,17608,843,21944);return 0}}while(0);j=a[f+10|0]|0;if((j|0)==6){b=e;if((a[f+14|0]|0)!=0){c[e>>2]=c[f+40>>2];c[e+4>>2]=c[f+48>>2]}else{h[e>>3]=+Hu(c[f+40>>2]|0,0)}}else if((j|0)==10){b=e;c[e>>2]=c[f+40>>2];c[e+4>>2]=c[f+48>>2]}else if((j|0)==5){b=e;ec(c[f+40>>2]|0,1704,(j=i,i=i+8|0,c[j>>2]=e,j)|0)|0;i=j}if((Ic[c[f>>2]&127](c[f+4>>2]|0,a[f+10|0]|0,b)|0)!=0){break}k=0;l=k;i=d;return l|0}}while(0)}c[f+48>>2]=0;a[c[f+40>>2]|0]=0;k=1;l=k;i=d;return l|0}function hj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;do{if((c[f+28>>2]|0)>=0){if((a[(c[f+36>>2]|0)+(c[f+28>>2]|0)|0]|0)!=(d|0)){break}b=f+28|0;c[b>>2]=(c[b>>2]|0)-1;g=1;h=g;i=e;return h|0}}while(0);g=0;h=g;i=e;return h|0}function ij(b){b=b|0;var c=0,d=0,e=0,f=0,g=0;c=i;d=b;if((a[d+8|0]|0)==1){e=3}else{if((a[d+8|0]|0)==0){e=3}}do{if((e|0)==3){if((hj(d,2)|0)==0){break}f=1;g=f;i=c;return g|0}}while(0);a[d+15|0]=7;f=0;g=f;i=c;return g|0}function jj(b){b=b|0;i=i;return a[b+15|0]|0}function kj(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;do{if(0==(d|0)){e=21448}else{if((c[362]|0)==(d|0)){e=21448;break}if((c[363]|0)==(d|0)){e=20184;break}if((c[364]|0)==(d|0)){e=19112;break}if((c[365]|0)==(d|0)){e=17824;break}if((c[366]|0)==(d|0)){e=16656;break}if((c[367]|0)==(d|0)){e=16256;break}if((c[368]|0)==(d|0)){e=15896;break}if((c[369]|0)==(d|0)){e=15552;break}if((c[370]|0)==(d|0)){e=15240;break}if((c[371]|0)==(d|0)){e=14968;break}if((c[372]|0)==(d|0)){e=14720;break}if((c[373]|0)==(d|0)){e=14176;break}if((c[374]|0)==(d|0)){e=13664;break}if((c[375]|0)==(d|0)){e=13192;break}if((c[376]|0)==(d|0)){e=12648;break}if((c[377]|0)==(d|0)){e=12440;break}if((c[378]|0)==(d|0)){e=12168;break}if((c[379]|0)==(d|0)){e=11928;break}if((c[380]|0)==(d|0)){e=11712;break}if((c[381]|0)==(d|0)){e=11456;break}else{e=14720;break}}}while(0);i=b;return e|0}function lj(a){a=a|0;var b=0,d=0;b=i;d=a;if(0!=(d|0)){}else{fc(18888,17608,1845,22272)}if((vk(d)|0)<<24>>24!=0){i=b;return}else{a=d+8|0;c[a>>2]=(c[a>>2]|0)+1;i=b;return}}function mj(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a;do{if((d|0)!=0){if((d|0)==30724){e=30888;break}if(0>>>0<(c[d>>2]|0)>>>0){if(1){}else{f=7}}else{f=7}if((f|0)==7){fc(10296,17608,1949,22224);return 0}e=d+4|0}else{e=0}}while(0);i=b;return e|0}function nj(a){a=a|0;var b=0;b=i;oj(a)|0;i=b;return}function oj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;do{if(0!=(d|0)){if(((vk(d)|0)<<24>>24|0)!=0){break}do{if(0!=(c[d+8>>2]|0)){a=d+8|0;e=(c[a>>2]|0)-1|0;c[a>>2]=e;if(0==(e|0)){break}f=c[d+8>>2]|0;g=f;i=b;return g|0}}while(0);Pk(d);rk(d,18904);f=0;g=f;i=b;return g|0}}while(0);f=0;g=f;i=b;return g|0}function pj(a){a=a|0;var b=0,d=0;b=a;if((b|0)!=0){d=(c[b>>2]|0)==1344}else{d=0}i=i;return(d?1:0)&255|0}function qj(a){a=a|0;var b=0,d=0;b=a;if((b|0)!=0){d=(c[b>>2]|0)==1352}else{d=0}i=i;return(d?1:0)&255|0}function rj(a){a=a|0;var b=0,d=0;b=a;if((b|0)!=0){d=(c[b>>2]|0)==1320}else{d=0}i=i;return(d?1:0)&255|0}function sj(a){a=a|0;var b=0,d=0;b=a;if((b|0)!=0){d=(c[b>>2]|0)==1368}else{d=0}i=i;return(d?1:0)&255|0}function tj(a){a=a|0;var b=0,d=0;b=a;if((b|0)!=0){d=(c[b>>2]|0)==1328}else{d=0}i=i;return(d?1:0)&255|0}function uj(){return Kk()|0}function vj(){return wj(uj()|0)|0}function wj(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;Ij(a,d)|0;i=b;return c[d>>2]|0}function xj(){return Jk()|0}function yj(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;Jj(a,d)|0;i=b;return c[d>>2]|0}function zj(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;Hj(a,d)|0;i=b;return c[d>>2]|0}function Aj(f,g,h,j,k){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;l=i;i=i+120|0;m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+48|0;r=l+88|0;s=f;f=g;g=h;h=j;j=k;Nu(m|0,0,2)|0;if((h|0)!=0){k=n;t=h;b[k>>1]=b[t>>1]|0;b[k+2>>1]=b[t+2>>1]|0}else{t=n;b[t>>1]=b[764]|0;b[t+2>>1]=b[765]|0}t=0;c[o>>2]=1;if((j|0)!=0){k=p;h=j;c[k>>2]=c[h>>2];c[k+4>>2]=c[h+4>>2];c[k+8>>2]=c[h+8>>2];c[k+12>>2]=c[h+12>>2];c[k+16>>2]=c[h+16>>2];c[k+20>>2]=c[h+20>>2]}else{h=p;c[h>>2]=c[384];c[h+4>>2]=c[385];c[h+8>>2]=c[386];c[h+12>>2]=c[387];c[h+16>>2]=c[388];c[h+20>>2]=c[389]}Ku(q|0,30800,40)|0;do{if((s|0)!=0){if((f|0)==0){break}Nu(r|0,0,28)|0;bj(r);c[r+12>>2]=a[n+2|0]|0;c[r+8>>2]=e[n>>1]|0;c[r+4>>2]=q;c[r+16>>2]=0;c[r>>2]=50;c[q>>2]=aj(r)|0;if((c[q>>2]|0)==0){u=c[367]|0;v=u;i=l;return v|0}do{c[o>>2]=1;a[m|0]=0;t=Ic[f&127](g,m|0,o)|0;if(0!=(t|0)){w=14;break}if((c[o>>2]|0)==0){w=16;break}h=p+8|0;c[h>>2]=(c[h>>2]|0)+1;if(10==(d[m|0]|0)){h=p|0;c[h>>2]=(c[h>>2]|0)+1;c[p+4>>2]=0}if((cj(c[q>>2]|0,d[m|0]|0)|0)==0){w=21;break}if(10!=(d[m|0]|0)){h=p+4|0;c[h>>2]=(c[h>>2]|0)+1}}while(1);if((w|0)!=14)if((w|0)!=16)if((w|0)==21){t=kk(jj(c[q>>2]|0)|0)|0;if(0==(t|0)){t=c[q+28>>2]|0}if(0==(t|0)){t=c[369]|0}c[p+12>>2]=t}if((j|0)!=0){c[p+16>>2]=c[q+32>>2];c[p+20>>2]=c[q+36>>2];h=j;k=p;c[h>>2]=c[k>>2];c[h+4>>2]=c[k+4>>2];c[h+8>>2]=c[k+8>>2];c[h+12>>2]=c[k+12>>2];c[h+16>>2]=c[k+16>>2];c[h+20>>2]=c[k+20>>2]}if(0!=(t|0)){lk(q)|0;u=t;v=u;i=l;return v|0}if((ij(c[q>>2]|0)|0)!=0){k=c[q+4>>2]|0;c[q+4>>2]=0;lk(q)|0;if((k|0)!=0){if(1==(c[k+8>>2]|0)){if(1){}else{w=43}}else{w=43}if((w|0)==43){fc(6640,17608,3646,22368);return 0}c[k+8>>2]=0;c[s>>2]=k}else{t=c[372]|0}}else{t=kk(jj(c[q>>2]|0)|0)|0;lk(q)|0;if(0==(t|0)){t=c[q+28>>2]|0}if(0==(t|0)){t=c[369]|0}}u=t;v=u;i=l;return v|0}}while(0);u=c[363]|0;v=u;i=l;return v|0}function Bj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;f=e|0;g=e+8|0;j=b;b=d;do{if((j|0)!=0){if((c[j>>2]|0)==0){break}d=0;k=0;switch(c[c[j>>2]>>2]|0){case 6:case 7:{k=1;break};case 5:{l=mj(zj(j)|0)|0;if((l|0)!=0){m=(a[l]|0)!=0}else{m=0}k=(m?1:0)&255;break};case 0:case 1:{break};case 2:{k=(0==(c[j+4>>2]|0)?0:1)&255;break};case 3:{c[f>>2]=0;c[f+4>>2]=0;Cj(j,f)|0;k=((c[f>>2]|0)!=0|(c[f+4>>2]|0)!=0?1:0)&255;break};case 4:{h[g>>3]=0.0;Dj(j,g)|0;k=(0.0==+h[g>>3]?0:1)&255;break};default:{d=c[365]|0}}if((b|0)!=0){a[b]=k}n=d;o=n;i=e;return o|0}}while(0);n=c[363]|0;o=n;i=e;return o|0}function Cj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+24|0;f=e|0;g=e+8|0;j=e+16|0;k=b;b=d;do{if((k|0)!=0){if((c[k>>2]|0)==0){break}c[f>>2]=0;c[f+4>>2]=0;d=0;switch(c[c[k>>2]>>2]|0){case 4:{h[j>>3]=0.0;Dj(k,j)|0;l=+h[j>>3];m=(I=+l,+U(I)>=1.0?I>0.0?(ka(+T(I/4294967296.0),4294967295.0)|0)>>>0:~~+ea((I- +(~~I>>>0))/4294967296.0)>>>0:0);c[f>>2]=~~+l>>>0;c[f+4>>2]=m;break};case 0:case 1:{c[f>>2]=0;c[f+4>>2]=0;break};case 2:{a[g]=0;Bj(k,g)|0;m=a[g]|0;c[f>>2]=m<<24>>24;c[f+4>>2]=m<<24>>24<0|0?-1:0;break};case 3:{m=c[k+4>>2]|0;if((m|0)==0){if((k|0)==30672){}else{fc(9280,17608,2633,22104);return 0}}if((m|0)!=0){n=m;o=c[n+4>>2]|0;p=c[n>>2]|0}else{o=0;p=0}c[f>>2]=p;c[f+4>>2]=o;break};case 5:case 6:case 7:{q=17;break};default:{q=17}}if((q|0)==17){d=c[365]|0}do{if((d|0)==0){if((b|0)==0){break}n=c[f+4>>2]|0;m=b;c[m>>2]=c[f>>2];c[m+4>>2]=n}}while(0);r=d;s=r;i=e;return s|0}}while(0);r=c[363]|0;s=r;i=e;return s|0}function Dj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0,l=0,m=0.0,n=0,o=0;e=i;i=i+16|0;f=e|0;g=e+8|0;j=b;b=d;do{if((j|0)!=0){if((c[j>>2]|0)==0){break}k=0.0;d=0;switch(c[c[j>>2]>>2]|0){case 0:case 1:{k=0.0;break};case 2:{a[f]=0;Bj(j,f)|0;k=(a[f]|0)!=0?1.0:0.0;break};case 4:{l=c[j+4>>2]|0;if((l|0)!=0){m=+h[l>>3]}else{m=0.0}k=m;break};case 3:{c[g>>2]=0;c[g+4>>2]=0;Cj(j,g)|0;k=+((c[g>>2]|0)>>>0)+ +(c[g+4>>2]|0)*4294967296.0;break};default:{d=c[365]|0}}if((b|0)!=0){h[b>>3]=k}n=d;o=n;i=e;return o|0}}while(0);n=c[363]|0;o=n;i=e;return o|0}function Ej(b){b=b|0;var c=0,d=0;c=i;i=i+8|0;d=c|0;a[d]=0;Bj(b,d)|0;i=c;return a[d]|0}



function bv(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Dc[a&63](b|0,c|0,d|0,e|0,f|0)}function cv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(0,a|0,b|0,c|0,d|0,e|0)}function dv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(1,a|0,b|0,c|0,d|0,e|0)}function ev(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(2,a|0,b|0,c|0,d|0,e|0)}function fv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(3,a|0,b|0,c|0,d|0,e|0)}function gv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(4,a|0,b|0,c|0,d|0,e|0)}function hv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(5,a|0,b|0,c|0,d|0,e|0)}function iv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(6,a|0,b|0,c|0,d|0,e|0)}function jv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(7,a|0,b|0,c|0,d|0,e|0)}function kv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(8,a|0,b|0,c|0,d|0,e|0)}function lv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(9,a|0,b|0,c|0,d|0,e|0)}function mv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(10,a|0,b|0,c|0,d|0,e|0)}function nv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(11,a|0,b|0,c|0,d|0,e|0)}function ov(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(12,a|0,b|0,c|0,d|0,e|0)}function pv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(13,a|0,b|0,c|0,d|0,e|0)}function qv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(14,a|0,b|0,c|0,d|0,e|0)}function rv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(15,a|0,b|0,c|0,d|0,e|0)}function sv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(16,a|0,b|0,c|0,d|0,e|0)}function tv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(17,a|0,b|0,c|0,d|0,e|0)}function uv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(18,a|0,b|0,c|0,d|0,e|0)}function vv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;la(19,a|0,b|0,c|0,d|0,e|0)}function wv(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Ec[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function xv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(0,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function yv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(1,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function zv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(2,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Av(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(3,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Bv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(4,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Cv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(5,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Dv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(6,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Ev(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(7,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Fv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(8,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Gv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(9,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Hv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(10,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Iv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(11,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Jv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(12,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Kv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(13,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Lv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(14,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Mv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(15,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Nv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(16,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Ov(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(17,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Pv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(18,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Qv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;la(19,a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function Rv(a,b){a=a|0;b=b|0;Fc[a&511](b|0)}function Sv(a){a=a|0;la(0,a|0)}function Tv(a){a=a|0;la(1,a|0)}function Uv(a){a=a|0;la(2,a|0)}function Vv(a){a=a|0;la(3,a|0)}function Wv(a){a=a|0;la(4,a|0)}function Xv(a){a=a|0;la(5,a|0)}function Yv(a){a=a|0;la(6,a|0)}function Zv(a){a=a|0;la(7,a|0)}function _v(a){a=a|0;la(8,a|0)}function $v(a){a=a|0;la(9,a|0)}function aw(a){a=a|0;la(10,a|0)}function bw(a){a=a|0;la(11,a|0)}function cw(a){a=a|0;la(12,a|0)}function dw(a){a=a|0;la(13,a|0)}function ew(a){a=a|0;la(14,a|0)}function fw(a){a=a|0;la(15,a|0)}function gw(a){a=a|0;la(16,a|0)}function hw(a){a=a|0;la(17,a|0)}function iw(a){a=a|0;la(18,a|0)}function jw(a){a=a|0;la(19,a|0)}function kw(a,b,c){a=a|0;b=b|0;c=c|0;Gc[a&127](b|0,c|0)}function lw(a,b){a=a|0;b=b|0;la(0,a|0,b|0)}function mw(a,b){a=a|0;b=b|0;la(1,a|0,b|0)}function nw(a,b){a=a|0;b=b|0;la(2,a|0,b|0)}function ow(a,b){a=a|0;b=b|0;la(3,a|0,b|0)}function pw(a,b){a=a|0;b=b|0;la(4,a|0,b|0)}function qw(a,b){a=a|0;b=b|0;la(5,a|0,b|0)}function rw(a,b){a=a|0;b=b|0;la(6,a|0,b|0)}function sw(a,b){a=a|0;b=b|0;la(7,a|0,b|0)}function tw(a,b){a=a|0;b=b|0;la(8,a|0,b|0)}function uw(a,b){a=a|0;b=b|0;la(9,a|0,b|0)}function vw(a,b){a=a|0;b=b|0;la(10,a|0,b|0)}function ww(a,b){a=a|0;b=b|0;la(11,a|0,b|0)}function xw(a,b){a=a|0;b=b|0;la(12,a|0,b|0)}function yw(a,b){a=a|0;b=b|0;la(13,a|0,b|0)}function zw(a,b){a=a|0;b=b|0;la(14,a|0,b|0)}function Aw(a,b){a=a|0;b=b|0;la(15,a|0,b|0)}function Bw(a,b){a=a|0;b=b|0;la(16,a|0,b|0)}function Cw(a,b){a=a|0;b=b|0;la(17,a|0,b|0)}function Dw(a,b){a=a|0;b=b|0;la(18,a|0,b|0)}function Ew(a,b){a=a|0;b=b|0;la(19,a|0,b|0)}function Fw(a,b,c){a=a|0;b=b|0;c=c|0;return Hc[a&127](b|0,c|0)|0}function Gw(a,b){a=a|0;b=b|0;return la(0,a|0,b|0)|0}function Hw(a,b){a=a|0;b=b|0;return la(1,a|0,b|0)|0}function Iw(a,b){a=a|0;b=b|0;return la(2,a|0,b|0)|0}function Jw(a,b){a=a|0;b=b|0;return la(3,a|0,b|0)|0}function Kw(a,b){a=a|0;b=b|0;return la(4,a|0,b|0)|0}function Lw(a,b){a=a|0;b=b|0;return la(5,a|0,b|0)|0}function Mw(a,b){a=a|0;b=b|0;return la(6,a|0,b|0)|0}function Nw(a,b){a=a|0;b=b|0;return la(7,a|0,b|0)|0}function Ow(a,b){a=a|0;b=b|0;return la(8,a|0,b|0)|0}function Pw(a,b){a=a|0;b=b|0;return la(9,a|0,b|0)|0}function Qw(a,b){a=a|0;b=b|0;return la(10,a|0,b|0)|0}function Rw(a,b){a=a|0;b=b|0;return la(11,a|0,b|0)|0}function Sw(a,b){a=a|0;b=b|0;return la(12,a|0,b|0)|0}function Tw(a,b){a=a|0;b=b|0;return la(13,a|0,b|0)|0}function Uw(a,b){a=a|0;b=b|0;return la(14,a|0,b|0)|0}function Vw(a,b){a=a|0;b=b|0;return la(15,a|0,b|0)|0}function Ww(a,b){a=a|0;b=b|0;return la(16,a|0,b|0)|0}function Xw(a,b){a=a|0;b=b|0;return la(17,a|0,b|0)|0}function Yw(a,b){a=a|0;b=b|0;return la(18,a|0,b|0)|0}function Zw(a,b){a=a|0;b=b|0;return la(19,a|0,b|0)|0}function _w(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ic[a&127](b|0,c|0,d|0)|0}function $w(a,b,c){a=a|0;b=b|0;c=c|0;return la(0,a|0,b|0,c|0)|0}function ax(a,b,c){a=a|0;b=b|0;c=c|0;return la(1,a|0,b|0,c|0)|0}function bx(a,b,c){a=a|0;b=b|0;c=c|0;return la(2,a|0,b|0,c|0)|0}function cx(a,b,c){a=a|0;b=b|0;c=c|0;return la(3,a|0,b|0,c|0)|0}function dx(a,b,c){a=a|0;b=b|0;c=c|0;return la(4,a|0,b|0,c|0)|0}function ex(a,b,c){a=a|0;b=b|0;c=c|0;return la(5,a|0,b|0,c|0)|0}function fx(a,b,c){a=a|0;b=b|0;c=c|0;return la(6,a|0,b|0,c|0)|0}function gx(a,b,c){a=a|0;b=b|0;c=c|0;return la(7,a|0,b|0,c|0)|0}function hx(a,b,c){a=a|0;b=b|0;c=c|0;return la(8,a|0,b|0,c|0)|0}function ix(a,b,c){a=a|0;b=b|0;c=c|0;return la(9,a|0,b|0,c|0)|0}function jx(a,b,c){a=a|0;b=b|0;c=c|0;return la(10,a|0,b|0,c|0)|0}function kx(a,b,c){a=a|0;b=b|0;c=c|0;return la(11,a|0,b|0,c|0)|0}function lx(a,b,c){a=a|0;b=b|0;c=c|0;return la(12,a|0,b|0,c|0)|0}function mx(a,b,c){a=a|0;b=b|0;c=c|0;return la(13,a|0,b|0,c|0)|0}function nx(a,b,c){a=a|0;b=b|0;c=c|0;return la(14,a|0,b|0,c|0)|0}function ox(a,b,c){a=a|0;b=b|0;c=c|0;return la(15,a|0,b|0,c|0)|0}function px(a,b,c){a=a|0;b=b|0;c=c|0;return la(16,a|0,b|0,c|0)|0}function qx(a,b,c){a=a|0;b=b|0;c=c|0;return la(17,a|0,b|0,c|0)|0}function rx(a,b,c){a=a|0;b=b|0;c=c|0;return la(18,a|0,b|0,c|0)|0}function sx(a,b,c){a=a|0;b=b|0;c=c|0;return la(19,a|0,b|0,c|0)|0}function tx(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Jc[a&63](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function ux(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(0,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function vx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(1,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function wx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(2,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function xx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(3,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function yx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(4,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function zx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(5,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Ax(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(6,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Bx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(7,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Cx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(8,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Dx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(9,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Ex(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(10,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Fx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(11,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Gx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(12,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Hx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(13,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Ix(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(14,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Jx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(15,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Kx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(16,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Lx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(17,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Mx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(18,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Nx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;la(19,a|0,b|0,c|0,d|0,e|0,f|0,+g)}function Ox(a,b){a=a|0;b=b|0;return Kc[a&255](b|0)|0}function Px(a){a=a|0;return la(0,a|0)|0}function Qx(a){a=a|0;return la(1,a|0)|0}function Rx(a){a=a|0;return la(2,a|0)|0}function Sx(a){a=a|0;return la(3,a|0)|0}function Tx(a){a=a|0;return la(4,a|0)|0}function Ux(a){a=a|0;return la(5,a|0)|0}function Vx(a){a=a|0;return la(6,a|0)|0}function Wx(a){a=a|0;return la(7,a|0)|0}function Xx(a){a=a|0;return la(8,a|0)|0}function Yx(a){a=a|0;return la(9,a|0)|0}function Zx(a){a=a|0;return la(10,a|0)|0}function _x(a){a=a|0;return la(11,a|0)|0}function $x(a){a=a|0;return la(12,a|0)|0}function ay(a){a=a|0;return la(13,a|0)|0}function by(a){a=a|0;return la(14,a|0)|0}function cy(a){a=a|0;return la(15,a|0)|0}function dy(a){a=a|0;return la(16,a|0)|0}function ey(a){a=a|0;return la(17,a|0)|0}function fy(a){a=a|0;return la(18,a|0)|0}function gy(a){a=a|0;return la(19,a|0)|0}function hy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Lc[a&63](b|0,c|0,d|0)}function iy(a,b,c){a=a|0;b=b|0;c=c|0;la(0,a|0,b|0,c|0)}function jy(a,b,c){a=a|0;b=b|0;c=c|0;la(1,a|0,b|0,c|0)}function ky(a,b,c){a=a|0;b=b|0;c=c|0;la(2,a|0,b|0,c|0)}function ly(a,b,c){a=a|0;b=b|0;c=c|0;la(3,a|0,b|0,c|0)}function my(a,b,c){a=a|0;b=b|0;c=c|0;la(4,a|0,b|0,c|0)}function ny(a,b,c){a=a|0;b=b|0;c=c|0;la(5,a|0,b|0,c|0)}function oy(a,b,c){a=a|0;b=b|0;c=c|0;la(6,a|0,b|0,c|0)}function py(a,b,c){a=a|0;b=b|0;c=c|0;la(7,a|0,b|0,c|0)}function qy(a,b,c){a=a|0;b=b|0;c=c|0;la(8,a|0,b|0,c|0)}function ry(a,b,c){a=a|0;b=b|0;c=c|0;la(9,a|0,b|0,c|0)}function sy(a,b,c){a=a|0;b=b|0;c=c|0;la(10,a|0,b|0,c|0)}function ty(a,b,c){a=a|0;b=b|0;c=c|0;la(11,a|0,b|0,c|0)}function uy(a,b,c){a=a|0;b=b|0;c=c|0;la(12,a|0,b|0,c|0)}function vy(a,b,c){a=a|0;b=b|0;c=c|0;la(13,a|0,b|0,c|0)}function wy(a,b,c){a=a|0;b=b|0;c=c|0;la(14,a|0,b|0,c|0)}function xy(a,b,c){a=a|0;b=b|0;c=c|0;la(15,a|0,b|0,c|0)}function yy(a,b,c){a=a|0;b=b|0;c=c|0;la(16,a|0,b|0,c|0)}function zy(a,b,c){a=a|0;b=b|0;c=c|0;la(17,a|0,b|0,c|0)}function Ay(a,b,c){a=a|0;b=b|0;c=c|0;la(18,a|0,b|0,c|0)}function By(a,b,c){a=a|0;b=b|0;c=c|0;la(19,a|0,b|0,c|0)}function Cy(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Mc[a&63](b|0,c|0,d|0,e|0,f|0,+g)}function Dy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(0,a|0,b|0,c|0,d|0,e|0,+f)}function Ey(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(1,a|0,b|0,c|0,d|0,e|0,+f)}function Fy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(2,a|0,b|0,c|0,d|0,e|0,+f)}function Gy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(3,a|0,b|0,c|0,d|0,e|0,+f)}function Hy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(4,a|0,b|0,c|0,d|0,e|0,+f)}function Iy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(5,a|0,b|0,c|0,d|0,e|0,+f)}function Jy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(6,a|0,b|0,c|0,d|0,e|0,+f)}function Ky(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(7,a|0,b|0,c|0,d|0,e|0,+f)}function Ly(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(8,a|0,b|0,c|0,d|0,e|0,+f)}function My(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(9,a|0,b|0,c|0,d|0,e|0,+f)}function Ny(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(10,a|0,b|0,c|0,d|0,e|0,+f)}function Oy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(11,a|0,b|0,c|0,d|0,e|0,+f)}function Py(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(12,a|0,b|0,c|0,d|0,e|0,+f)}function Qy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(13,a|0,b|0,c|0,d|0,e|0,+f)}function Ry(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(14,a|0,b|0,c|0,d|0,e|0,+f)}function Sy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(15,a|0,b|0,c|0,d|0,e|0,+f)}function Ty(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(16,a|0,b|0,c|0,d|0,e|0,+f)}function Uy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(17,a|0,b|0,c|0,d|0,e|0,+f)}function Vy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(18,a|0,b|0,c|0,d|0,e|0,+f)}function Wy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;la(19,a|0,b|0,c|0,d|0,e|0,+f)}function Xy(a){a=a|0;Nc[a&63]()}function Yy(){la(0)}function Zy(){la(1)}function _y(){la(2)}function $y(){la(3)}function az(){la(4)}function bz(){la(5)}function cz(){la(6)}function dz(){la(7)}function ez(){la(8)}function fz(){la(9)}function gz(){la(10)}function hz(){la(11)}function iz(){la(12)}function jz(){la(13)}function kz(){la(14)}function lz(){la(15)}function mz(){la(16)}function nz(){la(17)}function oz(){la(18)}function pz(){la(19)}function qz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return Oc[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function rz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(0,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function sz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(1,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function tz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(2,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function uz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(3,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function vz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(4,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function wz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(5,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function xz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(6,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function yz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(7,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function zz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(8,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Az(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(9,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Bz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(10,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Cz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(11,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Dz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(12,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Ez(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(13,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Fz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(14,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Gz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(15,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Hz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(16,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Iz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(17,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Jz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(18,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Kz(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return la(19,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function Lz(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Pc[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Mz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(0,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Nz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(1,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Oz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(2,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Pz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(3,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Qz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(4,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Rz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(5,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Sz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(6,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Tz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(7,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Uz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(8,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Vz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(9,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Wz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(10,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Xz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(11,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Yz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(12,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Zz(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(13,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function _z(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(14,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function $z(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(15,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function aA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(16,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function bA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(17,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function cA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(18,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function dA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;la(19,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function eA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;Qc[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function fA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(0,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function gA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(1,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function hA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(2,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function iA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(3,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function jA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(4,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function kA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(5,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function lA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(6,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function mA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(7,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function nA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(8,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function oA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(9,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function pA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(10,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function qA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(11,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function rA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(12,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function sA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(13,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function tA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(14,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function uA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(15,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function vA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(16,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function wA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(17,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function xA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(18,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function yA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;la(19,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function zA(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Rc[a&127](b|0,c|0,d|0,e|0,f|0,g|0)}function AA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(0,a|0,b|0,c|0,d|0,e|0,f|0)}function BA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(1,a|0,b|0,c|0,d|0,e|0,f|0)}function CA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(2,a|0,b|0,c|0,d|0,e|0,f|0)}function DA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(3,a|0,b|0,c|0,d|0,e|0,f|0)}function EA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(4,a|0,b|0,c|0,d|0,e|0,f|0)}function FA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(5,a|0,b|0,c|0,d|0,e|0,f|0)}function GA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(6,a|0,b|0,c|0,d|0,e|0,f|0)}function HA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(7,a|0,b|0,c|0,d|0,e|0,f|0)}function IA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(8,a|0,b|0,c|0,d|0,e|0,f|0)}function JA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(9,a|0,b|0,c|0,d|0,e|0,f|0)}function KA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(10,a|0,b|0,c|0,d|0,e|0,f|0)}function LA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(11,a|0,b|0,c|0,d|0,e|0,f|0)}function MA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(12,a|0,b|0,c|0,d|0,e|0,f|0)}function NA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(13,a|0,b|0,c|0,d|0,e|0,f|0)}function OA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(14,a|0,b|0,c|0,d|0,e|0,f|0)}function PA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(15,a|0,b|0,c|0,d|0,e|0,f|0)}function QA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(16,a|0,b|0,c|0,d|0,e|0,f|0)}function RA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(17,a|0,b|0,c|0,d|0,e|0,f|0)}function SA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(18,a|0,b|0,c|0,d|0,e|0,f|0)}function TA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;la(19,a|0,b|0,c|0,d|0,e|0,f|0)}function UA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Sc[a&63](b|0,c|0,d|0,e|0)|0}function VA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(0,a|0,b|0,c|0,d|0)|0}function WA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(1,a|0,b|0,c|0,d|0)|0}function XA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(2,a|0,b|0,c|0,d|0)|0}function YA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(3,a|0,b|0,c|0,d|0)|0}function ZA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(4,a|0,b|0,c|0,d|0)|0}function _A(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(5,a|0,b|0,c|0,d|0)|0}function $A(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(6,a|0,b|0,c|0,d|0)|0}function aB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(7,a|0,b|0,c|0,d|0)|0}function bB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(8,a|0,b|0,c|0,d|0)|0}function cB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(9,a|0,b|0,c|0,d|0)|0}function dB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(10,a|0,b|0,c|0,d|0)|0}function eB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(11,a|0,b|0,c|0,d|0)|0}function fB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(12,a|0,b|0,c|0,d|0)|0}function gB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(13,a|0,b|0,c|0,d|0)|0}function hB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(14,a|0,b|0,c|0,d|0)|0}function iB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(15,a|0,b|0,c|0,d|0)|0}function jB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(16,a|0,b|0,c|0,d|0)|0}function kB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(17,a|0,b|0,c|0,d|0)|0}function lB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(18,a|0,b|0,c|0,d|0)|0}function mB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return la(19,a|0,b|0,c|0,d|0)|0}function nB(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Tc[a&127](b|0,c|0,d|0,e|0,f|0)|0}function oB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(0,a|0,b|0,c|0,d|0,e|0)|0}function pB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(1,a|0,b|0,c|0,d|0,e|0)|0}function qB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(2,a|0,b|0,c|0,d|0,e|0)|0}function rB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(3,a|0,b|0,c|0,d|0,e|0)|0}function sB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(4,a|0,b|0,c|0,d|0,e|0)|0}function tB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(5,a|0,b|0,c|0,d|0,e|0)|0}function uB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(6,a|0,b|0,c|0,d|0,e|0)|0}function vB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(7,a|0,b|0,c|0,d|0,e|0)|0}function wB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(8,a|0,b|0,c|0,d|0,e|0)|0}function xB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(9,a|0,b|0,c|0,d|0,e|0)|0}function yB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(10,a|0,b|0,c|0,d|0,e|0)|0}function zB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(11,a|0,b|0,c|0,d|0,e|0)|0}function AB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(12,a|0,b|0,c|0,d|0,e|0)|0}function BB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(13,a|0,b|0,c|0,d|0,e|0)|0}function CB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(14,a|0,b|0,c|0,d|0,e|0)|0}function DB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(15,a|0,b|0,c|0,d|0,e|0)|0}function EB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(16,a|0,b|0,c|0,d|0,e|0)|0}function FB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(17,a|0,b|0,c|0,d|0,e|0)|0}function GB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(18,a|0,b|0,c|0,d|0,e|0)|0}function HB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return la(19,a|0,b|0,c|0,d|0,e|0)|0}function IB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Uc[a&63](b|0,c|0,d|0,e|0)}function JB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(0,a|0,b|0,c|0,d|0)}function KB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(1,a|0,b|0,c|0,d|0)}function LB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(2,a|0,b|0,c|0,d|0)}function MB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(3,a|0,b|0,c|0,d|0)}function NB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(4,a|0,b|0,c|0,d|0)}function OB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(5,a|0,b|0,c|0,d|0)}function PB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(6,a|0,b|0,c|0,d|0)}function QB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(7,a|0,b|0,c|0,d|0)}function RB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(8,a|0,b|0,c|0,d|0)}function SB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(9,a|0,b|0,c|0,d|0)}function TB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(10,a|0,b|0,c|0,d|0)}function UB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(11,a|0,b|0,c|0,d|0)}function VB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(12,a|0,b|0,c|0,d|0)}function WB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(13,a|0,b|0,c|0,d|0)}function XB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(14,a|0,b|0,c|0,d|0)}function YB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(15,a|0,b|0,c|0,d|0)}function ZB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(16,a|0,b|0,c|0,d|0)}function _B(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(17,a|0,b|0,c|0,d|0)}function $B(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(18,a|0,b|0,c|0,d|0)}function aC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;la(19,a|0,b|0,c|0,d|0)}function bC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(0)}function cC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ga(1)}function dC(a){a=a|0;ga(2)}function eC(a,b){a=a|0;b=b|0;ga(3)}function fC(a,b){a=a|0;b=b|0;ga(4);return 0}function gC(a,b,c){a=a|0;b=b|0;c=c|0;ga(5);return 0}function hC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ga(6)}function iC(a){a=a|0;ga(7);return 0}function jC(a,b,c){a=a|0;b=b|0;c=c|0;ga(8)}function kC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ga(9)}function lC(){ga(10)}function mC(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(11);return 0}function nC(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ga(12)}function oC(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(13)}function pC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ga(14)}function qC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(15);return 0}function rC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(16);return 0}function sC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(17)}




// EMSCRIPTEN_END_FUNCS
var Dc=[bC,bC,cv,bC,dv,bC,ev,bC,fv,bC,gv,bC,hv,bC,iv,bC,jv,bC,kv,bC,lv,bC,mv,bC,nv,bC,ov,bC,pv,bC,qv,bC,rv,bC,sv,bC,tv,bC,uv,bC,vv,bC,hu,bC,iu,bC,gu,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC,bC];var Ec=[cC,cC,xv,cC,yv,cC,zv,cC,Av,cC,Bv,cC,Cv,cC,Dv,cC,Ev,cC,Fv,cC,Gv,cC,Hv,cC,Iv,cC,Jv,cC,Kv,cC,Lv,cC,Mv,cC,Nv,cC,Ov,cC,Pv,cC,Qv,cC,op,cC,yp,cC,Ap,cC,gr,cC,bp,cC,$o,cC,ar,cC,kp,cC,np,cC,Bp,cC,Po,cC,yo,cC,mp,cC,Un,cC,mo,cC,zp,cC,No,cC,qo,cC,io,cC,ko,cC,_n,cC,oo,cC,go,cC,eo,cC,wo,cC,uo,cC,so,cC,Cp,cC,On,cC,lp,cC,Sn,cC,Kn,cC,Mn,cC,Qn,cC,In,cC,Yn,cC,Wn,cC,Gn,cC,cC,cC,cC,cC,cC,cC,cC,cC,cC,cC];var Fc=[dC,dC,Sv,dC,Tv,dC,Uv,dC,Vv,dC,Wv,dC,Xv,dC,Yv,dC,Zv,dC,_v,dC,$v,dC,aw,dC,bw,dC,cw,dC,dw,dC,ew,dC,fw,dC,gw,dC,hw,dC,iw,dC,jw,dC,mr,dC,En,dC,Wo,dC,Il,dC,sm,dC,Er,dC,ol,dC,bl,dC,Go,dC,Al,dC,qs,dC,Gl,dC,bo,dC,un,dC,qn,dC,wu,dC,Bl,dC,Cr,dC,Sr,dC,wp,dC,co,dC,Tt,dC,hn,dC,ir,dC,Dr,dC,Vm,dC,Fn,dC,Nk,dC,jq,dC,wr,dC,rr,dC,Ps,dC,Yt,dC,Os,dC,on,dC,Gl,dC,An,dC,Qp,dC,Rs,dC,Fr,dC,nu,dC,br,dC,Ns,dC,Zm,dC,al,dC,zn,dC,Lp,dC,Bl,dC,xt,dC,Ho,dC,Bs,dC,kq,dC,Um,dC,en,dC,Ip,dC,vp,dC,rn,dC,_p,dC,vu,dC,rm,dC,At,dC,Bt,dC,jn,dC,Gm,dC,$t,dC,as,dC,Vt,dC,Wm,dC,pn,dC,Fq,dC,Uk,dC,uq,dC,kn,dC,Ar,dC,Dt,dC,Zt,dC,hl,dC,vr,dC,Jp,dC,Qq,dC,Ut,dC,Iq,dC,cr,dC,Ct,dC,Pp,dC,Vo,dC,tn,dC,il,dC,vn,dC,$m,dC,Ql,dC,ek,dC,Lk,dC,is,dC,Xq,dC,Pq,dC,Qs,dC,gm,dC,Ok,dC,Vt,dC,au,dC,dn,dC,Rl,dC,Tm,dC,gn,dC,hr,dC,om,dC,cn,dC,pl,dC,yr,dC,sn,dC,vq,dC,hp,dC,$p,dC,Wk,dC,_m,dC,Fm,dC,bn,dC,Ms,dC,zt,dC,ip,dC,_t,dC,nr,dC,Vk,dC,Xt,dC,Mp,dC,Yq,dC,Gq,dC,Xl,dC,Tr,dC,Fl,dC,Ym,dC,Et,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC,dC];var Gc=[eC,eC,lw,eC,mw,eC,nw,eC,ow,eC,pw,eC,qw,eC,rw,eC,sw,eC,tw,eC,uw,eC,vw,eC,ww,eC,xw,eC,yw,eC,zw,eC,Aw,eC,Bw,eC,Cw,eC,Dw,eC,Ew,eC,_s,eC,Aq,eC,cq,eC,Xs,eC,tq,eC,Ws,eC,iq,eC,Xk,eC,lr,eC,Hm,eC,Wp,eC,Dq,eC,qq,eC,Vp,eC,yq,eC,Tp,eC,Bq,eC,zr,eC,jl,eC,Eq,eC,Zs,eC,dq,eC,Ii,eC,El,eC,$s,eC,sq,eC,fq,eC,Ys,eC,hq,eC,cl,eC,tm,eC,ql,eC,qr,eC,nq,eC,Zp,eC,Yp,eC,Up,eC,oq,eC,pq,eC,zq,eC,eq,eC,eC,eC,eC,eC];var Hc=[fC,fC,Gw,fC,Hw,fC,Iw,fC,Jw,fC,Kw,fC,Lw,fC,Mw,fC,Nw,fC,Ow,fC,Pw,fC,Qw,fC,Rw,fC,Sw,fC,Tw,fC,Uw,fC,Vw,fC,Ww,fC,Xw,fC,Yw,fC,Zw,fC,Ur,fC,tl,fC,vf,fC,jf,fC,Or,fC,Qm,fC,Yr,fC,If,fC,fl,fC,ml,fC,Kr,fC,zf,fC,Wr,fC,Bf,fC,Ff,fC,Em,fC,Sm,fC,Mr,fC,nf,fC,lf,fC,sf,fC,Cm,fC,_k,fC,pf,fC,Df,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC,fC];var Ic=[gC,gC,$w,gC,ax,gC,bx,gC,cx,gC,dx,gC,ex,gC,fx,gC,gx,gC,hx,gC,ix,gC,jx,gC,kx,gC,lx,gC,mx,gC,nx,gC,ox,gC,px,gC,qx,gC,rx,gC,sx,gC,yn,gC,Vr,gC,Nr,gC,qk,gC,jk,gC,bu,gC,kd,gC,Qr,gC,Dn,gC,Ll,gC,Dm,gC,zm,gC,Gr,gC,Im,gC,or,gC,_r,gC,Lr,gC,Zk,gC,Ml,gC,Nm,gC,Xr,gC,jr,gC,um,gC,ll,gC,od,gC,Rm,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC,gC];var Jc=[hC,hC,ux,hC,vx,hC,wx,hC,xx,hC,yx,hC,zx,hC,Ax,hC,Bx,hC,Cx,hC,Dx,hC,Ex,hC,Fx,hC,Gx,hC,Hx,hC,Ix,hC,Jx,hC,Kx,hC,Lx,hC,Mx,hC,Nx,hC,dr,hC,Zq,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC,hC];var Kc=[iC,iC,Px,iC,Qx,iC,Rx,iC,Sx,iC,Tx,iC,Ux,iC,Vx,iC,Wx,iC,Xx,iC,Yx,iC,Zx,iC,_x,iC,$x,iC,ay,iC,by,iC,cy,iC,dy,iC,ey,iC,fy,iC,gy,iC,nt,iC,mq,iC,Am,iC,fs,iC,dt,iC,Bm,iC,lt,iC,aq,iC,jp,iC,bt,iC,sl,iC,Pm,iC,mu,iC,Om,iC,Hs,iC,ht,iC,ft,iC,Wt,iC,Hl,iC,Vs,iC,Ss,iC,gt,iC,Ts,iC,xm,iC,es,iC,Cq,iC,it,iC,Yk,iC,bq,iC,xs,iC,wq,iC,at,iC,dl,iC,Is,iC,xu,iC,mn,iC,Xp,iC,el,iC,Us,iC,ym,iC,Lm,iC,kl,iC,hs,iC,gq,iC,mt,iC,rl,iC,ws,iC,ns,iC,Mm,iC,Rp,iC,ct,iC,Sp,iC,Cl,iC,lq,iC,ps,iC,rq,iC,et,iC,xq,iC,ms,iC,xp,iC,kt,iC,jt,iC,As,iC,Ls,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC,iC];var Lc=[jC,jC,iy,jC,jy,jC,ky,jC,ly,jC,my,jC,ny,jC,oy,jC,py,jC,qy,jC,ry,jC,sy,jC,ty,jC,uy,jC,vy,jC,wy,jC,xy,jC,yy,jC,zy,jC,Ay,jC,By,jC,Kl,jC,nn,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC,jC];var Mc=[kC,kC,Dy,kC,Ey,kC,Fy,kC,Gy,kC,Hy,kC,Iy,kC,Jy,kC,Ky,kC,Ly,kC,My,kC,Ny,kC,Oy,kC,Py,kC,Qy,kC,Ry,kC,Sy,kC,Ty,kC,Uy,kC,Vy,kC,Wy,kC,ep,kC,cp,kC,To,kC,Qo,kC,kC,kC,kC,kC,kC,kC,kC,kC,kC,kC,kC,kC,kC,kC];var Nc=[lC,lC,Yy,lC,Zy,lC,_y,lC,$y,lC,az,lC,bz,lC,cz,lC,dz,lC,ez,lC,fz,lC,gz,lC,hz,lC,iz,lC,jz,lC,kz,lC,lz,lC,mz,lC,nz,lC,oz,lC,pz,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC,lC];var Oc=[mC,mC,rz,mC,sz,mC,tz,mC,uz,mC,vz,mC,wz,mC,xz,mC,yz,mC,zz,mC,Az,mC,Bz,mC,Cz,mC,Dz,mC,Ez,mC,Fz,mC,Gz,mC,Hz,mC,Iz,mC,Jz,mC,Kz,mC,js,mC,ts,mC,rs,mC,Es,mC,ks,mC,Cs,mC,bs,mC,cs,mC,mC,mC,mC,mC,mC,mC];var Pc=[nC,nC,Mz,nC,Nz,nC,Oz,nC,Pz,nC,Qz,nC,Rz,nC,Sz,nC,Tz,nC,Uz,nC,Vz,nC,Wz,nC,Xz,nC,Yz,nC,Zz,nC,_z,nC,$z,nC,aA,nC,bA,nC,cA,nC,dA,nC,Dp,nC,pp,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC,nC];var Qc=[oC,oC,fA,oC,gA,oC,hA,oC,iA,oC,jA,oC,kA,oC,lA,oC,mA,oC,nA,oC,oA,oC,pA,oC,qA,oC,rA,oC,sA,oC,tA,oC,uA,oC,vA,oC,wA,oC,xA,oC,yA,oC,Np,oC,Kp,oC,Hq,oC,Rq,oC,Lq,oC,Tq,oC,oC,oC,oC,oC,oC,oC,oC,oC,oC,oC];var Rc=[pC,pC,AA,pC,BA,pC,CA,pC,DA,pC,EA,pC,FA,pC,GA,pC,HA,pC,IA,pC,JA,pC,KA,pC,LA,pC,MA,pC,NA,pC,OA,pC,PA,pC,QA,pC,RA,pC,SA,pC,TA,pC,ju,pC,ap,pC,Yo,pC,Xo,pC,ku,pC,fp,pC,kr,pC,Jm,pC,Uo,pC,Io,pC,Oo,pC,Jo,pC,lu,pC,vm,pC,pr,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC,pC];var Sc=[qC,qC,VA,qC,WA,qC,XA,qC,YA,qC,ZA,qC,_A,qC,$A,qC,aB,qC,bB,qC,cB,qC,dB,qC,eB,qC,fB,qC,gB,qC,hB,qC,iB,qC,jB,qC,kB,qC,lB,qC,mB,qC,Jh,qC,Sg,qC,Hr,qC,Ir,qC,Zr,qC,ye,qC,Pr,qC,Ce,qC,Jr,qC,qC,qC,qC,qC];var Tc=[rC,rC,oB,rC,pB,rC,qB,rC,rB,rC,sB,rC,tB,rC,uB,rC,vB,rC,wB,rC,xB,rC,yB,rC,zB,rC,AB,rC,BB,rC,CB,rC,DB,rC,EB,rC,FB,rC,GB,rC,HB,rC,Rr,rC,vs,rC,Bn,rC,Js,rC,ys,rC,$r,rC,ls,rC,wn,rC,ds,rC,gs,rC,Gs,rC,os,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC,rC];var Uc=[sC,sC,JB,sC,KB,sC,LB,sC,MB,sC,NB,sC,OB,sC,PB,sC,QB,sC,RB,sC,SB,sC,TB,sC,UB,sC,VB,sC,WB,sC,XB,sC,YB,sC,ZB,sC,_B,sC,$B,sC,aC,sC,du,sC,eu,sC,cu,sC,wm,sC,Cn,sC,Km,sC,xn,sC,sC,sC,sC,sC,sC,sC,sC,sC];return{_strlen:Lu,_free:nu,_realloc:ou,_memmove:Ou,__GLOBAL__I_a:vl,_memset:Nu,_do_solve:md,_malloc:mu,_memcpy:Ku,_strcpy:Mu,runPostSets:jd,stackAlloc:Vc,stackSave:Wc,stackRestore:Xc,setThrew:Yc,setTempRet0:$c,setTempRet1:ad,setTempRet2:bd,setTempRet3:cd,setTempRet4:dd,setTempRet5:ed,setTempRet6:fd,setTempRet7:gd,setTempRet8:hd,setTempRet9:id,dynCall_viiiii:bv,dynCall_viiiiiii:wv,dynCall_vi:Rv,dynCall_vii:kw,dynCall_iii:Fw,dynCall_iiii:_w,dynCall_viiiiiid:tx,dynCall_ii:Ox,dynCall_viii:hy,dynCall_viiiiid:Cy,dynCall_v:Xy,dynCall_iiiiiiiii:qz,dynCall_viiiiiiiii:Lz,dynCall_viiiiiiii:eA,dynCall_viiiiii:zA,dynCall_iiiii:UA,dynCall_iiiiii:nB,dynCall_viiii:IB}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "jsCall": jsCall, "invoke_viiiii": invoke_viiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_viiiiid": invoke_viiiiid, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iiiii": invoke_iiiii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "__scanString": __scanString, "_fclose": _fclose, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_strtoull": _strtoull, "_fflush": _fflush, "__isLeapYear": __isLeapYear, "_llvm_stackrestore": _llvm_stackrestore, "_fwrite": _fwrite, "_send": _send, "_frexp": _frexp, "_fputs": _fputs, "_isspace": _isspace, "_read": _read, "_ceil": _ceil, "_isxdigit_l": _isxdigit_l, "_fileno": _fileno, "_fsync": _fsync, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "_fmod": _fmod, "___resumeException": ___resumeException, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_fgetc": _fgetc, "__getFloat": __getFloat, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_close": _close, "_isdigit_l": _isdigit_l, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "_exit": _exit, "_sprintf": _sprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_catgets": _catgets, "_asprintf": _asprintf, "___cxa_is_number_type": ___cxa_is_number_type, "_gmtime": _gmtime, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_recv": _recv, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "_llvm_stacksave": _llvm_stacksave, "_copysign": _copysign, "__exit": __exit, "_strftime": _strftime, "___cxa_throw": ___cxa_throw, "_pread": _pread, "_strtoull_l": _strtoull_l, "__arraySum": __arraySum, "_sysconf": _sysconf, "_strtoll_l": _strtoll_l, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_vfprintf": _vfprintf, "_pthread_mutex_unlock": _pthread_mutex_unlock, "___cxa_call_unexpected": ___cxa_call_unexpected, "_sbrk": _sbrk, "_localeconv": _localeconv, "___errno_location": ___errno_location, "_strerror": _strerror, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_vsprintf": _vsprintf, "_uselocale": _uselocale, "_gmtime_r": _gmtime_r, "_vsnprintf": _vsnprintf, "_sscanf": _sscanf, "___assert_fail": ___assert_fail, "_fread": _fread, "_strftime_l": _strftime_l, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "__addDays": __addDays, "_fabs": _fabs, "_floor": _floor, "__reallyNegative": __reallyNegative, "_sqrt": _sqrt, "_write": _write, "_mkport": _mkport, "___cxa_allocate_exception": ___cxa_allocate_exception, "_vasprintf": _vasprintf, "_catopen": _catopen, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_iscntrl": _iscntrl, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "_stdout": _stdout, "___dso_handle": ___dso_handle }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _memset = Module["_memset"] = asm["_memset"];
var _do_solve = Module["_do_solve"] = asm["_do_solve"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






Module['glpConstants'] = function () {

  return {
      /* direction: */
      GLP_MIN: 1  /* minimization */
    , GLP_MAX: 2  /* maximization */

      /* kind of structural variable: */
    , GLP_CV:  1  /* continuous variable */
    , GLP_IV:  2  /* integer variable */
    , GLP_BV:  3  /* binary variable */

      /* type of auxiliary/structural variable: */
    , GLP_FR:  1  /* free (unbounded) variable */
    , GLP_LO:  2  /* variable with lower bound */
    , GLP_UP:  3  /* variable with upper bound */
    , GLP_DB:  4  /* double-bounded variable */
    , GLP_FX:  5  /* fixed variable */

      /* message level: */
    , GLP_MSG_OFF: 0  /* no output */
    , GLP_MSG_ERR: 1  /* warning and error messages only */
    , GLP_MSG_ON:  2  /* normal output */
    , GLP_MSG_ALL: 3  /* full output */
    , GLP_MSG_DBG: 4  /* debug output */

      /* solution status: */
    , GLP_UNDEF:  1  /* solution is undefined */
    , GLP_FEAS:   2  /* solution is feasible */
    , GLP_INFEAS: 3  /* solution is infeasible */
    , GLP_NOFEAS: 4  /* no feasible solution exists */
    , GLP_OPT:    5  /* solution is optimal */
    , GLP_UNBND:  6  /* solution is unbounded */
  };

};


Module['solve'] = function (LP , msg_lev) {

  var ret = {
        time: 0
      , result: null
      , cson_error: ''
    }
    , json_in = JSON.stringify(LP)
    , start = new Date().getTime()
    ;

  /* TODO: can't figure out how to pass a char* to c to store JSON and read string from ptr. I am using a cb instead */
  var cb = Runtime.addFunction(
    function (rc, out) {
      var out_str = Pointer_stringify(out);
      if (rc === 0)
        ret.result = JSON.parse(out_str);
      else
        ret.cson_error = out_str; /* cson error string */
      ret.time = ((new Date().getTime() - start) / 1000);
    }
  );

  ccall('do_solve', 'number', ['string', 'number', 'number'], [json_in, cb, msg_lev])

  Runtime.removeFunction(cb);

  return ret;

};

